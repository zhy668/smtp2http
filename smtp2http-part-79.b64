ZndidWZTcGFuc0dDIChpZGxlKW1TcGFuRGVhZGluaXR0cmFjZXNjYXZ0cmFjZXBh
bmljd2FpdGNoYW4gc2VuZHByZWVtcHRlZGNvcm91dGluZXNpZ25hbCAzMnNpZ25h
bCAzM3NpZ25hbCAzNHNpZ25hbCAzNXNpZ25hbCAzNnNpZ25hbCAzN3NpZ25hbCAz
OHNpZ25hbCAzOXNpZ25hbCA0MHNpZ25hbCA0MXNpZ25hbCA0MnNpZ25hbCA0M3Np
Z25hbCA0NHNpZ25hbCA0NXNpZ25hbCA0NnNpZ25hbCA0N3NpZ25hbCA0OHNpZ25h
bCA0OXNpZ25hbCA1MHNpZ25hbCA1MXNpZ25hbCA1MnNpZ25hbCA1M3NpZ25hbCA1
NHNpZ25hbCA1NXNpZ25hbCA1NnNpZ25hbCA1N3NpZ25hbCA1OHNpZ25hbCA1OXNp
Z25hbCA2MHNpZ25hbCA2MXNpZ25hbCA2MnNpZ25hbCA2M3NpZ25hbCA2NGNvcHlz
dGFjayAtPiBub2RlPSBtcyBjcHUsICAoZm9yY2VkKSB3YnVmMS5uPSB3YnVmMi5u
PSBzLmxpbWl0PSBzLnN0YXRlPSBCIHdvcmsgKCBCIGV4cC4pICBtYXJrZWQgICB1
bm1hcmtlZCBpbiB1c2UpCiwgc2l6ZSA9IGJhZCBwcnVuZSwgdGFpbCA9IG5ld29z
cHJvY3JlY292ZXI6ICBub3QgaW4gW2N0eHQgIT0gMCwgb2xkdmFsPSwgbmV3dmFs
PSB0aHJlYWRzPTogc3RhdHVzPSBibG9ja2VkPSBsb2NrZWRnPWF0b21pY29yOCBy
dW50aW1lPSBzaWdjb2RlPSBtLT5jdXJnPSh1bmtub3duKXRvdGFsIDwgMHRyYWNl
YmFja30gc3RhY2s9WyBncC5nb2lkPSBsb2NrZWRtPUluaGVyaXRlZEJhc3NhX1Zh
aEJoYWlrc3VraUN1bmVpZm9ybUtodWRhd2FkaU1hbGF5YWxhbU1vbmdvbGlhbk5h
YmF0YWVhblBhbG15cmVuZVNhbWFyaXRhblN1bmRhbmVzZXRsc3JzYWtleCVzICV4
ICV4CkhhbmRzaGFrZXRlbXBlcnJvcnBlcm1lcnJvck1hY2ludG9zaCBvZiB0eXBl
IG9taXRlbXB0eWltYWdlL2JtcHZpZGVvL2F2aWZvbnQvd29mZjsgRG9tYWluPVsl
diA9ICVkXTpwcm90b2NvbHdlYnNvY2tldHZpZGVvL21wNHN1Y2NlZWRlZFNlZSBP
dGhlclVzZSBQcm94eUZvcmJpZGRlbk5vdCBGb3VuZFRvbyBFYXJseVRyYWlsZXI6
IHByb3RvY29sIG5pbCBlcnJvciVzICVxOiAlc2VtcHR5IHVybHVuaGFuZGxlZGVs
ZW1lbnQgPG5pbCB0cmFjZUNsYXNzSU5FVEF1dGhvcml0eXF1ZXN0aW9uc21hdGgv
cmFuZGQubnggIT0gMGluZm9faGFzaFJTQVNIQTI1NlJTQVNIQTUxMk5vdCBSZWFk
eUJBRENPT0tJRW1hbmRhdG9yeWZsYWdzOiA7IAo7IE5TSUQ6IHVuZGVyZmxvd0lu
c3RNYXRjaEluc3RSdW5lMVs6YWxudW06XVs6YWxwaGE6XVs6YXNjaWk6XVs6Ymxh
bms6XVs6Y250cmw6XVs6ZGlnaXQ6XVs6Z3JhcGg6XVs6bG93ZXI6XVs6cHJpbnQ6
XVs6cHVuY3Q6XVs6c3BhY2U6XVs6dXBwZXI6XVs6XndvcmQ6XWNTSEFLRTEyOHN0
cmljdC1zcGZyYXRlLWxpbWl0KEJBRElOREVYKSUhKE5PVkVSQil0aW1lLkRhdGUo
dGltZS5Mb2NhbCUhV2Vla2RheShzaG9ydCByZWFkWzo6XToyNTAyNVJlc2VudC1C
Y2NNZXNzYWdlLUlEUmVmZXJlbmNlc3RleHQvcGxhaW47IGNoYXJzZXQ9Q29udGVu
dC1JZFVzZXItQWdlbnQvZXRjL2hvc3RzICBuZXRHbyA9IGdldHNvY2tvcHRuZXRs
aW5rcmliSVAgYWRkcmVzc3NldHNvY2tvcHR1bml4cGFja2V0aW1hZ2UvanBlZ2lt
YWdlL3dlYnBpc28tODg1OS0xQ29ubmVjdGlvbk1lc3NhZ2UtSWRTZXQtQ29va2ll
MTIyMDcwMzEyNTYxMDM1MTU2MjVQYXJzZUZsb2F0L2Rldi9zdGRpbnJlYWRkaXJl
bnRwaWRmZF9vcGVucGlkZmRfd2FpdGNvbXBsZXgxMjh0LktpbmQgPT0gbm90aWZ5
TGlzdHByb2ZJbnNlcnRzdGFja0xhcmdlTm90IHdvcmtlcm1TcGFuSW5Vc2VHT01B
WFBST0NTc3RvcCB0cmFjZWRpc2FibGV0aHBpbnZhbGlkcHRyc2NoZWR0cmFjZXNl
bWFjcXVpcmVkZWJ1ZyBjYWxsIGZsdXNoR2VuICBNQiBnb2FsLCBzLnN0YXRlID0g
IHMuYmFzZSgpPSBoZWFwR29hbD1HT01FTUxJTUlUIEtpQiBub3csICBwYWdlcyBh
dCAgc3dlZXBnZW49IHN3ZWVwZ2VuICwgYm91bmQgPSAsIGxpbWl0ID0gIHJldHVy
bmVkICxlcnJubz0wfQpCYWQgdmFyaW50R0MgZm9yY2VkCiBydW5xdWV1ZT0gc3Rv
cHdhaXQ9IHJ1bnFzaXplPSBnZnJlZWNudD0gdGhyb3dpbmc9IHNwaW5uaW5nPWF0
b21pY2FuZDhmbG9hdDY0bmFuZmxvYXQzMm5hbiBwdHJTaXplPSAgdGFyZ2V0cGM9
IHVudGlsIHBjPWFjdGl2ZSA8IDB1bmtub3duIHBjcnVudGltZTogZ2dvcm91dGlu
ZSBDaG9yYXNtaWFuRGV2YW5hZ2FyaUdsYWdvbGl0aWNLaGFyb3NodGhpTWFuaWNo
YWVhbk9sZF9JdGFsaWNPbGRfUGVybWljT2xkX1R1cmtpY09sZF9VeWdodXJQaG9l
bmljaWFuU2F1cmFzaHRyYW93bmVyIGRpZWRSRVFVSVJFVExTT0s6IHF1ZXVlZFBJ
UEVMSU5JTkdyZXMgYmluZGVycmVzIG1hc3RlcnJlc3VtcHRpb25leHAgbWFzdGVy
cG9zdG1hc3Rlcg0KLS0lcy0tDQpJU08gODg1OS0xSVNPIDg4NTktMklTTyA4ODU5
LTNJU08gODg1OS00SVNPIDg4NTktNUlTTyA4ODU5LTZJU08gODg1OS03SVNPIDg4
NTktOElTTyA4ODU5LTl4NTA5cnNhY3J0U0hBMjU2LVJTQVNIQTM4NC1SU0FTSEE1
MTItUlNBRFNBLVNIQTI1NkVDRFNBLVNIQTEgZm9yIHR5cGUgYXVkaW8vYWlmZmF1
ZGlvL21wZWdhdWRpby9taWRpYXVkaW8vd2F2ZXZpZGVvL3dlYm1mb250L3dvZmYy
UlNUX1NUUkVBTUVORF9TVFJFQU07IEV4cGlyZXM9OyBNYXgtQWdlPTsgSHR0cE9u
bHkgc3RyZWFtPSVkc2V0LWNvb2tpZXVzZXItYWdlbnRrZWVwLWFsaXZlOmF1dGhv
cml0eWNvbm5lY3Rpb25Ib3N0OiAlcw0Kc29ja3MgYmluZFByb2Nlc3NpbmdObyBD
b250ZW50JXN8JXMlc3wlcyBidXQgaGF2ZSBQYXJzZUFkZHIoaW52YWxpZCBJUENs
YXNzQ1NORVRDbGFzc0NIQU9TQWRkaXRpb25hbHNraXBwaW5nOiBpc05lb3ZlcnNl
ZXhlY2VycmRvdGh0dHAyZGVidWdyc2ExMDI0bWluY3J5cHRvL3JzYWNyeXB0by90
bHN3aW5zeW1saW5rUklQRU1ELTE2MENvdW50ZXJLREZiYXNlX25vbmNlTUwtS0VN
LTc2OE1MLUtFTSBQQ1RQUklWQVRFRE5TUFJJVkFURU9JRFByb2hpYml0ZWROU0VD
M1BBUkFNT1BFTlBHUEtFWSBhdCBsaW5lOiBpbXBvc3NpYmxlUE9TVEFMQ09ERUhU
VFBfUFJPWFlodHRwX3Byb3h5WzpeYWxudW06XVs6XmFscGhhOl1bOl5hc2NpaTpd
WzpeYmxhbms6XVs6XmNudHJsOl1bOl5kaWdpdDpdWzpeZ3JhcGg6XVs6Xmxvd2Vy
Ol1bOl5wcmludDpdWzpecHVuY3Q6XVs6XnNwYWNlOl1bOl51cHBlcjpdWzp4ZGln
aXQ6XXJ1bmUgPG5pbD5pbmJvdW5kLWtleSUhKEJBRFBSRUMpdGltZTogZmlsZSBS
ZXNlbnQtRnJvbUluLVJlcGx5LVRvUmVzZW50LURhdGVuaWwgY29udGV4dCVzICAl
cyAgJXMKV0FSTiBSRVNUWSBzdWJtaXNzaW9uc2kvbyB0aW1lb3V0cGFyc2UgZXJy
b3JmaW5hbCB0b2tlbnNob3J0IHdyaXRlUmV0dXJuLVBhdGgzMDUxNzU3ODEyNS9k
ZXYvc3Rkb3V0L2Rldi9zdGRlcnJ1bnJlYWNoYWJsZWJhZCBhcmdTaXplbWV0aG9k
YXJncyhyZWZsZWN0LlNldGFzc2lzdFF1ZXVlbmV0cG9sbEluaXRyZWZsZWN0T2Zm
c2dsb2JhbEFsbG9jbVNwYW5NYW51YWxzdGFydCB0cmFjZWNsb2JiZXJmcmVlZ2Nj
aGVja21hcmtzY2hlZGRldGFpbHVuc3BlY2lmaWVkY2dvY2FsbCBuaWwgcy5uZWxl
bXM9ICAgb2Ygc2l6ZSAgKSByZXR1cm5lZCBydW50aW1lOiBwICBtcyBjbG9jaywg
IG5CU1NSb290cz1ydW50aW1lOiBQICBleHAuKSBmb3IgbWluVHJpZ2dlcj1HT01F
TUxJTUlUPWJhZCBtIHZhbHVlLCBlbGVtc2l6ZT0gZnJlZWluZGV4PSBzcGFuLmxp
c3Q9LCBucGFnZXMgPSAsIGExMjM0NTY9WyBwLT5zdGF0dXM9IGluIHN0YXR1cyAg
aWRsZXByb2NzPSBnY3dhaXRpbmc9IHNjaGVkdGljaz0gdGltZXJzbGVuPSBtYWxs
b2Npbmc9YmFkIHRpbWVkaXZmbG9hdDY0bmFuMWZsb2F0NjRuYW4yZmxvYXQ2NG5h
bjNmbG9hdDMybmFuMkdPVFJBQ0VCQUNLKSBhdCBlbnRyeSsgKHRhcmdldHBjPSAs
IHBsdWdpbjogcnVubmluZyA8IDBydW50aW1lOiBnIDogZnJhbWUuc3A9Y3JlYXRl
ZCBieSBEaXZlc19Ba3VydU1lZGVmYWlkcmluTmFnX011bmRhcmlOYW5kaW5hZ2Fy
aU5ld19UYWlfTHVlT2xkX1BlcnNpYW5PbGRfU29nZGlhblBhdV9DaW5fSGF1U2ln
bldyaXRpbmdXYXJhbmdfQ2l0aWJhZCBhZGRyZXNzZmlsZSBleGlzdHNicm9rZW4g
cGlwZWJhZCBtZXNzYWdlQmFkIGNvbW1hbmR0bHMxMHNlcnZlcnRsczogYWxlcnQo
bG9jYWwgZXJyb3JjIGUgdHJhZmZpY3RyYWZmaWMgdXBkQXBwbGljYXRpb25JU08t
ODg1OS02RUlTTy04ODU5LTZJSVNPLTg4NTktOEVJU08tODg1OS04SUlTTyA4ODU5
LTEwSVNPIDg4NTktMTNJU08gODg1OS0xNElTTyA4ODU5LTE1SVNPIDg4NTktMTZX
aW5kb3dzIDg3NGludmFsaWQgb2lkTWFyc2hhbEpTT05NYXJzaGFsVGV4dGh0dHAy
c2VydmVyaHR0cDJjbGllbnRFTkRfSEVBREVSU0VOQUJMRV9QVVNIQ29va2llLlBh
dGg7IE1heC1BZ2U9MC9pbmRleC5odG1sIEVyckNvZGU9JXYsIHNldHRpbmdzOnJl
dHJ5LWFmdGVyVFRMIGV4cGlyZWRFYXJseSBIaW50c0JhZCBSZXF1ZXN0QmFkIEdh
dGV3YXk+IGluIHNwYWNlIC5XaXRoQ2FuY2VsLldpdGhWYWx1ZShyYW5kc2VlZG5v
cENsYXNzSEVTSU9EYXV0aG9yaXRpZXNhZGRpdGlvbmFsc2dvY2FjaGVoYXNoZ29j
YWNoZXRlc3RhcmNoaXZlL3RhcmNyeXB0by94NTA5YXJjaGl2ZS96aXBTSEEtNTEy
LzIyNFNIQS01MTIvMjU2QkxBS0Uycy0yNTZCTEFLRTJiLTI1NkJMQUtFMmItMzg0
QkxBS0UyYi01MTJwc2tfaWRfaGFzaGZsYWdzOiBkbzsgCjsgU1VCTkVUOiAKOyBD
T09LSUU6IEhUVFBTX1BST1hZaHR0cHNfcHJveHlJbnN0Q2FwdHVyZUluc3RSdW5l
QW55WzpeeGRpZ2l0Ol10aW1lb3V0LnJlYWRDb250ZW50LVR5cGUlIShCQURXSURU
SClIT1NUICAgOiAlcwpIRUFERVJTOgolcwpCT0RZICAgOgoldgpFUlJPUiBSRVNU
WSBERUJVRyBSRVNUWSBtdWx0aXBhdGh0Y3AxMjcuMC4wLjE6NTNubyBzdWNoIGhv
c3R1bmtub3duIHBvcnRDSURSIGFkZHJlc3NpbnZhbGlkIHBvcnRjYW4ndCBoYXBw
ZW5zaG9ydCBidWZmZXJNaW1lLVZlcnNpb25YLUltZm9yd2FyZHNYLVBvd2VyZWQt
QnlMaXR0bGVFbmRpYW4xNTI1ODc4OTA2MjU3NjI5Mzk0NTMxMjVyZWZsZWN0LkNv
cHlzd2VlcFdhaXRlcnN0cmFjZVN0cmluZ3NzcGFuU2V0U3BpbmVtc3BhblNwZWNp
YWx0cmFjZVR5cGVUYWJnY0JpdHNBcmVuYXNtaGVhcFNwZWNpYWxnY3BhY2VydHJh
Y2VoYXJkZGVjb21taXRtYWR2ZG9udG5lZWRkdW1waW5nIGhlYXBjaGFuIHJlY2Vp
dmVzeW5jdGVzdC5SdW5MSU5VWF8yLjYuMzlsZnN0YWNrLnB1c2ggc3Bhbi5saW1p
dD0gc3Bhbi5zdGF0ZT1iYWQgZmx1c2hHZW4gTUIgc3RhY2tzLCB3b3JrZXIgbW9k
ZSAgbkRhdGFSb290cz0gblNwYW5Sb290cz0gd2J1ZjE9PG5pbD4gd2J1ZjI9PG5p
bD4gZ2NzY2FuZG9uZSBydW50aW1lOiBncD0gZm91bmQgYXQgKiggcy5lbGVtc2l6
ZT0gQiAo4oiGZ29hbCAsIGNvbnMvbWFyayAgbWF4VHJpZ2dlcj0gcGFnZXMvYnl0
ZQogcy5zd2VlcGdlbj0gYWxsb2NDb3VudCB0aW1lcl9kZWxldGVuc30gdmFsdWU6
IHt9LCB3YW50IHtyMT0gW3JlY292ZXJlZF1iYWQgcmVjb3ZlcnlHT1RSQUNFQkFD
Sz1iYWQgZyBzdGF0dXNlbnRlcnN5c2NhbGx3aXJlcDogcC0+bT0pIHAtPnN0YXR1
cz1yZWxlYXNlcDogbT0gc3lzbW9ud2FpdD0gcHJlZW1wdG9mZj1jYXM2NCBmYWls
ZWQgbS0+Z3NpZ25hbD0tYnl0ZSBsaW1pdApydW50aW1lOiBzcD1hYmkgbWlzbWF0
Y2hvdXQgb2YgcmFuZ2V3cm9uZyB0aW1lcnNDeXByb19NaW5vYW5NZWV0ZWlfTWF5
ZWtQYWhhd2hfSG1vbmdTb3JhX1NvbXBlbmdTeWxvdGlfTmFncmlpbGxlZ2FsIHNl
ZWtpbnZhbGlkIHNsb3Rob3N0IGlzIGRvd25zbXRwL3NlcnZlciB0bHN1bnNhZmVl
a21jbG9zZSBub3RpZnlyZW1vdGUgZXJyb3JjIGhzIHRyYWZmaWNzIGhzIHRyYWZm
aWNjIGFwIHRyYWZmaWNzIGFwIHRyYWZmaWNlbXB0eSBkb21haW5XaW5kb3dzIDEy
NTBXaW5kb3dzIDEyNTFXaW5kb3dzIDEyNTJXaW5kb3dzIDEyNTNXaW5kb3dzIDEy
NTRXaW5kb3dzIDEyNTVXaW5kb3dzIDEyNTZXaW5kb3dzIDEyNTdXaW5kb3dzIDEy
NThFQ0RTQS1TSEEyNTZFQ0RTQS1TSEEzODRFQ0RTQS1TSEE1MTJTU0xfQ0VSVF9E
SVJodHRwbXV4Z28xMjFpbWFnZS94LWljb25QVVNIX1BST01JU0VDT05USU5VQVRJ
T05Db29raWUuVmFsdWVjb250ZW50LXR5cGVtYXgtZm9yd2FyZHNodHRwMmRlYnVn
PTFodHRwMmRlYnVnPTIxMDAtY29udGludWVyZWN2X2dvYXdheV9NdWx0aS1TdGF0
dXNOb3QgTW9kaWZpZWRVbmF1dGhvcml6ZWRJJ20gYSB0ZWFwb3ROb3QgRXh0ZW5k
ZWRwcm94eWNvbm5lY3Q+IGJ1dCBoYXZlIDxTYW1lU2l0ZT1MYXhyYW5kYXV0b3Nl
ZWRSQ29kZVN1Y2Nlc3NSQ29kZVJlZnVzZWRub3QgcG9sbGFibGVnb3R5cGVzYWxp
YXNTdGFsZSBBbnN3ZXJETlNTRUMgQm9ndXNOU0VDIE1pc3NpbmdDYWNoZWQgRXJy
b3JJbnZhbGlkIERhdGEKOyBQQURESU5HOiBpbnZhbGlkIGJhc2VTRVJJQUxOVU1C
RVIgKHNlbnNpdGl2ZSlJbnN0QWx0TWF0Y2h1bmV4cGVjdGVkIClhbHRtYXRjaCAt
PiBhbnlub3RubCAtPiAvZGV2L3VyYW5kb211bmtub3duIHNpemVjYWxsZXIgZXJy
b3J0aW1lb3V0LndyaXRlc3BhbS1rZXl3b3Jkc1JhdGUgbGltaXQgT0tYLUluYm91
bmQtS2V5L2V0Yy96b25laW5mb3BhcnNpbmcgdGltZSAgb3V0IG9mIHJhbmdlIGlz
IHRvbyBsYXJnZVJlc2VudC1TZW5kZXJBdXRob3JpemF0aW9uJXM6Ly8lczolZC8l
c2xhbWUgcmVmZXJyYWwvZXRjL3NlcnZpY2VzVXNhZ2Ugb2YgJXM6CiAoZGVmYXVs
dCAlcSkgKGRlZmF1bHQgJXYpQWNjZXB0LVJhbmdlc0NhY2hlLUNvbnRyb2xJZi1O
b25lLU1hdGNoTGFzdC1Nb2RpZmllZDM4MTQ2OTcyNjU2MjVpbnZhbGlkIGJhc2Ug
ZGFsVExEcFN1Z2N0P3dha2VhYmxlU2xlZXBwcm9mTWVtQWN0aXZlcHJvZk1lbUZ1
dHVyZXRyYWNlU3RhY2tUYWJleGVjUkludGVybmFsdGVzdFJJbnRlcm5hbEdDIHN3
ZWVwIHdhaXRzeW5jdGVzdC5XYWl0U0lHUVVJVDogcXVpdFNJR0tJTEw6IGtpbGxv
dXQgb2YgbWVtb3J5IGlzIG5pbCwgbm90IHZhbHVlIG1ldGhvZCAgc3Bhbi5iYXNl
KCk9YmFkIGZsdXNoR2VuICwgbm90IHBvaW50ZXIgIT0gc3dlZXBnZW4gIE1CIGds
b2JhbHMsICB3b3JrLm5wcm9jPSAgd29yay5ud2FpdD0gIG5TdGFja1Jvb3RzPSBm
bHVzaGVkV29yayBkb3VibGUgdW5sb2NrIHMuc3BhbmNsYXNzPSBNQikgd29ya2Vy
cz1taW4gdG9vIGxhcmdlLWJ5dGUgYmxvY2sgKHJ1bnRpbWU6IHZhbD1ydW50aW1l
OiBzZXE9IGZhaWxlZCB3aXRoIHRpbWVyX3NldHRpbWVmYXRhbCBlcnJvcjogIGlk
bGV0aHJlYWRzPSBzeXNjYWxsdGljaz1sb2FkNjQgZmFpbGVkeGFkZDY0IGZhaWxl
ZHhjaGc2NCBmYWlsZWRtcC5nMCBzdGFjayBbbmlsIHN0YWNrYmFzZX0KCXNjaGVk
PXtwYzosIGdwLT5zdGF0dXM9IHBsdWdpbnBhdGg9IDogdW5rbm93biBwYyAgY2Fs
bGVkIGZyb20gcnVudGltZTogcGlkPUd1bmphbGFfR29uZGlNYXNhcmFtX0dvbmRp
TWVuZGVfS2lrYWt1aU9sZF9IdW5nYXJpYW5sZXZlbCAzIHJlc2V0ZXhjaGFuZ2Ug
ZnVsbHRpbWVyIGV4cGlyZWRzcm1vdW50IGVycm9yU2Vzc2lvbiByZXNldHRsc21h
eHJzYXNpemVhY2Nlc3MgZGVuaWVkdXNlciBjYW5jZWxlZFBLQ1MxV2l0aFNIQTFF
Q0RTQVdpdGhTSEExQ0xJRU5UX1JBTkRPTW1hc3RlciBzZWNyZXRrZXkgZXhwYW5z
aW9uU0hBMjU2LVJTQVBTU1NIQTM4NC1SU0FQU1NTSEE1MTItUlNBUFNTU1NMX0NF
UlRfRklMRWVtYWlsIGFkZHJlc3NTVFJFQU1fQ0xPU0VEQ09OTkVDVF9FUlJPUldJ
TkRPV19VUERBVEU7IFBhcnRpdGlvbmVkW0ZyYW1lSGVhZGVyIGFjY2VwdC1yYW5n
ZXNhdXRob3JpemF0aW9uY2FjaGUtY29udHJvbGNvbnRlbnQtcmFuZ2VpZi1ub25l
LW1hdGNobGFzdC1tb2RpZmllZEZRRE4gdG9vIGxvbmdzb2NrcyBjb25uZWN0UmVz
ZXQgQ29udGVudExvb3AgRGV0ZWN0ZWRmaWVsZCBuYW1lICVxIGluIGhvc3QgbmFt
ZXVua25vd24gdHlwZSBubyBuYW1lIHNwYWNlIGNsb3NlZCBieSA8L2ludmFsaWQg
VVRGLThuYW1lIHRvbyBsb25nY3J5cHRvL3N1YnRsZWdvY2FjaGV2ZXJpZnlpbnN0
YWxsZ29yb290aHRtbC90ZW1wbGF0ZWludmFsaWQgQVNOLjFiYWQgSVYgbGVuZ3Ro
c2hhcmVkX3NlY3JldEhLREYtU0hBMi0yNTZGb3JnZWQgQW5zd2VyTm90IFN1cHBv
cnRlZE5ldHdvcmsgRXJyb3JlbXB0eSBpbnRlZ2VydW5zdXBwb3J0ZWQ6IGd6aXAs
IGRlZmxhdGUjZmFpbGZpcHNjYXN0SE1BQy1TSEEyLTI1NnNob3J0IG1lc3NhZ2VE
b21haW4gYWxsb3dlZE5vIGF0dGFjaG1lbnRzQXR0YWNobWVudHMgT0thc3luY3Rp
bWVyY2hhbnRpbWUuTG9jYXRpb24oOiBleHRyYSB0ZXh0OiBDb250ZW50LUxlbmd0
aCV2LCBBdHRlbXB0ICV2aW50ZXJuYWwgZXJyb3IvZXRjL3Byb3RvY29sc3Vua25v
d24gbW9kZTogdW5leHBlY3RlZCBFT0ZBY2NlcHQtQ2hhcnNldERraW0tU2lnbmF0
dXJlaW52YWxpZCBzeW50YXgxOTA3MzQ4NjMyODEyNTk1MzY3NDMxNjQwNjI1IG9u
IHplcm8gVmFsdWV1bmtub3duIG1ldGhvZHVuc2FmZS5Qb2ludGVydXNlckFyZW5h
U3RhdGVHQyAoZGVkaWNhdGVkKXJlYWQgbWVtIHN0YXRzZ2NzdG9wdGhld29ybGRw
cm9mc3RhY2tkZXB0aHRyYWNlYWxsb2NmcmVlR0MgYXNzaXN0IHdhaXRmaW5hbGl6
ZXIgd2FpdHN5bmMuQ29uZC5XYWl0U0lHQUJSVDogYWJvcnRzLmFsbG9jQ291bnQ9
IHJ1bnRpbWU6IG1tYXAobmlsIGVsZW0gdHlwZSEgdG8gZmluYWxpemVyIEdDIHdv
cmtlciBpbml0cnVudGltZTogZnVsbD1ydW50aW1lOiB3YW50PU1COyBhbGxvY2F0
ZWQgYmFkIHJlc3RhcnQgUEMsIGNhbGxlZCBmcm9tCi10aHJlYWQgbGltaXQKc3Rv
cG0gc3Bpbm5pbmcgbm1pZGxlbG9ja2VkPSBuZWVkc3Bpbm5pbmc9cmFuZGluaXQg
dHdpY2VzdG9yZTY0IGZhaWxlZHNlbWFSb290IHF1ZXVlYmFkIGFsbG9jQ291bnRi
YWQgc3BhbiBzdGF0ZXN0YWNrIG92ZXJmbG93IHVudHlwZWQgYXJncyAgb3V0IG9m
IHJhbmdlIG5vIG1vZHVsZSBkYXRhIGluIGdvcm91dGluZSBydW50aW1lOiBzZXEx
PXJ1bnRpbWU6IGdvaWQ9bm8gc3VjaCBkZXZpY2VpcyBhIGRpcmVjdG9yeXRleHQg
ZmlsZSBidXN5ZmlsZSB0b28gbGFyZ2V0b28gbWFueSBsaW5rc2xldmVsIDMgaGFs
dGVkbGV2ZWwgMiBoYWx0ZWRwcm90b2NvbCBlcnJvcnRvbyBtYW55IHVzZXJzJXYg
JXYuJXYuJXYgJXZJbnZhbGlkIGRvbWFpbmJhZCByZWNvcmQgTUFDWDI1NTE5TUxL
RU03NjhsaW1pdCBleGNlZWRlZHRvbyBtYW55ICJleHAidW5rbm93biByZXN1bHRY
LVVzZXItRGVmaW5lZC9ldGMvc3NsL2NlcnRzUFJPVE9DT0xfRVJST1JJTlRFUk5B
TF9FUlJPUlJFRlVTRURfU1RSRUFNTUFYX0ZSQU1FX1NJWkU7IFNhbWVTaXRlPUxh
eEVSUl9VTktOT1dOXyVkYWNjZXB0LWNoYXJzZXRjb250ZW50LWxlbmd0aHJlYWRf
ZnJhbWVfZW9mdW5rbm93biBlcnJvciB1bmtub3duIGNvZGU6IE5vdCBBY2NlcHRh
YmxlXC4rKj8oKXxbXXt9XiQ+IGNsb3NlZCBieSA8Ly5XaXRob3V0Q2FuY2VsLldp
dGhEZWFkbGluZShSQ29kZU5hbWVFcnJvclJlc291cmNlSGVhZGVydW5yZWFjaGFi
bGU6ICBjcnlwdG8vZmlwczE0MG1pbWUvbXVsdGlwYXJ0RFNBLU5TRUMzLVNIQTFE
TlNLRVkgTWlzc2luZ1JSU0lHcyBNaXNzaW5nCjsgS0VFUEFMSVZFOiAKOyBMT0NB
TCBPUFQ6IDIwMDYwMTAyMTUwNDA1ZGF0YSB0cnVuY2F0ZWRuZWVkIG1vcmUgZGF0
YVJFUVVFU1RfTUVUSE9ESW5zdEVtcHR5V2lkdGh1bmtub3duIGRzYnl0ZXRoZSBz
ZXJ2ZXIgbmFtZWFsbG93ZWQtZG9tYWluc2ZvcmJpZGRlbi10eXBlc21heC1hdHRh
Y2gtc2l6ZTogY2Fubm90IHBhcnNlICxNMy4yLjAsTTExLjEuMEhFQURFUlMgICAg
ICA6Cm1pc3NpbmcgYWRkcmVzc3Vua25vd24gbmV0d29yay9ldGMvbWltZS50eXBl
c2FwcGxpY2F0aW9uL3BkZigpPD5ALDs6XCIvW10/PUFjY2VwdC1FbmNvZGluZ0Fj
Y2VwdC1MYW5ndWFnZVgtRm9yd2FyZGVkLUZvcjQ3NjgzNzE1ODIwMzEyNXJlZmxl
Y3RsaXRlLlNldG5vdCBhIGRpcmVjdG9yeWNvcHlfZmlsZV9yYW5nZWludmFsaWQg
YXJnU2l6ZTxpbnZhbGlkIFZhbHVlPmFsbG9jbVJJbnRlcm5hbEdDIChmcmFjdGlv
bmFsKXdyaXRlIGhlYXAgZHVtcGFzeW5jcHJlZW1wdG9mZmZvcmNlIGdjIChpZGxl
KXN5bmMuTXV0ZXguTG9ja3J1bnRpbWUuR29zY2hlZG1hbGxvYyBkZWFkbG9ja3J1
bnRpbWUgZXJyb3I6IHNjYW4gbWlzc2VkIGEgZ21pc2FsaWduZWQgbWFza3J1bnRp
bWU6IG1pbiA9IHJ1bnRpbWU6IGluVXNlPXJ1bnRpbWU6IG1heCA9IHJlcXVlc3Rl
ZCBza2lwPWJhZCBwYW5pYyBzdGFja3JlY292ZXJ5IGZhaWxlZG1vcmVzdGFjayBv
biBnMHN0b3BtIGhvbGRpbmcgcHN0YXJ0bTogbSBoYXMgcHByZWVtcHQgU1BXUklU
RW1pc3NpbmcgbWNhY2hlP21zOiBnb21heHByb2NzPXJhbmRpbml0IG1pc3NlZF0K
CW1vcmVidWY9e3BjOjogbm8gZnJhbWUgKHNwPXJ1bnRpbWU6IGZyYW1lIHRzIHNl
dCBpbiB0aW1lcnRyYWNlYmFjayBzdHVja3VuZXhwZWN0ZWQga2luZEhhbmlmaV9S
b2hpbmd5YVBzYWx0ZXJfUGFobGF2aW5vIHN1Y2ggcHJvY2Vzc2FkdmVydGlzZSBl
cnJvcm5ldHdvcmsgaXMgZG93bm5vIG1lZGl1bSBmb3VuZGtleSBoYXMgZXhwaXJl
ZFRMUyBpcyByZXF1aXJlZEhhbmRzaGFrZSBlcnJvcng1MDlrZXlwYWlybGVhZnJl
Y29yZCBvdmVyZmxvd2JhZCBjZXJ0aWZpY2F0ZVBLQ1MxV2l0aFNIQTI1NlBLQ1Mx
V2l0aFNIQTM4NFBLQ1MxV2l0aFNIQTUxMkNsaWVudEF1dGhUeXBlKHVua25vd24g
dmVyc2lvbmNsaWVudCBmaW5pc2hlZHNlcnZlciBmaW5pc2hlZHg1MDl1c2Vwb2xp
Y2llc2FwcGxpY2F0aW9uL29nZ2ZvbnQvY29sbGVjdGlvbmFwcGxpY2F0aW9uL3pp
cDsgU2FtZVNpdGU9Tm9uZW5lZ2F0aXZlIHVwZGF0ZWFjY2VwdC1lbmNvZGluZ2Fj
Y2VwdC1sYW5ndWFnZXgtZm9yd2FyZGVkLWZvcmh0dHAyeGNvbm5lY3Q9MXJlY3Zf
cnN0c3RyZWFtX0lkZW1wb3RlbmN5LUtleVBhcnRpYWwgQ29udGVudFJlcXVlc3Qg
VGltZW91dExlbmd0aCBSZXF1aXJlZE5vdCBJbXBsZW1lbnRlZEdhdGV3YXkgVGlt
ZW91dHVuZXhwZWN0ZWQgdHlwZWJhZCB0cmFpbGVyIGtleXdyaXRlIGVycm9yOiAl
dyAobm8gc2VtaWNvbG9uKVNhbWVTaXRlPVN0cmljdGludmFsaWQgcG9pbnRlcmpz
dG1wbGxpdGludGVycHRhcmluc2VjdXJlcGF0aHppcGluc2VjdXJlcGF0aCBpcyB1
bmF2YWlsYWJsZTA2MDEwMjE1MDRaMDcwMEVDRFNBUDI1NlNIQTI1NkVDRFNBUDM4
NFNIQTM4NG5vLWRlZmF1bHQtYWxwbmludmFsaWQgYm9vbGVhbm5vbi1taW5pbWFs
IHRhZ3Vua25vd24gR28gdHlwZUVtYWlsIHJlamVjdGVkOiBhcHBsaWNhdGlvbi9q
c29ucGFyc2VBZGRyZXNzOiAlcW1haWw6IG5vIGFkZHJlc3N0aW1lOiBiYWQgWzAt
OV0qMDEyMzQ1Njc4OWFiY2RlZkludmFsaWQgQWRkcmVzczpDb250ZW50LUVuY29k
aW5naG9zdExvb2t1cE9yZGVyPS9ldGMvcmVzb2x2LmNvbmZub24tSVB2NCBhZGRy
ZXNzbm9uLUlQdjYgYWRkcmVzc3Vua25vd24gbmV0d29yayBubyBjb2xvbiBvbiBs
aW5lYXBwbGljYXRpb24vd2FzbTAxMjM0NTY3ODlBQkNERUZDb250ZW50LUxhbmd1
YWdlYmluYXJ5LkJpZ0VuZGlhbjIzODQxODU3OTEwMTU2MjU6IHZhbHVlIG9mIHR5
cGUgcmVmbGVjdC5NYWtlRnVuY2ludGVnZXIgb3ZlcmZsb3dnY3Nocmlua3N0YWNr
b2ZmdHJhY2VmcHVud2luZG9mZkdDIHNjYXZlbmdlIHdhaXRHQyB3b3JrZXIgKGlk
bGUpcGFnZSB0cmFjZSBmbHVzaFNJR05PTkU6IG5vIHRyYXAvZ2MvZ29nYzpwZXJj
ZW50LCBub3QgYSBmdW5jdGlvbmdjOiB1bnN3ZXB0IHNwYW4gS2lCIHdvcmsgKGJn
KSwgIG1oZWFwLnN3ZWVwZ2VuPXJ1bnRpbWU6IG5lbGVtcz13b3JrYnVmIGlzIGVt
cHR5bVNwYW5MaXN0LnJlbW92ZW1TcGFuTGlzdC5pbnNlcnRiYWQgc3BlY2lhbCBr
aW5kYmFkIHN1bW1hcnkgZGF0YXJ1bnRpbWU6IGFkZHIgPSBydW50aW1lOiBiYXNl
ID0gcnVudGltZTogaGVhZCA9ICBhbHJlYWR5OyBlcnJubz0KcnVudGltZSBzdGFj
azoKaW52YWxpZCBnIHN0YXR1c0dPVFJBQ0VCQUNLPW5vbmVjYXN0b2dzY2Fuc3Rh
dHVzYmFkIGcgdHJhbnNpdGlvbnNjaGVkdWxlOiBpbiBjZ29yZWZsZWN0IG1pc21h
dGNoIHVudHlwZWQgbG9jYWxzIG1pc3Npbmcgc3RhY2ttYXBiYWQgc3ltYm9sIHRh
Ymxlbm9uLUdvIGZ1bmN0aW9uCnBvaW50ZXJsZXNzIHR5cGUgbm90IGluIHJhbmdl
czoKc2lnYWN0aW9uIGZhaWxlZEltcGVyaWFsX0FyYW1haWNNZXJvaXRpY19DdXJz
aXZlWmFuYWJhemFyX1NxdWFyZWludmFsaWQgYXJndW1lbnRpbnZhbGlkIGV4Y2hh
bmdlb2JqZWN0IGlzIHJlbW90ZW1lc3NhZ2UgdG9vIGxvbmdubyByb3V0ZSB0byBo
b3N0cmVtb3RlIEkvTyBlcnJvcm5vIHJlbmVnb3RpYXRpb25TaWduYXR1cmVTY2hl
bWUocXVvdGVkLXByaW50YWJsZSgpPD5ALDs6XCIvW10/PSBhZnRlciBvYmplY3Qg
a2V5U0VUVElOR1NfVElNRU9VVEZSQU1FX1NJWkVfRVJST1Jjb250ZW50LWVuY29k
aW5nY29udGVudC1sYW5ndWFnZWNvbnRlbnQtbG9jYXRpb253d3ctYXV0aGVudGlj
YXRlcHJveHktY29ubmVjdGlvbnJlYWRfZnJhbWVfb3RoZXJVbmVuY3J5cHRlZEhU
VFAyJXMgJXMgSFRUUC8xLjENClVzZXItQWdlbnQ6ICVzDQpob3N0IHVucmVhY2hh
YmxlQWxyZWFkeSBSZXBvcnRlZE11bHRpcGxlIENob2ljZXNQYXltZW50IFJlcXVp
cmVkVXBncmFkZSBSZXF1aXJlZENvbnRlbnQtTGVuZ3RoOiByZWdleHA6IENvbXBp
bGUoPiBpbiBuYW1lIHNwYWNlIGNvbnRleHQgY2FuY2VsZWRpbnZhbGlkIGRucyBu
YW1lUkNvZGVGb3JtYXRFcnJvcnVucGFja2luZyBoZWFkZXJHT0RFQlVHOiB2YWx1
ZSAiW2Jpc2VjdC1tYXRjaCAweEludmFsaWQgcmVzcG9uc2VUTFN2MS4zLVNIQTIt
MjU2VExTdjEuMi1TSEEyLTI1Nmxlbmd0aCB0b28gbGFyZ2VkaXZpc2lvbiBieSB6
ZXJvaW52YWxpZCBlbmNvZGluZ0luc3RSdW5lQW55Tm90TkxibGFja2xpc3QtZG9t
YWluc21haWw6IGVtcHR5IGdyb3VwMDEyMzQ1Njc4OUFCQ0RFRlgwMTIzNDU2Nzg5
YWJjZGVmeHJlZmxlY3QuVmFsdWUuSW50Y29ycnVwdCB6aXAgZmlsZSBmcmFjdGlv
bmFsIHNlY29uZG11bHRpcGFydC9yZWxhdGVkUmVzZW50LU1lc3NhZ2UtSUR+fn4g
UkVTUE9OU0Ugfn5+Cm1lc3NhZ2UgdG9vIGxhcmdlSWYtTW9kaWZpZWQtU2luY2Ux
MTkyMDkyODk1NTA3ODEyNTU5NjA0NjQ0Nzc1MzkwNjI1aW52YWxpZCBiaXQgc2l6
ZSByZWZsZWN0OiBjYWxsIG9mIHJlZmxlY3QuVmFsdWUuTGVucGlkZmRfc2VuZF9z
aWduYWx1bmtub3duIHR5cGUga2luZHJlZmxlY3Q6IE5ldyhuaWwpZ29yb3V0aW5l
IHByb2ZpbGVBbGxUaHJlYWRzU3lzY2FsbEdDIGFzc2lzdCBtYXJraW5nc2VsZWN0
IChubyBjYXNlcylzeW5jLlJXTXV0ZXguTG9ja3dhaXQgZm9yIEdDIGN5Y2xldHJh
Y2UgcHJvYyBzdGF0dXNzZWxlY3QgKHN5bmN0ZXN0KVNJR0lOVDogaW50ZXJydXB0
U0lHQlVTOiBidXMgZXJyb3JTSUdDT05UOiBjb250aW51ZXN5bmMuKCpDb25kKS5X
YWl0OiBtaXNzaW5nIG1ldGhvZCBub3RldHNsZWVwZyBvbiBnMGJhZCBUaW55U2l6
ZUNsYXNzcnVudGltZTogcG9pbnRlciBnIGFscmVhZHkgc2Nhbm5lZG1hcmsgLSBi
YWQgc3RhdHVzc2Nhbm9iamVjdCBuID09IDBzd2VwdCBjYWNoZWQgc3Bhbm1hcmtC
aXRzIG92ZXJmbG93cnVudGltZTogc3VtbWFyeVtydW50aW1lOiBsZXZlbCA9ICwg
cC5zZWFyY2hBZGRyID0gZnV0ZXh3YWtldXAgYWRkcj0sIDAsIHtpbnRlcnZhbDog
e25zfX0sIG5pbCkgZXJybm89cmVzdWx0czogZ290IHtyMT1ydW50aW1lL2ludGVy
bmFsL2ludGVybmFsL3J1bnRpbWUvdGhyZWFkIGV4aGF1c3Rpb25sb2NrZWQgbTAg
d29rZSB1cGVudGVyc3lzY2FsbGJsb2NrIHNwaW5uaW5ndGhyZWFkcz1ncC53YWl0
aW5nICE9IG5pbHVua25vd24gY2FsbGVyIHBjLCBzeW5jdGVzdCBncm91cCBzdGFj
azogZnJhbWU9e3NwOnJ1bnRpbWU6IG5hbWVPZmYgcnVudGltZTogdHlwZU9mZiBy
dW50aW1lOiB0ZXh0T2ZmIE9sZF9Ob3J0aF9BcmFiaWFuT2xkX1NvdXRoX0FyYWJp
YW5leGVjIGZvcm1hdCBlcnJvcnBlcm1pc3Npb24gZGVuaWVkbm8gZGF0YSBhdmFp
bGFibGVzdGFsZSBmaWxlIGhhbmRsZXdyb25nIG1lZGl1bSB0eXBlTWlzc2luZyBw
YXJhbWV0ZXJUTFMgbm90IHN1cHBvcnRlZGRlY3J5cHRpb24gZmFpbGVkaGFuZHNo
YWtlIGZhaWx1cmVpbGxlZ2FsIHBhcmFtZXRlcm1pc3NpbmcgZXh0ZW5zaW9udW5y
ZWNvZ25pemVkIG5hbWVtdWx0aXBhcnRtYXhwYXJ0c0lCTSBDb2RlIFBhZ2UgMDM3
SUJNIENvZGUgUGFnZSA0MzdJQk0gQ29kZSBQYWdlIDg1MElCTSBDb2RlIFBhZ2Ug
ODUySUJNIENvZGUgUGFnZSA4NTVJQk0gQ29kZSBQYWdlIDg2MElCTSBDb2RlIFBh
Z2UgODYySUJNIENvZGUgUGFnZSA4NjNJQk0gQ29kZSBQYWdlIDg2NUlCTSBDb2Rl
IFBhZ2UgODY2L2V0Yy9zc2wvY2VydC5wZW1pbnZhbGlkIEJNUFN0cmluZ2ludmFs
aWQgSUE1U3RyaW5naW4gc3RyaW5nIGxpdGVyYWxpbnZhbGlkIHN0cmVhbSBJRFRy
YW5zZmVyLUVuY29kaW5nQ09NUFJFU1NJT05fRVJST1JFTkhBTkNFX1lPVVJfQ0FM
TUhUVFBfMV8xX1JFUVVJUkVESEVBREVSX1RBQkxFX1NJWkU7IFNhbWVTaXRlPVN0
cmljdGZyYW1lX3BpbmdfbGVuZ3RodHJ1bmNhdGVkIGhlYWRlcnNpZi1tb2RpZmll
ZC1zaW5jZXRyYW5zZmVyLWVuY29kaW5neC1mb3J3YXJkZWQtcHJvdG91bmVuY3J5
cHRlZF9odHRwMlgtSWRlbXBvdGVuY3ktS2V5TW92ZWQgUGVybWFuZW50bHlGYWls
ZWQgRGVwZW5kZW5jeVRvbyBNYW55IFJlcXVlc3RzdW5jbG9zZWQgdGFnIDwlcz4g
ZnJvbSBhIHdyaXRlIG9mIHdpbnJlYWRsaW5rdm9sdW1ldW5leHBlY3RlZCByZXN1
bHQwNjAxMDIxNTA0MDVaMDcwMG1sa2VtOiBQQ1QgZmFpbGVkU2lnbmF0dXJlIEV4
cGlyZWROb3QgQXV0aG9yaXRhdGl2ZQo7IFVQREFURSBMRUFTRTogaW50ZWdlciB0
b28gbGFyZ2UlJSElYyhiaWcuSW50PSVzKW1pc3NpbmcgY2xvc2luZyApbWlzc2lu
ZyBjbG9zaW5nIF1kaXZpc29yIHRvbyBsYXJnZUtBUy1FQ0MtU1NDIFAtMjU2U1BG
IGNoZWNrIGRpc2FibGVkZG9tYWluIG5vdCBhbGxvd2VkbWFpbDogbm8gYWRkci1z
cGVjY2Fubm90IGJlIG5lZ2F0aXZlcmVmbGVjdC5WYWx1ZS5VaW50OiBkYXkgb3V0
IG9mIHJhbmdlVGltZS5NYXJzaGFsSlNPTjogVGltZS5NYXJzaGFsVGV4dDogdW5r
bm93biB0aW1lIHpvbmUgU1RBVFVTICAgICAgIDogJXMKUFJPVE8gICAgICAgIDog
JXMKUkVDRUlWRUQgQVQgIDogJXYKVElNRSBEVVJBVElPTjogJXYKQk9EWSAgICAg
ICAgIDoKJXYKc2VydmVyIG1pc2JlaGF2aW5naW52YWxpZCBJUCBhZGRyZXNzL2V0
Yy9uc3N3aXRjaC5jb25maW52YWxpZCBjcml0ZXJpYTogdmFsdWUgb3V0IG9mIHJh
bmdlZmxhZyAlcSBjb250YWlucyA9ZmxhZyByZWRlZmluZWQ6ICVzYnVmaW86IGJ1
ZmZlciBmdWxsMjk4MDIzMjIzODc2OTUzMTI1cmVmbGVjdC5WYWx1ZS5DYWxscmVm
bGVjdC5WYWx1ZS5FbGVtcmVmbGVjdC5WYWx1ZS5UeXBlcmVmbGVjdDogWmVybyhu
aWwpYWRhcHRpdmVzdGFja3N0YXJ0ZG9udGZyZWV6ZXRoZXdvcmxkdHJhY2VhZHZh
bmNlcGVyaW9kdHJhY2ViYWNrYW5jZXN0b3JzZ2FyYmFnZSBjb2xsZWN0aW9uc3lu
Yy5SV011dGV4LlJMb2NrR0Mgd29ya2VyIChhY3RpdmUpc3RvcHBpbmcgdGhlIHdv
cmxkd2FpdCB1bnRpbCBHQyBlbmRzX19rZXJuZWxfZ2V0cmFuZG9tYmFkIGxmbm9k
ZSBhZGRyZXNzc3lzdGVtIHBhZ2Ugc2l6ZSAoICBidXQgbWVtb3J5IHNpemUgL2dj
L3BhdXNlczpzZWNvbmRzIGJlY2F1c2UgZG90ZG90ZG90cnVudGltZTogbnBhZ2Vz
ID0gaW52YWxpZCBza2lwIHZhbHVlcnVudGltZTogcmFuZ2UgPSB7aW5kZXggb3V0
IG9mIHJhbmdlcnVudGltZTogICBncDogZ3A9cnVudGltZTogZ2V0ZzogIGc9Zm9y
RWFjaFA6IG5vdCBkb25lIGluIGFzeW5jIHByZWVtcHQKaW5zdHJ1Y3Rpb24gYnl0
ZXM6bXAuZ3NpZ25hbCBzdGFjayBbYmFkIG1hbnVhbEZyZWVMaXN0cnVudGltZTog
dGV4dEFkZHIgIGZyYW1lcyBlbGlkZWQuLi4KLCBsb2NrZWQgdG8gdGhyZWFkQ2F1
Y2FzaWFuX0FsYmFuaWFuaW5wdXQvb3V0cHV0IGVycm9ybm8gY2hpbGQgcHJvY2Vz
c2VzZmlsZSBuYW1lIHRvbyBsb25nbm8gbG9ja3MgYXZhaWxhYmxlaWRlbnRpZmll
ciByZW1vdmVkbXVsdGlob3AgYXR0ZW1wdGVkUkZTIHNwZWNpZmljIGVycm9yc3Ry
ZWFtcyBwaXBlIGVycm9yY29ubmVjdGlvbiByZWZ1c2Vkb3BlcmF0aW9uIGNhbmNl
bGVkVW5rbm93biBCT0RZIHZhbHVlaW5jb21wbGV0ZSBoZXhjaGFyUmVhZHkgdG8g
c3RhcnQgVExTdW5leHBlY3RlZCBtZXNzYWdlZXhwb3J0IHJlc3RyaWN0aW9uYWRk
cmVzcyBpc24ndCBpcHY0YWRkcmVzcyBpc24ndCBpcHY2SUJNIENvZGUgUGFnZSAx
MDQ3SUJNIENvZGUgUGFnZSAxMTQwTWFjaW50b3NoIEN5cmlsbGljeDUwOW5lZ2F0
aXZlc2VyaWFsL2V0Yy9wa2kvdGxzL2NlcnRzZXhjZWVkZWQgbWF4IGRlcHRoaW52
YWxpZCBjaGFyYWN0ZXIgaW4gbnVtZXJpYyBsaXRlcmFsaHR0cDogYmxhbmsgY29v
a2llcmVjZWl2ZWQgZnJvbSBwZWVyYXBwbGljYXRpb24veC1nemlwRkxPV19DT05U
Uk9MX0VSUk9SZnJhbWVfZ29hd2F5X3Nob3J0cHJveHktYXV0aGVudGljYXRlVU5L
Tk9XTl9TRVRUSU5HXyVkR28taHR0cC1jbGllbnQvMi4wR28taHR0cC1jbGllbnQv
MS4xVGVtcG9yYXJ5IFJlZGlyZWN0UGVybWFuZW50IFJlZGlyZWN0TWV0aG9kIE5v
dCBBbGxvd2VkRXhwZWN0YXRpb24gRmFpbGVkYmFkIENvbnRlbnQtTGVuZ3RoZmll
bGQgdmFsdWUgZm9yICVxZXhwZWN0ZWQgZWxlbWVudCA8aW52YWxpZCBYTUwgbmFt
ZTogY29udGV4dC5CYWNrZ3JvdW5kdW5hYmxlIHRvIHBhcnNlIElQUkNvZGVTZXJ2
ZXJGYWlsdXJldXNlIG9mIGNsb3NlZCBmaWxldW5zdXBwb3J0ZWQgS0RGIGlkdW5z
dXBwb3J0ZWQgS0VNIGlkUlNBU0hBMS1OU0VDMy1TSEExbm9uLW1pbmltYWwgbGVu
Z3RodHJ1bmNhdGVkIHNlcXVlbmNlc2VxdWVuY2UgdHJ1bmNhdGVkZGVjb2Rpbmcg
ZXJyb3I6ICV2Z28gZmlwcyBvYmplY3QgdjEKbWFpbDogbm8gYW5nbGUtYWRkcmNv
bnN1bWVBZGRyU3BlYzogJXFjb25zdW1lUGhyYXNlOiBbJXNdcmVmbGVjdC5WYWx1
ZS5Jc05pbHJlZmxlY3QuVmFsdWUuRmxvYXRiYWQgdmFsdWUgZm9yIGZpZWxkL3Vz
ci9saWIvbG9jYWxlL1RaL0NvbnRlbnQtRGlzcG9zaXRpb25wYXJzZW5ldGxpbmtt
ZXNzYWdlY3JpdGVyaW9uIHRvbyBzaG9ydHN5bmMuQ29uZCBpcyBjb3BpZWRiYWQg
ZmxhZyBzeW50YXg6ICVzbWltZTogbm8gbWVkaWEgdHlwZWJpbmFyeS5MaXR0bGVF
bmRpYW4xNDkwMTE2MTE5Mzg0NzY1NjI1NzQ1MDU4MDU5NjkyMzgyODEyNXJlZmxl
Y3QuVmFsdWUuQnl0ZXNyZWZsZWN0LlZhbHVlLkZpZWxkcmVmbGVjdC5WYWx1ZS5J
bmRleCBhcmUgbm90IGNvbXBhcmFibGVza2lwIHRoaXMgZGlyZWN0b3J5c3Ryb25n
RnJvbVdlYWtRdWV1ZUdDIG1hcmsgdGVybWluYXRpb25zeW5jLldhaXRHcm91cC5X
YWl0U0lHVFJBUDogdHJhY2UgdHJhcHdhaXQgZm9yIGRlYnVnIGNhbGxjZ29jYWxs
IHVuYXZhaWxhYmxlcGFuaWN3cmFwOiBubyAoIGluIHBhbmljd3JhcDogbm8gKSBp
biAgY2FsbGVkIHVzaW5nIG5pbCAqdW5rbm93biB3YWl0IHJlYXNvbm5vdGVzbGVl
cCBub3Qgb24gZzBHQyB3b3JrIG5vdCBmbHVzaGVkdW5hbGlnbmVkIHN5c1VudXNl
ZC9nYy9zY2FuL2hlYXA6Ynl0ZXMvZ2MvaGVhcC9nb2FsOmJ5dGVzL2djL2hlYXAv
bGl2ZTpieXRlc2JhZCBraW5kIGluIHJ1bmZpbnFtYXJrcm9vdDogYmFkIGluZGV4
bndhaXQgPiB3b3JrLm5wcm9jcywgZ3AtPmF0b21pY3N0YXR1cz1tYXJraW5nIGZy
ZWUgb2JqZWN0IEtpQiB3b3JrIChlYWdlciksICBbY29udHJvbGxlciByZXNldF1t
c3Bhbi5zd2VlcDogc3RhdGU9c3lzTWVtU3RhdCBvdmVyZmxvd2JhZCBzZXF1ZW5j
ZSBudW1iZXJwYW5pYyBkdXJpbmcgbWFsbG9jcGFuaWMgaG9sZGluZyBsb2Nrc21p
c3NpbmcgZGVmZXJyZXR1cm51bmV4cGVjdGVkIGdwLnBhcmFtcGFuaWMgZHVyaW5n
IHBhbmljCiwgIGctPmF0b21pY3N0YXR1cz11bmV4cGVjdGVkIGcgc3RhdHVzX2Nn
b19zZXRlbnYgbWlzc2luZ2JhZCBydW50aW1lwrdtc3RhcnRtIG5vdCBmb3VuZCBp
biBhbGxtc3RvcG0gaG9sZGluZyBsb2Nrc3NlbWFSb290IHJvdGF0ZUxlZnRiYWQg
bm90aWZ5TGlzdCBzaXplcnVudGltZTogcHJlZW1wdCBnMHJ1bnRpbWU6IHBjZGF0
YSBpcyBDYW5hZGlhbl9BYm9yaWdpbmFsS2hpdGFuX1NtYWxsX1NjcmlwdGJhZCBm
aWxlIGRlc2NyaXB0b3J0b28gbWFueSBvcGVuIGZpbGVzZGlyZWN0b3J5IG5vdCBl
bXB0eWRldmljZSBub3QgYSBzdHJlYW1kaXNrIHF1b3RhIGV4Y2VlZGVkSW52YWxp
ZCBiYXNlNjQgZGF0YU1hbmdsZWQgY29tbWFuZDogJXFFTkhBTkNFRFNUQVRVU0NP
REVTcmV2b2tlZCBjZXJ0aWZpY2F0ZWV4cGlyZWQgY2VydGlmaWNhdGV1bmtub3du
IGNlcnRpZmljYXRldW5rbm93biBjaXBoZXIgdHlwZXRlbXBvcmFyeSBETlMgZXJy
b3JwZXJtYW5lbnQgRE5TIGVycm9yaW52YWxpZCBkb21haW4gbmFtZWludmFsaWQg
Q0lEUiBsZW5ndGh0b28gbWFueSAicmVkaXJlY3QibXVsdGlwYXJ0bWF4aGVhZGVy
c3g1MDk6IG1hbGZvcm1lZCBPSUR4NTA5OiB0cmFpbGluZyBkYXRheDUwOTogdW5r
bm93biBlcnJvcmFmdGVyIGFycmF5IGVsZW1lbnRJTkFERVFVQVRFX1NFQ1VSSVRZ
SU5JVElBTF9XSU5ET1dfU0laRWZyYW1lX2RhdGFfc3RyZWFtXzAgKCVkIGJ5dGVz
IG9taXR0ZWQpY29udGVudC1kaXNwb3NpdGlvbmlmLXVubW9kaWZpZWQtc2luY2Vw
cm94eS1hdXRob3JpemF0aW9uZXJyIG11c3QgYmUgbm9uLW5pbHZhbHVlIGZvciBo
ZWFkZXIgJXFuZXR3b3JrIHVucmVhY2hhYmxlU3dpdGNoaW5nIFByb3RvY29sc1By
ZWNvbmRpdGlvbiBGYWlsZWRNaXNkaXJlY3RlZCBSZXF1ZXN0U2VydmljZSBVbmF2
YWlsYWJsZUNvbm5lY3Rpb246IGNsb3NlDQppbnZhbGlkIFRyYWlsZXIga2V5IGFs
cmVhZHkgcmVnaXN0ZXJlZFByb3h5LUF1dGhvcml6YXRpb251bmtub3duIHN0YXR1
cyBjb2RlaW52YWxpZCBVUkwgZXNjYXBlIG1pc3NpbmcgJ10nIGluIGhvc3R1bmV4
cGVjdGVkIEluc3RGYWlsemVybyBsZW5ndGggc2VnbWVudFJDb2RlTm90SW1wbGVt
ZW50ZWRmaWxlIGFscmVhZHkgZXhpc3RzZmlsZSBkb2VzIG5vdCBleGlzdGZpbGUg
YWxyZWFkeSBjbG9zZWRnb3Rlc3Rqc29uYnVpbGR0ZXh0dW5rbm93biBoYXNoIHZh
bHVlIG5lZ2F0aXZlIGNvb3JkaW5hdGV1bnN1cHBvcnRlZCBBRUFEIGlkMjAwNjAx
MDIxNTA0MDVaMDcwME5vIFpvbmUgS2V5IEJpdCBTZXQlMDJkICUwMmQgJTAuM2Yg
JXMgdW5rbm93biBHbyB0eXBlOiAldmV2aWN0Q291bnQgb3ZlcmZsb3dtb2R1bHVz
IG11c3QgYmUgPiAxdXNlciBmb3Igc210cCBjbGllbnRwYXNzIGZvciBzbXRwIGNs
aWVudEludmFsaWQgZW1haWwgZm9ybWF0bWFpbDogZXhwZWN0ZWQgY29tbWFtYWls
OiBpbnZhbGlkIHN0cmluZ3RpbWU6IGludmFsaWQgbnVtYmVyL3Vzci9zaGFyZS96
b25laW5mby91bmtub3duIGVuY29kaW5nOiAlc2Zvcm0tZGF0YTsgbmFtZT0iJXMi
aW52YWxpZCBETlMgcmVzcG9uc2V1bmV4cGVjdGVkIG5ldHdvcms6IGZsYWc6IGhl
bHAgcmVxdWVzdGVkaW52YWxpZCB3cml0ZSByZXN1bHQzNzI1MjkwMjk4NDYxOTE0
MDYyNXJlZmxlY3Q6IGNhbm5vdCB1c2UgIHJldHVybmVkIHplcm8gVmFsdWVyZWZs
ZWN0LlZhbHVlLklzWmVyb3JlZmxlY3QuVmFsdWUuU2V0SW50ZmxvYXRpbmcgcG9p
bnQgZXJyb3JHQyBzd2VlcCB0ZXJtaW5hdGlvblJlc2V0RGVidWdMb2cgKHRlc3Qp
Y2hhbiBzZW5kIChuaWwgY2hhbilmbHVzaGluZyBwcm9jIGNhY2hlc2NoYW4gc2Vu
ZCAoc3luY3Rlc3QpU0lHQUxSTTogYWxhcm0gY2xvY2tTSUdURVJNOiB0ZXJtaW5h
dGlvbmNsb3NlIG9mIG5pbCBjaGFubmVsaW5jb25zaXN0ZW50IGxvY2tlZG1ub3Rl
dHNsZWVwIG5vdCBvbiBnMGJhZCBzeXN0ZW0gcGFnZSBzaXplIHRvIHVuYWxsb2Nh
dGVkIHNwYW4vZ2Mvc2Nhbi9zdGFjazpieXRlcy9nYy9zY2FuL3RvdGFsOmJ5dGVz
L2djL2hlYXAvZnJlZXM6Ynl0ZXMvZ2MvZ29tZW1saW1pdDpieXRlc3AgbWNhY2hl
IG5vdCBmbHVzaGVkIG1hcmtyb290IGpvYnMgZG9uZQpwYWNlcjogYXNzaXN0IHJh
dGlvPXdvcmtidWYgaXMgbm90IGVtcHR5YmFkIHVzZSBvZiBidWNrZXQubXBiYWQg
dXNlIG9mIGJ1Y2tldC5icHJ1bnRpbWU6IGRvdWJsZSB3YWl0cHJlZW1wdCBvZmYg
cmVhc29uOiBmb3JjZWdjOiBwaGFzZSBlcnJvcmdvcGFyazogYmFkIGcgc3RhdHVz
Z28gb2YgbmlsIGZ1bmMgdmFsdWVzZWxlY3RnbzogYmFkIHdha2V1cHNlbWFSb290
IHJvdGF0ZVJpZ2h0cmVmbGVjdC5tYWtlRnVuY1N0dWJ0cmFjZTogb3V0IG9mIG1l
bW9yeXdpcmVwOiBhbHJlYWR5IGluIGdvRWd5cHRpYW5fSGllcm9nbHlwaHNNZXJv
aXRpY19IaWVyb2dseXBoc2ludmFsaWQgcmVxdWVzdCBjb2RlYmFkIGZvbnQgZmls
ZSBmb3JtYXRjb25uZWN0aW9uIHRpbWVkIG91dGlzIGEgbmFtZWQgdHlwZSBmaWxl
a2V5IGhhcyBiZWVuIHJldm9rZWRcK1swLTlBLUZdP1swLTlBLUZdP3Vua25vd24g
UFNLIGlkZW50aXR5Y2VydGlmaWNhdGUgcmVxdWlyZWRTUEYgcmVjb3JkIG5vdCBm
b3VuZHRvbyBtYW55IFNQRiByZWNvcmRzZ3ppcDogaW52YWxpZCBoZWFkZXJ4NTA5
dXNlZmFsbGJhY2tyb290c2dldENlcnQgY2FuJ3QgYmUgbmlsaW52YWxpZCBVVEYt
OCBzdHJpbmd4NTA5OiBtYWxmb3JtZWQgc3BraWpzb246IFVubWFyc2hhbChuaWwp
anNvbjogVW5tYXJzaGFsKG5pbCBqc29uOiBlcnJvciBjYWxsaW5nIHBhZCBsZW5n
dGggdG9vIGxhcmdlaHR0cGxheGNvbnRlbnRsZW5ndGhNQVhfSEVBREVSX0xJU1Rf
U0laRWNvbm5lY3Rpb24gZXJyb3I6ICVzZnJhbWVfc2V0dGluZ3NfbW9kXzZjb25u
X2Nsb3NlX2xvc3RfcGluZ2Fzc2lnbmVkIHN0cmVhbSBJRCAwcmVhZF9mcmFtZV90
b29fbGFyZ2V1bmtub3duIGFkZHJlc3MgdHlwZVJlcXVlc3QgVVJJIFRvbyBMb25n
VW5wcm9jZXNzYWJsZSBFbnRpdHlJbnN1ZmZpY2llbnQgU3RvcmFnZWludmFsaWQg
PCFbIHNlcXVlbmNlbWlzc2luZyBJUHY2IGFkZHJlc3N1bmV4cGVjdGVkIGNoYXJh
Y3RlcnVuc3VwcG9ydGVkIHN1aXRlIElEaW52YWxpZCBpbnRlZ2VyIHR5cGVETlNT
RUMgSW5kZXRlcm1pbmF0ZWFzbjE6IHN5bnRheCBlcnJvcjogbnVtYmVyIGhhcyBu
byBkaWdpdHNoZWFkZXIgbGluZSB0b28gbG9uZ2V4cHJlc3Npb24gdG9vIGxhcmdl
aW52YWxpZCByZXBlYXQgY291bnRzaGEzOiBTdW0gYWZ0ZXIgUmVhZHBhcnNlQWRk
cmVzczogc3BlYz0lcXVuc3VwcG9ydGVkIG9wZXJhdGlvbnJlZmxlY3QuVmFsdWUu
Q29tcGxleHRpbWUgem9uZSBvZmZzZXQgaG91cm11bHRpcGFydC9hbHRlcm5hdGl2
ZXNpbmdsZS1yZXF1ZXN0LXJlb3BlbnBhcnNlbmV0bGlua3JvdXRlYXR0cmZsYWcg
JXEgYmVnaW5zIHdpdGggLSVzIGZsYWcgcmVkZWZpbmVkOiAlc2J1ZmlvOiBuZWdh
dGl2ZSBjb3VudDE4NjI2NDUxNDkyMzA5NTcwMzEyNTkzMTMyMjU3NDYxNTQ3ODUx
NTYyNWJhZCB0eXBlIGluIGNvbXBhcmU6IHVua25vd24gQUJJIHBhcnQga2luZCBv
ZiB1bmV4cG9ydGVkIG1ldGhvZHVuZXhwZWN0ZWQgdmFsdWUgc3RlcHJlZmxlY3Qu
VmFsdWUuU2V0WmVyb3JlZmxlY3QuVmFsdWUuUG9pbnRlcnJlZmxlY3QuVmFsdWUu
U2V0VWludG5lZ2F0aXZlIHNoaWZ0IGFtb3VudGRhdGFpbmRlcGVuZGVudHRpbWlu
Z3N5c3RlbSBnb3JvdXRpbmUgd2FpdC9nYy9oZWFwL2FsbG9jczpieXRlc3J1bnRp
bWU6IHdvcmsubndhaXQ9ICBwcmV2aW91cyBhbGxvY0NvdW50PSwgbGV2ZWxCaXRz
W2xldmVsXSA9IHJ1bnRpbWU6IHNlYXJjaElkeCA9IGRlZmVyIG9uIHN5c3RlbSBz
dGFja3BhbmljIG9uIHN5c3RlbSBzdGFja2FzeW5jIHN0YWNrIHRvbyBsYXJnZV9j
Z29fdW5zZXRlbnYgbWlzc2luZ3N0YXJ0bTogbSBpcyBzcGlubmluZ3N0YXJ0bG9j
a2VkbTogbSBoYXMgcGZpbmRydW5uYWJsZTogd3JvbmcgcHByZWVtcHQgYXQgdW5r
bm93biBwY3JlbGVhc2VwOiBpbnZhbGlkIGFyZ2NoZWNrZGVhZDogcnVubmFibGUg
ZyBmcm9tIG91dHNpZGUgYnViYmxlCnJ1bnRpbWU6IG5ld3N0YWNrIGF0IHJ1bnRp
bWU6IG5ld3N0YWNrIHNwPXJ1bnRpbWU6IGNvbmZ1c2VkIGJ5ICBwY0hlYWRlci50
ZXh0U3RhcnQ9IHRpbWVyIGRhdGEgY29ycnVwdGlvbkFuYXRvbGlhbl9IaWVyb2ds
eXBoc0luc2NyaXB0aW9uYWxfUGFobGF2aWJsb2NrIGRldmljZSByZXF1aXJlZHJl
YWQtb25seSBmaWxlIHN5c3RlbXBhY2thZ2Ugbm90IGluc3RhbGxlZGxpbmsgaGFz
IGJlZW4gc2V2ZXJlZHN0YXRlIG5vdCByZWNvdmVyYWJsZUludGVybmFsIHNlcnZl
ciBlcnJvck5lZ290aWF0aW9uIGNhbmNlbGxlZENvbW1hbmQgdG9vIHNob3J0OiAl
cUlkbGUgdGltZW91dCwgYnllIGJ5ZWRlY29tcHJlc3Npb24gZmFpbHVyZXVuc3Vw
cG9ydGVkIGV4dGVuc2lvbm1hY3JvIHBhcnNpbmcgZXJyb3I6IFdpbmRvd3MgQ29k
ZSBQYWdlIDg1OGludmFsaWQgTnVtZXJpY1N0cmluZ3g1MDk6IGludmFsaWQgdmVy
c2lvbmFmdGVyIHRvcC1sZXZlbCB2YWx1ZWluIHN0cmluZyBlc2NhcGUgY29kZWh0
dHA6IG5pbCBSZXF1ZXN0LlVSTFVOS05PV05fRlJBTUVfVFlQRV8lZGZyYW1lX3Bp
bmdfaGFzX3N0cmVhbVJvdW5kVHJpcCBmYWlsdXJlOiAldmhlYWRlciBsaXN0IHRv
byBsYXJnZVVuaGFuZGxlZCBTZXR0aW5nOiAldm5ldC9odHRwOiBuaWwgQ29udGV4
dHVua25vd24gYWRkcmVzcyB0eXBlIGNvbW1hbmQgbm90IHN1cHBvcnRlZFByZWNv
bmRpdGlvbiBSZXF1aXJlZEludGVybmFsIFNlcnZlciBFcnJvcnVzZSBvZiBjbG9z
ZWQgRW5jb2RlcmtleSBpcyBub3QgY29tcGFyYWJsZUlQdjQgYWRkcmVzcyB0b28g
bG9uZ3VuZXhwZWN0ZWQgc2xpY2Ugc2l6ZWNvbmN1cnJlbnQgbWFwIHdyaXRlc21l
c3NhZ2UgbGltaXQgcmVhY2hlZFN0YWxlIE5YRE9NQUlOIEFuc3dlcnNlcXVlbmNl
IHRhZyBtaXNtYXRjaGludmFsaWQgbmFtZWQgY2FwdHVyZWludmFsaWQgc2NhbGFy
IGxlbmd0aHNpbXVsYXRlZCBQQ1QgZmFpbHVyZU5vIGRvbWFpbiByZXN0cmljdGlv
bnNTZWN1cml0eSBjaGVja3MgcGFzc2VkVW5hdXRob3JpemVkIFRPIGRvbWFpbnJl
ZmxlY3RsaXRlLlZhbHVlLlR5cGUvbGliL3RpbWUvem9uZWluZm8uemlwX19yZXN0
eURlYnVnUmVxdWVzdExvZyoqKioqIE5PIENPTlRFTlQgKioqKiptaXNzaW5nICdd
JyBpbiBhZGRyZXNzaW52YWxpZCBhZGRyZXNzIGZhbWlseW9wZXJhdGlvbiB3YXMg
Y2FuY2VsZWQvdXNyL3NoYXJlL21pbWUvZ2xvYnMyL2V0Yy9hcGFjaGUvbWltZS50
eXBlczQ2NTY2MTI4NzMwNzczOTI1NzgxMjVyZWZsZWN0bGl0ZS5WYWx1ZS5FbGVt
cmVmbGVjdC5WYWx1ZS5NYXBJbmRleHVuZXhwZWN0ZWQgbWV0aG9kIHN0ZXByZWZs
ZWN0LlZhbHVlLlNldEZsb2F0IHRvIGFycmF5IHdpdGggbGVuZ3RoIGludGVnZXIg
ZGl2aWRlIGJ5IHplcm9Db3VudFBhZ2VzSW5Vc2UgKHRlc3QpUmVhZE1ldHJpY3NT
bG93ICh0ZXN0KXRyYWNlIHJlYWRlciAoYmxvY2tlZCl0cmFjZSBnb3JvdXRpbmUg
c3RhdHVzR0Mgd2VhayB0byBzdHJvbmcgd2FpdFNJR1NUS0ZMVDogc3RhY2sgZmF1
bHRTSUdUU1RQOiBrZXlib2FyZCBzdG9wX19rZXJuZWxfY2xvY2tfZ2V0dGltZXNl
bmQgb24gY2xvc2VkIGNoYW5uZWxjYWxsIG5vdCBhdCBzYWZlIHBvaW50Z2V0ZW52
IGJlZm9yZSBlbnYgaW5pdGludGVyZmFjZSBjb252ZXJzaW9uOiBmcmVlSW5kZXgg
aXMgbm90IHZhbGlkcy5mcmVlaW5kZXggPiBzLm5lbGVtc2JhZCBzd2VlcGdlbiBp
biByZWZpbGxzcGFuIGhhcyBubyBmcmVlIHNwYWNlcnVudGltZTogb3V0IG9mIG1l
bW9yeS9nYy9zY2FuL2dsb2JhbHM6Ynl0ZXMvZ2MvaGVhcC9mcmVlczpvYmplY3Rz
cnVudGltZTogd29yay5ud2FpdCA9IHJ1bnRpbWU6c2NhbnN0YWNrOiBncD1zY2Fu
c3RhY2sgLSBiYWQgc3RhdHVzaGVhZFRhaWxJbmRleCBvdmVyZmxvd3J1bnRpbWUu
bWFpbiBub3Qgb24gbTBzZXRfY3Jvc3NjYWxsMiBtaXNzaW5nYmFkIGctPnN0YXR1
cyBpbiByZWFkeXdpcmVwOiBpbnZhbGlkIHAgc3RhdGVhc3NlbWJseSBjaGVja3Mg
ZmFpbGVkIHJlY2VpdmVkIGR1cmluZyBmb3JrCnN0YWNrIG5vdCBhIHBvd2VyIG9m
IDJtaW5wYyBvciBtYXhwYyBpbnZhbGlkbm9uLUdvIGZ1bmN0aW9uIGF0IHBjPUlu
c2NyaXB0aW9uYWxfUGFydGhpYW5OeWlha2VuZ19QdWFjaHVlX0htb25nYXJndW1l
bnQgbGlzdCB0b28gbG9uZ2Nhbm5vdCBhbGxvY2F0ZSBtZW1vcnlyZW1vdGUgYWRk
cmVzcyBjaGFuZ2VkcHJvdG9jb2wgbm90IGF2YWlsYWJsZXByb3RvY29sIG5vdCBz
dXBwb3J0ZWRhZGRyZXNzIGFscmVhZHkgaW4gdXNlbmV0d29yayBpcyB1bnJlYWNo
YWJsZUFscmVhZHkgcnVubmluZyBpbiBUTFMldiBFU01UUCBTZXJ2aWNlIFJlYWR5
ZXJyb3IgZGVjb2RpbmcgbWVzc2FnZWluYXBwcm9wcmlhdGUgZmFsbGJhY2tFQ0RT
QVdpdGhQMjU2QW5kU0hBMjU2RUNEU0FXaXRoUDM4NEFuZFNIQTM4NEVDRFNBV2l0
aFA1MjFBbmRTSEE1MTJleHRlbmRlZCBtYXN0ZXIgc2VjcmV0aGtkZjogY291bnRl
ciBvdmVyZmxvd2ludmFsaWQgcXVhbGlmaWVyICglZClnemlwOiBpbnZhbGlkIGNo
ZWNrc3VtL2V0Yy9zc2wvY2EtYnVuZGxlLnBlbXg1MDk6IG1hbGZvcm1lZCBpc3N1
ZXIgaW50byBHbyBzdHJ1Y3QgZmllbGQganNvbjogdW5rbm93biBmaWVsZCAlcWh0
dHAyOiBmcmFtZSB0b28gbGFyZ2V3cml0ZSBvbiBjbG9zZWQgYnVmZmVyYXBwbGlj
YXRpb24vcG9zdHNjcmlwdERFQlVHX0hUVFAyX0dPUk9VVElORVNNQVhfQ09OQ1VS
UkVOVF9TVFJFQU1TZnJhbWVfZGF0YV9wYWRfdG9vX2JpZ2FjY2Vzcy1jb250cm9s
LW1heC1hZ2VpbnZhbGlkIFRyYWlsZXIga2V5ICVxaW52YWxpZCBIVFRQIGhlYWRl
ciAlc21hbGZvcm1lZCBIVFRQIHZlcnNpb25VbnN1cHBvcnRlZCBNZWRpYSBUeXBl
Y2Fubm90IHVubWFyc2hhbCBpbnRvIGV4cGVjdGVkIC8+IGluIGVsZW1lbnRJUHY0
IGFkZHJlc3MgdG9vIHNob3J0bXVsdGlwbGUgOjogaW4gYWRkcmVzc3NraXBwaW5n
IFF1ZXN0aW9uIE5hbWVza2lwcGluZyBRdWVzdGlvbiBUeXBlZXhpdCBob29rIGlu
dm9rZWQgZXhpdG92ZXJmbG93aW5nIGNvb3JkaW5hdGVObyBSZWFjaGFibGUgQXV0
aG9yaXR5dW5leHBlY3RlZCBsZW5ndGggY29kZXplcm8gbGVuZ3RoIEJJVCBTVFJJ
TkdpbnZhbGlkIG51bWJlciBiYXNlICVkaW50ZXJuYWwgaW5jb25zaXN0ZW5jeWhw
YWNrOiBzdHJpbmcgdG9vIGxvbmdoZWFkZXIgZmllbGQgJXEgPSAlcSVzaWRuYTog
aW52YWxpZCBsYWJlbCAlcWVycm9yIHBhcnNpbmcgcmVnZXhwOiBzaW11bGF0ZWQg
Q0FTVCBmYWlsdXJlc2hhMzogV3JpdGUgYWZ0ZXIgUmVhZFNQRiB2ZXJpZmljYXRp
b24gcGFzc2VkU1BGIHZlcmlmaWNhdGlvbiBmYWlsZWRTUEYgc29mdCBmYWlsLCBh
bGxvd2luZ1dlYmhvb2sgcmVxdWVzdCBmYWlsZWQ6bWFsZm9ybWVkIGhlYWRlciBs
aW5lOiAiIyQlJicoKSwuOjs8PkBbXV5ge3x9fnJlZmxlY3RsaXRlLlZhbHVlLklz
TmlsPGludmFsaWQgcmVmbGVjdC5WYWx1ZT50aW1lIHpvbmUgb2Zmc2V0IG1pbnV0
ZXRpbWUgem9uZSBvZmZzZXQgc2Vjb25kdW5leHBlY3RlZCBhZGRyZXNzIHR5cGVt
aXNzaW5nIHBvcnQgaW4gYWRkcmVzcy9ldGMvYXBhY2hlMi9taW1lLnR5cGVzdGV4
dC94bWw7IGNoYXJzZXQ9dXRmLTgyMzI4MzA2NDM2NTM4Njk2Mjg5MDYyNXJlZmxl
Y3QuVmFsdWUuSW50ZXJmYWNlcmVmbGVjdC5WYWx1ZS5OdW1NZXRob2RpbmRleCBv
dXQgb2YgcmFuZ2UgWyV4XVJlYWRNZW1TdGF0c1Nsb3cgKHRlc3QpcnVudGltZWNv
bnRlbnRpb25zdGFja3NjaGFuIHJlY2VpdmUgKG5pbCBjaGFuKWdhcmJhZ2UgY29s
bGVjdGlvbiBzY2FuY2hhbiByZWNlaXZlIChzeW5jdGVzdClTSUdJTzogaS9vIG5v
dyBwb3NzaWJsZVNJR1NZUzogYmFkIHN5c3RlbSBjYWxsbWFrZWNoYW46IGJhZCBh
bGlnbm1lbnRjbG9zZSBvZiBjbG9zZWQgY2hhbm5lbHVubG9jayBvZiB1bmxvY2tl
ZCBsb2NrKSBtdXN0IGJlIGEgcG93ZXIgb2YgMgpzeXN0ZW0gaHVnZSBwYWdlIHNp
emUgKHJ1bnRpbWU6IHMuYWxsb2NDb3VudD0gcy5hbGxvY0NvdW50ID4gcy5uZWxl
bXMvZ2MvaGVhcC9hbGxvY3M6b2JqZWN0c21pc3NpbmcgdHlwZSBpbiBydW5maW5x
cnVudGltZTogaW50ZXJuYWwgZXJyb3J3b3JrLm53YWl0ID4gd29yay5ucHJvY2xl
ZnQgb3ZlciBtYXJrcm9vdCBqb2JzZ2NEcmFpbiBwaGFzZSBpbmNvcnJlY3RNQiBk
dXJpbmcgc3dlZXA7IHN3ZXB0IGJhZCBwcm9maWxlIHN0YWNrIGNvdW50cnVudGlt
ZTogZXZlbnRmZCBmYWlsZWRydW50aW1lOiBuZXRwb2xsIGZhaWxlZHBhbmljIGR1
cmluZyBwcmVlbXB0b2ZmbmFub3RpbWUgcmV0dXJuaW5nIHplcm9zY2hlZHVsZTog
aG9sZGluZyBsb2Nrc3Byb2NyZXNpemU6IGludmFsaWQgYXJnbWlzdXNlIG9mIHBy
b2ZCdWYud3JpdGV1bmV4cGVjdGVkIHNpZ25hbCB2YWx1ZXNwYW4gaGFzIG5vIGZy
ZWUgc3RhY2tzc3RhY2sgZ3Jvd3RoIGFmdGVyIGZvcmtzaHJpbmtzdGFjayBhdCBi
YWQgdGltZXJlZmxlY3QubWV0aG9kVmFsdWVDYWxsb3BlcmF0aW9uIG5vdCBwZXJt
aXR0ZWRpbnRlcnJ1cHRlZCBzeXN0ZW0gY2FsbGRldmljZSBvciByZXNvdXJjZSBi
dXN5bm8gc3BhY2UgbGVmdCBvbiBkZXZpY2VvcGVyYXRpb24gbm90IHN1cHBvcnRl
ZEdvb2RuaWdodCBhbmQgZ29vZCBsdWNrcGFuaWMgc2VydmluZyAldjogJXYKJXND
b25uZWN0aW9uIGVycm9yLCBzb3JyeXVuc3VwcG9ydGVkIGNlcnRpZmljYXRlbm8g
YXBwbGljYXRpb24gcHJvdG9jb2xlY2ggYWNjZXB0IGNvbmZpcm1hdGlvbkNMSUVO
VF9UUkFGRklDX1NFQ1JFVF8wU0VSVkVSX1RSQUZGSUNfU0VDUkVUXzB0bHM6IGlu
dmFsaWQgUFNLIGJpbmRlclFVSUNFbmNyeXB0aW9uTGV2ZWwoJXYpYnl0ZXMuQnVm
ZmVyOiB0b28gbGFyZ2VtdWx0aXBhcnQ6IE5leHRQYXJ0OiAldy9ldGMvcGtpL3Rs
cy9jYWNlcnQucGVtaW52YWxpZCBQcmludGFibGVTdHJpbmd4NTA5OiBtYWxmb3Jt
ZWQgVVRDVGltZXg1MDk6IGludmFsaWQga2V5IHVzYWdleDUwOTogbWFsZm9ybWVk
IHZlcnNpb25qc29uOiBjYW5ub3QgdW5tYXJzaGFsICBpbnRvIEdvIHZhbHVlIG9m
IHR5cGUgdW5leHBlY3RlZCBtYXAga2V5IHR5cGVFTkFCTEVfQ09OTkVDVF9QUk9U
T0NPTHVua25vd24gZXJyb3IgY29kZSAweCV4ZnJhbWVfZ29hd2F5X2hhc19zdHJl
YW1mcmFtZV9oZWFkZXJzX3BhZF9zaG9ydGZyYW1lX3JzdHN0cmVhbV9iYWRfbGVu
aW52YWxpZCBIVFRQIHRyYWlsZXIgJXNtYWxmb3JtZWQgSFRUUCByZXNwb25zZW5v
bi16ZXJvIHJlc2VydmVkIGZpZWxkbmV0d29yayBub3QgaW1wbGVtZW50ZWRjb21t
YW5kIG5vdCBpbXBsZW1lbnRlZFZhcmlhbnQgQWxzbyBOZWdvdGlhdGVzbWlzc2lu
ZyBwcm90b2NvbCBzY2hlbWVpbnZhbGlkIFVSSSBmb3IgcmVxdWVzdHhtbDogdW5z
dXBwb3J0ZWQgdHlwZTogZXhwZWN0ZWQgZWxlbWVudCB0eXBlIDx0b28gbWFueSBw
b2ludGVycyAoPjEwKXNlZ21lbnQgbGVuZ3RoIHRvbyBsb25ndW5wYWNraW5nIFF1
ZXN0aW9uLk5hbWV1bnBhY2tpbmcgUXVlc3Rpb24uVHlwZXNraXBwaW5nIFF1ZXN0
aW9uIENsYXNzIiwgbWlzc2luZyBDUFUgc3VwcG9ydApleGl0IGhvb2sgaW52b2tl
ZCBwYW5pY3BhdHRlcm4gYml0cyB0b28gbG9uZzogU2lnbmF0dXJlIE5vdCBZZXQg
VmFsaWQKOyBMT05HIExJVkVEIFFVRVJJRVM6IAo7IERTIEhBU0ggVU5ERVJTVE9P
RDogZmxhdGU6IGludGVybmFsIGVycm9yOiBhc24xOiBzdHJ1Y3R1cmUgZXJyb3I6
IHRydW5jYXRlZCB0YWcgb3IgbGVuZ3RodmFyaW50IGludGVnZXIgb3ZlcmZsb3dp
bnZhbGlkIGVzY2FwZSBzZXF1ZW5jZUVkMjU1MTkgc2lnbiBhbmQgdmVyaWZ5ZWQy
NTUxOTogYmFkIHB1YmxpYyBrZXlQMjI0IHBvaW50IG5vdCBvbiBjdXJ2ZVAyNTYg
cG9pbnQgbm90IG9uIGN1cnZlUDM4NCBwb2ludCBub3Qgb24gY3VydmVQNTIxIHBv
aW50IG5vdCBvbiBjdXJ2ZWludmFsaWQgc2NhbGFyIGVuY29kaW5nTm8gU1BGIHJl
Y29yZCBvciBuZXV0cmFsbWFsZm9ybWVkIGluaXRpYWwgbGluZTogbWFpbDogZG91
YmxlIGRvdCBpbiBhdG9tL3Vzci9zaGFyZS9saWIvem9uZWluZm8vdGV4dC9odG1s
OyBjaGFyc2V0PXV0Zi04MTE2NDE1MzIxODI2OTM0ODE0NDUzMTI1NTgyMDc2NjA5
MTM0Njc0MDcyMjY1NjI1dHJhY2VjaGVja3N0YWNrb3duZXJzaGlwaGFzaCBvZiB1
bmhhc2hhYmxlIHR5cGUgY2Fubm90IG9wZW4gc3RhbmRhcmQgZmRzc3BhbiBoYXMg
bm8gZnJlZSBvYmplY3RzcnVudGltZTogZm91bmQgb2JqIGF0ICooL2Nnby9nby10
by1jLWNhbGxzOmNhbGxzL2djL2hlYXAvb2JqZWN0czpvYmplY3RzL3NjaGVkL2xh
dGVuY2llczpzZWNvbmRzcXVldWVmaW5hbGl6ZXIgZHVyaW5nIEdDdXBkYXRlIGR1
cmluZyB0cmFuc2l0aW9ucnVudGltZTogbWFya3Jvb3QgaW5kZXggY2FuJ3Qgc2Nh
biBvdXIgb3duIHN0YWNrZ2NEcmFpbk4gcGhhc2UgaW5jb3JyZWN0cGFnZUFsbG9j
OiBvdXQgb2YgbWVtb3J5cnVudGltZTogcC5zZWFyY2hBZGRyID0gcmFuZ2UgcGFy
dGlhbGx5IG92ZXJsYXBzcnVudGltZTogZXBvbGxjdGwgZmFpbGVkc3RhY2sgdHJh
Y2UgdW5hdmFpbGFibGUKcnVudGltZTogbXAubG9ja2VkSW50ID0gcnVucXN0ZWFs
OiBydW5xIG92ZXJmbG93dW5leHBlY3RlZCBzeW5jZ3JvdXAgc2V0ZG91YmxlIHRy
YWNlR0NTd2VlcFN0YXJ0YmFkIHVzZSBvZiB0cmFjZS5zZXFsb2NrZnVuY3Rpb24g
bm90IGltcGxlbWVudGVkbGV2ZWwgMiBub3Qgc3luY2hyb25pemVkbGluayBudW1i
ZXIgb3V0IG9mIHJhbmdlb3V0IG9mIHN0cmVhbXMgcmVzb3VyY2VzY29ubmVjdGlv
biByZXNldCBieSBwZWVyc3RydWN0dXJlIG5lZWRzIGNsZWFuaW5nUmF3U29ja2Fk
ZHJBbnkgdG9vIHNtYWxsQXV0aGVudGljYXRpb24gc3VjY2VlZGVkTWlzc2luZyBS
Q1BUIFRPIGNvbW1hbmQuSWRlbnRpdGllcyBub3Qgc3VwcG9ydGVkZXJyb3IgZGVj
cnlwdGluZyBtZXNzYWdlY2VydGlmaWNhdGUgdW5vYnRhaW5hYmxldGxzOiBtYWxm
b3JtZWQgRUNIQ29uZmlndGxzOiBzZXJ2ZXIgcmVqZWN0ZWQgRUNIYXBwbGljYXRp
b24vb2N0ZXQtc3RyZWFteDUwOTogbWFsZm9ybWVkIHZhbGlkaXR5anNvbjogdW5z
dXBwb3J0ZWQgdHlwZTogdW5leHBlY3RlZCBidWZmZXIgbGVuPSV2aW52YWxpZCBw
c2V1ZG8taGVhZGVyICVxZnJhbWVfaGVhZGVyc19wcmlvX3Nob3J0aW52YWxpZCBy
ZXF1ZXN0IDpwYXRoICVxcmVhZF9mcmFtZV9jb25uX2Vycm9yXyVzUmVxdWVzdCBF
bnRpdHkgVG9vIExhcmdlaHR0cDogbmlsIFJlcXVlc3QuSGVhZGVyaW52YWxpZCBh
cmd1bWVudCB0byBJbnRuYWRkcmVzcyBzdHJpbmcgdG9vIHNob3J0cmVzb3VyY2Ug
bGVuZ3RoIHRvbyBsb25ndW5wYWNraW5nIFF1ZXN0aW9uLkNsYXNzaW52YWxpZCBw
YXR0ZXJuIHN5bnRheDogZmxhdGU6IG1heEJpdHMgdG9vIGxhcmdlaWRuYTogZGlz
YWxsb3dlZCBydW5lICVVY2hhY2hhMjA6IHdyb25nIGtleSBzaXplc2hhMzogaW52
YWxpZCBoYXNoIHN0YXRlc3RyZWFtU2FmZSB3YXMgbm90IHJlc2V0Tm8gc3BhbSBr
ZXl3b3JkIGZpbHRlcmluZ0NvbnRhaW5zIHNwYW0ga2V5d29yZDogJXNObyBzcGFt
IGtleXdvcmRzIGRldGVjdGVkbWFpbDogdW5jbG9zZWQgYW5nbGUtYWRkcm1haWw6
IGxlYWRpbmcgZG90IGluIGF0b21jaGFyc2V0IG5vdCBzdXBwb3J0ZWQ6ICVxMjAw
Ni0wMS0wMlQxNTowNDowNVowNzowMGludmFsaWQgY29tbWFuZCBzcGVjaWZpZWRD
b250ZW50LVRyYW5zZmVyLUVuY29kaW5ndGV4dC9wbGFpbjsgY2hhcnNldD11dGYt
OG5vIGFuc3dlciBmcm9tIEROUyBzZXJ2ZXJubyBzdWl0YWJsZSBhZGRyZXNzIGZv
dW5kdW5leHBlY3RlZCAnWycgaW4gYWRkcmVzc3VuZXhwZWN0ZWQgJ10nIGluIGFk
ZHJlc3MyOTEwMzgzMDQ1NjczMzcwMzYxMzI4MTI1L3Byb2Mvc3lzL2tlcm5lbC9o
b3N0bmFtZXJlZmxlY3QuVmFsdWUuU2V0TWFwSW5kZXhyZWZsZWN0OiBCaXRzIG9m
IG5pbCBUeXBlcmVmbGVjdC5WYWx1ZS5PdmVyZmxvd0ludGdvcm91dGluZSBwcm9m
aWxlIGNsZWFudXBjaGFuc2VuZDogc3B1cmlvdXMgd2FrZXVwIHdoZW4gYXR0ZW1w
dGluZyB0byBvcGVuIHJ1bnRpbWXCt2xvY2s6IGxvY2sgY291bnRiYWQgc3lzdGVt
IGh1Z2UgcGFnZSBzaXplYXJlbmEgYWxyZWFkeSBpbml0aWFsaXplZCB0byB1bnVz
ZWQgcmVnaW9uIG9mIHNwYW51bmFsaWduZWQgc3lzTm9IdWdlUGFnZU9TL3NjaGVk
L2dvbWF4cHJvY3M6dGhyZWFkc3JlbWFpbmluZyBwb2ludGVyIGJ1ZmZlcnNydW50
aW1lOiBlcG9sbHdhaXQgb24gZmQgc2xpY2UgYm91bmRzIG91dCBvZiByYW5nZV9j
Z29fdGhyZWFkX3N0YXJ0IG1pc3NpbmdhbGxnYWRkOiBiYWQgc3RhdHVzIEdpZGxl
cnVudGltZTogcHJvZ3JhbSBleGNlZWRzIHN0YXJ0bTogcCBoYXMgcnVubmFibGUg
Z3NzdG9wbG9ja2VkbTogbm90IHJ1bm5hYmxlcmVsZWFzZXA6IGludmFsaWQgcCBz
dGF0ZWNoZWNrZGVhZDogbm8gcCBmb3IgdGltZXJjaGVja2RlYWQ6IG5vIG0gZm9y
IHRpbWVydW5leHBlY3RlZCBmYXVsdCBhZGRyZXNzIG1pc3Npbmcgc3RhY2sgaW4g
bmV3c3RhY2tiYWQgc3RhdHVzIGluIHNocmlua3N0YWNrbWlzc2luZyB0cmFjZUdD
U3dlZXBTdGFydG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlubyBzdWNoIGRldmlj
ZSBvciBhZGRyZXNzaW52YWxpZCBjcm9zcy1kZXZpY2UgbGlua3Jlc291cmNlIGRl
YWRsb2NrIGF2b2lkZWRzb2NrZXQgdHlwZSBub3Qgc3VwcG9ydGVkbm8gYnVmZmVy
IHNwYWNlIGF2YWlsYWJsZW9wZXJhdGlvbiBub3cgaW4gcHJvZ3Jlc3NUaGlzIGlz
IG5vdCBhIExNVFAgc2VydmVyTWF4IG1lc3NhZ2Ugc2l6ZSBleGNlZWRlZHRsczog
cHJvdG9jb2wgaXMgc2h1dGRvd25pbnZhbGlkIHNwZiBxdWFsaWZpZXI6ICV2eDUw
OTogaW52YWxpZCBSRE5TZXF1ZW5jZXg1MDk6IGludmFsaWQgUlNBIG1vZHVsdXN4
NTA5OiBtYWxmb3JtZWQgZXh0ZW5zaW9ueDUwOTogbWFsZm9ybWVkIHNpZ25hdHVy
ZWpzb246IFVuZXhwZWN0ZWQga2V5IHR5cGVqc29uOiB1bnN1cHBvcnRlZCB2YWx1
ZTogaHR0cDogaW52YWxpZCBjb29raWUgbmFtZWh0dHAyOiBSZXF1ZXN0LlVSSSBp
cyBuaWxodHRwMjogRnJhbWVyICVwOiByZWFkICV2ZnJhbWVfZGF0YV9wYWRfYnl0
ZV9zaG9ydGZyYW1lX3NldHRpbmdzX2hhc19zdHJlYW1mcmFtZV9oZWFkZXJzX3pl
cm9fc3RyZWFtZnJhbWVfaGVhZGVyc19wYWRfdG9vX2JpZ2ZyYW1lX3ByaW9yaXR5
X2JhZF9sZW5ndGhodHRwMjogaW52YWxpZCBoZWFkZXI6ICV2c3RyaWN0LXRyYW5z
cG9ydC1zZWN1cml0eWh0dHAyOiB1bnN1cHBvcnRlZCBzY2hlbWVyZWFkX2ZyYW1l
X3VuZXhwZWN0ZWRfZW9maHR0cDogaW52YWxpZCBIb3N0IGhlYWRlcnBvcnQgbnVt
YmVyIG91dCBvZiByYW5nZSBpbnZhbGlkIHVzZXJuYW1lL3Bhc3N3b3JkbmV0L3Vy
bDogaW52YWxpZCB1c2VyaW5mb3htbDogZW5kIHRhZyB3aXRoIG5vIG5hbWVYTUwg
c3ludGF4IGVycm9yIG9uIGxpbmUgdW5leHBlY3RlZCBlbmQgZWxlbWVudCA8L2lu
dmFsaWQgY2hhcmFjdGVyIGVudGl0eSBpbGxlZ2FsIGNoYXJhY3RlciBjb2RlICVV
Y29udGV4dCBkZWFkbGluZSBleGNlZWRlZElQdjQgZmllbGQgaGFzIHZhbHVlID4y
NTVpbmNvbnNpc3RlbnQgcG9sbC5mZE11dGV4R09ERUJVRzogY2FuIG5vdCBlbmFi
bGUgInVua25vd24gR28gdHlwZSBmb3Igc2xpY2VleHBsaWNpdCB0YWcgaGFzIG5v
IGNoaWxkaW52YWxpZCBvYmplY3QgaWRlbnRpZmllcnRlc3Rpbmcgc2ltdWxhdGVk
IGZhaWx1cmVkb21haW4gZm9yIHJlY2lldmluZyBtYWlsc0Nhbm5vdCByZWFkIHlv
dXIgbWVzc2FnZTogY29uc3VtZVBocmFzZTogY29uc3VtZWQgJXFjb25zdW1lUGhy
YXNlOiBoaXQgZXJyOiAldm1haWw6IHRyYWlsaW5nIGRvdCBpbiBhdG9tcmVmbGVj
dC5WYWx1ZS5DYW5JbnRlcmZhY2U6IGRheS1vZi15ZWFyIG91dCBvZiByYW5nZeKH
qCBzbXRwIHNlcnZlciBzdGFydGVkIG9uaW50ZXJuYWwgZXJyb3I6IG5vIGhhbmRs
ZXJjYW5ub3QgbWFyc2hhbCBETlMgbWVzc2FnZXRvbyBtYW55IGNvbG9ucyBpbiBh
ZGRyZXNzU1JWIGhlYWRlciBuYW1lIGlzIGludmFsaWR1bmNsb3NlZCBjcml0ZXJp
b24gYnJhY2tldGNyaXRlcmlvbiBsYWNrcyBlcXVhbCBzaWduZW1wdHkgYnVmZmVy
IGluIENvcHlCdWZmZXIvZXRjL2h0dHBkL2NvbmYvbWltZS50eXBlc21pbWU6IHVu
aGFuZGxlZCBjaGFyc2V0ICVxMTQ1NTE5MTUyMjgzNjY4NTE4MDY2NDA2MjU3Mjc1
OTU3NjE0MTgzNDI1OTAzMzIwMzEyNSB1c2luZyB1bmFkZHJlc3NhYmxlIHZhbHVl
dW5rbm93biBBQkkgcGFyYW1ldGVyIGtpbmQgdXNpbmcgemVybyBWYWx1ZSBhcmd1
bWVudHJlZmxlY3QuVmFsdWUuT3ZlcmZsb3dVaW50YWxsIGdvcm91dGluZXMgc3Rh
Y2sgdHJhY2VTSUdTVE9QOiBzdG9wLCB1bmJsb2NrYWJsZUdDIGJhY2tncm91bmQg
c3dlZXBlciB3YWl0Y2FsbCBmcm9tIHVua25vd24gZnVuY3Rpb25ub3Rld2FrZXVw
IC0gZG91YmxlIHdha2V1cHBlcnNpc3RlbnRhbGxvYzogc2l6ZSA9PSAwL2djL2N5
Y2xlcy90b3RhbDpnYy1jeWNsZXNuZWdhdGl2ZSBpZGxlIG1hcmsgd29ya2Vyc3Vz
ZSBvZiBpbnZhbGlkIHN3ZWVwTG9ja2VycnVudGltZTogYmFkIHNwYW4gcy5zdGF0
ZT1mb3JFYWNoUDogUCBkaWQgbm90IHJ1biBmbndha2VwOiBuZWdhdGl2ZSBubXNw
aW5uaW5nc3RhcnRsb2NrZWRtOiBsb2NrZWQgdG8gbWVpbml0dGFzayB3aXRoIG5v
IGZ1bmN0aW9uc2NvcnJ1cHRlZCBzZW1hcGhvcmUgdGlja2V0b3V0IG9mIG1lbW9y
eSAoc3RhY2thbGxvYylpbnZhbGlkIHVzZSBvZiBnb3N0YXJ0Y2FsbHNocmlua2lu
ZyBzdGFjayBpbiBsaWJjYWxscnVudGltZTogcGNIZWFkZXI6IG1hZ2ljPSB0cmFj
ZVJlZ2lvbjogb3V0IG9mIG1lbW9yeW5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBl
bm8gQ1NJIHN0cnVjdHVyZSBhdmFpbGFibGVpbnZhbGlkIHJlcXVlc3QgZGVzY3Jp
cHRvcm5hbWUgbm90IHVuaXF1ZSBvbiBuZXR3b3JrcmVxdWlyZWQga2V5IG5vdCBh
dmFpbGFibGUldiBjb21tYW5kIG5vdCBpbXBsZW1lbnRlZFVua25vd24gTUFJTCBG
Uk9NIGFyZ3VtZW50TWlzc2luZyBNQUlMIEZST00gY29tbWFuZC5iYWQgY2VydGlm
aWNhdGUgaGFzaCB2YWx1ZUVDRFNBIHZlcmlmaWNhdGlvbiBmYWlsdXJlc3ludGF4
IGVycm9yIGZvciB0b2tlbjogJXZ4NTA5OiBtYWxmb3JtZWQgcGFyYW1ldGVyc3g1
MDk6IG1hbGZvcm1lZCBleHRlbnNpb25zZW5jb3VudGVyZWQgYSBjeWNsZSB2aWEg
JXNodHRwOiBpbnZhbGlkIGNvb2tpZSB2YWx1ZXJlYWQgZnJvbSBlbXB0eSBkYXRh
QnVmZmVybmV0L2h0dHA6IHJlcXVlc3QgY2FuY2VsZWRzdG9wcGVkIGFmdGVyIDEw
IHJlZGlyZWN0c2R1cGxpY2F0ZSBwc2V1ZG8taGVhZGVyICVxaHR0cDI6IEZyYW1l
ciAlcDogd3JvdGUgJXZmcmFtZV93aW5kb3d1cGRhdGVfYmFkX2xlbmZyYW1lX3By
aW9yaXR5X3plcm9fc3RyZWFtaHR0cDI6IGludmFsaWQgSG9zdCBoZWFkZXJtYWxm
b3JtZWQgSFRUUCBzdGF0dXMgY29kZWFkZHJlc3MgdHlwZSBub3Qgc3VwcG9ydGVk
SFRUUCBWZXJzaW9uIE5vdCBTdXBwb3J0ZWRyZWFkTG9vcFBlZWtGYWlsTG9ja2Vk
OiAld2ludmFsaWQgcG9ydCAlcSBhZnRlciBob3N0aW52YWxpZCBhcmd1bWVudCB0
byBJbnQ2M25pbnZhbGlkIGFyZ3VtZW50IHRvIEludDMxbnNlZ21lbnQgcHJlZml4
IGlzIHJlc2VydmVkY3J5cHRvYnl0ZTogaW50ZXJuYWwgZXJyb3JtbGtlbTogaW52
YWxpZCBzZWVkIGxlbmd0aFVuc3VwcG9ydGVkIERTIERpZ2VzdCBUeXBlCjsgTlNF
QzMgSEFTSCBVTkRFUlNUT09EOiAKOzsgVFNJRyBQU0VVRE9TRUNUSU9OOgo7IGJh
c2UgMTI4IGludGVnZXIgdG9vIGxhcmdldHJ1bmNhdGVkIGJhc2UgMTI4IGludGVn
ZXJhc24xOiBpbnZhbGlkIFVURi04IHN0cmluZ25vbiBzZXF1ZW5jZSB0YWdnZWQg
YXMgc2V0aWQgKCV2KSA8PSBldmljdENvdW50ICgldiltYWxmb3JtZWQgY2h1bmtl
ZCBlbmNvZGluZ2ludmFsaWQgQ1IgaW4gY2h1bmtlZCBsaW5lZWQyNTUxOTogaW52
YWxpZCBzaWduYXR1cmVjaGFjaGEyMDogd3Jvbmcgbm9uY2Ugc2l6ZWNoYWNoYTIw
OiBjb3VudGVyIG92ZXJmbG93dGhlIHJlYWQgdGltZW91dCBpbiBzZWNvbmRzY29u
c3VtZUFkZHJTcGVjOiBmYWlsZWQ6ICV2Y2dvIHN0dWI6IGNnbyBub3QgYXZhaWxh
YmxlaW52YWxpZCBib29sZWFuIGZsYWcgJXM6ICV2ZmxhZyBuZWVkcyBhbiBhcmd1
bWVudDogLSVzMzYzNzk3ODgwNzA5MTcxMjk1MTY2MDE1NjI1cmVmbGVjdGxpdGUu
VmFsdWUuSW50ZXJmYWNlcmVmbGVjdGxpdGUuVmFsdWUuTnVtTWV0aG9kIGlzIG5v
dCBhc3NpZ25hYmxlIHRvIHR5cGUgcmVmbGVjdC5WYWx1ZS5VbnNhZmVQb2ludGVy
UGFnZUNhY2hlUGFnZXNMZWFrZWQgKHRlc3QpU0lHSUxMOiBpbGxlZ2FsIGluc3Ry
dWN0aW9uU0lHWENQVTogY3B1IGxpbWl0IGV4Y2VlZGVkbWFrZWNoYW46IHNpemUg
b3V0IG9mIHJhbmdlRyB3YWl0aW5nIGxpc3QgaXMgY29ycnVwdGVkTSBzdHJ1Y3R1
cmUgdXNlcyBzaXplY2xhc3MgcnVudGltZcK3dW5sb2NrOiBsb2NrIGNvdW50cHJv
Z1RvUG9pbnRlck1hc2s6IG92ZXJmbG93L2djL2N5Y2xlcy9mb3JjZWQ6Z2MtY3lj
bGVzL21lbW9yeS9jbGFzc2VzL290aGVyOmJ5dGVzL21lbW9yeS9jbGFzc2VzL3Rv
dGFsOmJ5dGVzZmFpbGVkIHRvIHNldCBzd2VlcCBiYXJyaWVyd29yay5ud2FpdCB3
YXMgPiB3b3JrLm5wcm9jIG5vdCBpbiBzdGFjayByb290cyByYW5nZSBbYWxsb2Nh
dGVkIHBhZ2VzIGJlbG93IHplcm8/YWRkcmVzcyBub3QgYSBzdGFjayBhZGRyZXNz
bXNwYW4uc3dlZXA6IGJhZCBzcGFuIHN0YXRlaW52YWxpZCBwcm9maWxlIGJ1Y2tl
dCB0eXBlcnVudGltZTogY29ycnVwdGVkIHBvbGxkZXNjcnVudGltZTogbmV0cG9s
bGluaXQgZmFpbGVkcnVudGltZTogYXN5bmNQcmVlbXB0U3RhY2s9cnVudGltZTog
dGhyZWFkIElEIG92ZXJmbG93c3RvcFRoZVdvcmxkOiBob2xkaW5nIGxvY2tzZ2Nz
dG9wbTogbm90IHdhaXRpbmcgZm9yIGdjcnVudGltZTogY2hlY2tkZWFkOiBubWlk
bGU9cnVudGltZTogY2hlY2tkZWFkOiBmaW5kIGcgcnVubG9jayBvZiB1bmxvY2tl
ZCByd211dGV4c2lnbmFsIHJlY2VpdmVkIGR1cmluZyBmb3Jrc2lnc2VuZDogaW5j
b25zaXN0ZW50IHN0YXRlbWFrZXNsaWNlOiBsZW4gb3V0IG9mIHJhbmdlbWFrZXNs
aWNlOiBjYXAgb3V0IG9mIHJhbmdlZ3Jvd3NsaWNlOiBsZW4gb3V0IG9mIHJhbmdl
c3RhY2sgc2l6ZSBub3QgYSBwb3dlciBvZiAydGltZXIgd2hlbiBtdXN0IGJlIHBv
c2l0aXZlOiB1bmV4cGVjdGVkIHJldHVybiBwYyBmb3IgYWJpLk5ld05hbWU6IHRh
ZyB0b28gbG9uZzogY2hhbm5lbCBudW1iZXIgb3V0IG9mIHJhbmdlY29tbXVuaWNh
dGlvbiBlcnJvciBvbiBzZW5kbm90IGEgWEVOSVggbmFtZWQgdHlwZSBmaWxla2V5
IHdhcyByZWplY3RlZCBieSBzZXJ2aWNlU01UUFVURjggaXMgbm90IGltcGxlbWVu
dGVkaW5zdWZmaWNpZW50IHNlY3VyaXR5IGxldmVsQ3VydmVQMjU2Q3VydmVQMzg0
Q3VydmVQNTIxY3J5cHRvYnl0ZTogbGVuZ3RoIG92ZXJmbG93dGxzOiBzaG9ydCBy
ZWFkIGZyb20gUmFuZDogaHJyIGVjaCBhY2NlcHQgY29uZmlybWF0aW9udW5zdXBw
b3J0ZWQgc3RyaW5nIHR5cGU6ICV2eDUwOTogbWFsZm9ybWVkIGNlcnRpZmljYXRl
eDUwOTogbm8gdmFsaWQgY2hhaW5zIGJ1aWx0Y3VycmVudCB0aW1lICVzIGlzIGFm
dGVyICVzYWZ0ZXIgb2JqZWN0IGtleTp2YWx1ZSBwYWlybmV0L2h0dHA6IHVzZSBs
YXN0IHJlc3BvbnNlaHR0cHNlcnZlY29udGVudGtlZXBoZWFkZXJzaW52YWxpZCBk
ZXBlbmRlbnQgc3RyZWFtIElEaHR0cDI6IHJlc3BvbnNlIGJvZHkgY2xvc2VkbmV0
L2h0dHA6IHJlcXVlc3QgY29tcGxldGVkREFUQSBmcmFtZSB3aXRoIHN0cmVhbSBJ
RCAwZnJhbWVfcnN0c3RyZWFtX3plcm9fc3RyZWFtZnJhbWVfcHVzaHByb21pc2Vf
cGFkX3Nob3J0YWNjZXNzLWNvbnRyb2wtYWxsb3ctb3JpZ2lubmV0L2h0dHA6IGlu
dmFsaWQgbWV0aG9kICVxbmV0L2h0dHA6IGludmFsaWQgaGVhZGVyICVzdW5zdXBw
b3J0ZWQgcHJvdG9jb2wgc2NoZW1leG1sOiBzdGFydCB0YWcgd2l0aCBubyBuYW1l
eG1sOiBvcGVuaW5nIGNoYXJzZXQgJXE6ICV3Y29va2llamFyOiBpbnZhbGlkIGxh
YmVsICVxSVB2NiBmaWVsZCBoYXMgdmFsdWUgPj0yXjE2Y2lwaGVyOiBpbmNvcnJl
Y3QgbGVuZ3RoIElWaHR0cCBjaHVuayBsZW5ndGggdG9vIGxhcmdlZXhwcmVzc2lv
biBuZXN0cyB0b28gZGVlcGx5aW52YWxpZCBQMjI0IHBvaW50IGVuY29kaW5naW52
YWxpZCBQMjU2IHBvaW50IGVuY29kaW5naW52YWxpZCBQMzg0IHBvaW50IGVuY29k
aW5naW52YWxpZCBQNTIxIHBvaW50IGVuY29kaW5naW5wdXQgb3ZlcmZsb3dzIHRo
ZSBtb2R1bHVzTkFGIGRpZ2l0cyBtdXN0IGZpdCBpbiBpbnQ4dGhlIHdyaXRlIHRp
bWVvdXQgaW4gc2Vjb25kc0ZvcmJpZGRlbiBmaWxlIHR5cGU6ICVzICglcylTUEYg
cmVzdWx0IHVua25vd24sIGFsbG93aW5ncGFyc2VBZGRyZXNzOiBkaXNwbGF5TmFt
ZT0lcW1haWw6IG1pc3NpbmcgQCBpbiBhZGRyLXNwZWNtYWlsOiBubyBkb21haW4g
aW4gYWRkci1zcGVjbWFpbDogdW5jbG9zZWQgcXVvdGVkLXN0cmluZ2Vycm9yczog
dGFyZ2V0IGNhbm5vdCBiZSBuaWx1bnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3Ig
Y2Fubm90IHVubWFyc2hhbCBETlMgbWVzc2FnZS9wcm9jL3N5cy9uZXQvY29yZS9z
b21heGNvbm4vdXNyL2xvY2FsL3NoYXJlL21pbWUvZ2xvYnMybWltZTogaW52YWxp
ZCBoZXggYnl0ZSAlIzAyeG1hbGZvcm1lZCBNSU1FIGhlYWRlciBsaW5lOiAxODE4
OTg5NDAzNTQ1ODU2NDc1ODMwMDc4MTI1OTA5NDk0NzAxNzcyOTI4MjM3OTE1MDM5
MDYyNXJlZmxlY3QuTWFrZVNsaWNlOiBsZW4gPiBjYXBTSUdIVVA6IHRlcm1pbmFs
IGxpbmUgaGFuZ3VwU0lHV0lOQ0g6IHdpbmRvdyBzaXplIGNoYW5nZUdDIG1hcmsg
YXNzaXN0IHdhaXQgZm9yIHdvcmtjb21wYXJpbmcgdW5jb21wYXJhYmxlIHR5cGUg
cnVudGltZTogYmFkIGxmbm9kZSBhZGRyZXNzIG5vdGV3YWtldXAgLSBkb3VibGUg
d2FrZXVwIChyZWdpb24gZXhjZWVkcyB1aW50cHRyIHJhbmdlL2djL2hlYXAvZnJl
ZXMtYnktc2l6ZTpieXRlcy9nYy9oZWFwL3RpbnkvYWxsb2NzOm9iamVjdHMvc2No
ZWQvZ29yb3V0aW5lczpnb3JvdXRpbmVzZ2NCZ01hcmtXb3JrZXI6IG1vZGUgbm90
IHNldG1zcGFuLnN3ZWVwOiBtIGlzIG5vdCBsb2NrZWRmb3VuZCBwb2ludGVyIHRv
IGZyZWUgb2JqZWN0bWhlYXAuZnJlZVNwYW5Mb2NrZWQgLSBzcGFuIGZhdGFsOiBt
b3Jlc3RhY2sgb24gZ3NpZ25hbApydW50aW1lOiBjYXNnc3RhdHVzOiBvbGR2YWw9
Z2NzdG9wbTogbmVnYXRpdmUgbm1zcGlubmluZ2ZpbmRydW5uYWJsZTogbmV0cG9s
bCB3aXRoIHBzYXZlIG9uIHN5c3RlbSBnIG5vdCBhbGxvd2VkbmV3cHJvYzE6IG5l
d2cgbWlzc2luZyBzdGFja25ld3Byb2MxOiBuZXcgZyBpcyBub3QgR2RlYWRGaXhl
ZFN0YWNrIGlzIG5vdCBwb3dlci1vZi0ybWlzc2luZyBzdGFjayBpbiBzaHJpbmtz
dGFjayBhcmdzIHN0YWNrIG1hcCBlbnRyaWVzIGZvciBpbnZhbGlkIHJ1bnRpbWUg
c3ltYm9sIHRhYmxlcnVudGltZTogbm8gbW9kdWxlIGRhdGEgZm9yIG1pc21hdGNo
ZWQgaXNTZW5kaW5nIHVwZGF0ZXNbb3JpZ2luYXRpbmcgZnJvbSBnb3JvdXRpbmUg
dHJhY2VSZWdpb246IGFsbG9jIHRvbyBsYXJnZWFiaS5OZXdOYW1lOiBuYW1lIHRv
byBsb25nOiBwcm90b2NvbCBkcml2ZXIgbm90IGF0dGFjaGVkZmlsZSBkZXNjcmlw
dG9yIGluIGJhZCBzdGF0ZWRlc3RpbmF0aW9uIGFkZHJlc3MgcmVxdWlyZWR0bHM6
IG1hbGZvcm1lZCBFQ0hDb25maWdMaXN0RWQyNTUxOSB2ZXJpZmljYXRpb24gZmFp
bHVyZXBhcnNlIGVycm9yIGZvciB0b2tlbiAldjogJXZieXRlczogbmVnYXRpdmUg
UmVwZWF0IGNvdW50bXVsdGlwYXJ0OiBtZXNzYWdlIHRvbyBsYXJnZW11bHRpcGFy
dDogYm91bmRhcnkgaXMgZW1wdHl4NTA5OiBpbnZhbGlkIFJTQSBwdWJsaWMga2V5
eDUwOTogaW52YWxpZCBEU0EgcHVibGljIGtleXg1MDk6IGludmFsaWQgRFNBIHBh
cmFtZXRlcnN4NTA5OiBuZWdhdGl2ZSBzZXJpYWwgbnVtYmVyY3VycmVudCB0aW1l
ICVzIGlzIGJlZm9yZSAlc2pzb246IFVubWFyc2hhbChub24tcG9pbnRlciAhIyQl
JigpKistLi86Ozw9Pj9AW11eX3t8fX4gdW5leHBlY3RlZCBlbmQgb2YgSlNPTiBp
bnB1dGh0dHAyOiBjbGllbnQgY29ubiBpcyBjbG9zZWR0ZXh0L3BsYWluOyBjaGFy
c2V0PXV0Zi0xNmJldGV4dC9wbGFpbjsgY2hhcnNldD11dGYtMTZsZWFwcGxpY2F0
aW9uL3gtcmFyLWNvbXByZXNzZWRpbnZhbGlkIGhlYWRlciBmaWVsZCBuYW1lICVx
aHR0cDI6IGhlYWRlciBsaXN0IHRvbyBsYXJnZWFjY2Vzcy1jb250cm9sLWFsbG93
LWhlYWRlcnNhY2Nlc3MtY29udHJvbC1hbGxvdy1tZXRob2RzZm9yZ2V0dGluZyB1
bmtub3duIHN0cmVhbSBpZGh0dHAyOiBUcmFuc3BvcnQgcmVjZWl2ZWQgJXN1bmV4
cGVjdGVkIHByb3RvY29sIHZlcnNpb24gZ2VuZXJhbCBTT0NLUyBzZXJ2ZXIgZmFp
bHVyZVRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQppbnZhbGlkIGVtcHR5IENv
bnRlbnQtTGVuZ3RobmV0L2h0dHA6IGludmFsaWQgdHJhaWxlciAlc2h0dHA6IG5v
IEhvc3QgaW4gcmVxdWVzdCBVUkxjcnlwdG8vcnNhOiBkZWNyeXB0aW9uIGVycm9y
Y3J5cHRvL2FlczogY291bnRlciBvdmVyZmxvd3BlbmRpbmcgQVNOLjEgY2hpbGQg
dG9vIGxvbmdVbnN1cHBvcnRlZCBETlNLRVkgQWxnb3JpdGhtYXNuMTogc3RyaW5n
IG5vdCB2YWxpZCBVVEYtOGJpZzogbWlzdXNlIG9mIGV4cE5OV2luZG93ZWRpbnZh
bGlkIGJ5dGUgaW4gY2h1bmsgbGVuZ3RoaW52YWxpZCBwcm94eSBhZGRyZXNzICVx
OiAldkRldEVDRFNBIFAtMjU2IFNIQTItNTEyIHNpZ25maXBzMTQwOiB2ZXJpZmll
ZCBjb2RlK2RhdGEKaW52YWxpZCBQMjI0RWxlbWVudCBlbmNvZGluZ2ludmFsaWQg
UDM4NEVsZW1lbnQgZW5jb2RpbmdpbnZhbGlkIFA1MjFFbGVtZW50IGVuY29kaW5n
dGhlIHNtdHAgYWRkcmVzcyB0byBsaXN0ZW4gb25tYXhpbXVtIGluY29taW5nIG1l
c3NhZ2Ugc2l6ZURvbWFpbiAlcyBub3QgaW4gYWxsb3dlZCBsaXN0Tm8gc2VuZGVy
IGRvbWFpbiByZXN0cmljdGlvbnNTZW5kZXIgZG9tYWluIG5vdCBibGFja2xpc3Rl
ZFJhdGUgbGltaXQgZXhjZWVkZWQgZm9yIElQICVzcGFyc2VBZGRyZXNzOiBzdGF0
ZSBpcyBub3cgJXFtYWlsOiB1bmNsb3NlZCBkb21haW4tbGl0ZXJhbFRpbWUuVW5t
YXJzaGFsQmluYXJ5OiBubyBkYXRhdW5zdXBwb3J0ZWQgJ0JvZHknIHR5cGUvdmFs
dWUqKioqKiBCT0RZIElTIGlvLlJlYWRlciAqKioqKm1pc21hdGNoZWQgbG9jYWwg
YWRkcmVzcyB0eXBldW5rbm93biBJUCBwcm90b2NvbCBzcGVjaWZpZWRidWZpby5T
Y2FubmVyOiB0b2tlbiB0b28gbG9uZ21pbWU6IGludmFsaWQgbWVkaWEgcGFyYW1l
dGVyNDU0NzQ3MzUwODg2NDY0MTE4OTU3NTE5NTMxMjVyZWZsZWN0OiBLZXkgb2Yg
bm9uLW1hcCB0eXBlICBjYW5ub3QgYmUgY29udmVydGVkIHRvIHR5cGUgU0lHUElQ
RTogd3JpdGUgdG8gYnJva2VuIHBpcGVTSUdQV1I6IHBvd2VyIGZhaWx1cmUgcmVz
dGFydGV4ZWN1dGluZyBvbiBHbyBydW50aW1lIHN0YWNrcnVudGltZTogbW1hcDog
YWNjZXNzIGRlbmllZAovY3B1L2NsYXNzZXMvaWRsZTpjcHUtc2Vjb25kcy9jcHUv
Y2xhc3Nlcy91c2VyOmNwdS1zZWNvbmRzL2djL2hlYXAvYWxsb2NzLWJ5LXNpemU6
Ynl0ZXMvZ2Mvc3RhY2svc3RhcnRpbmctc2l6ZTpieXRlc2djIGRvbmUgYnV0IGdj
cGhhc2UgIT0gX0dDb2ZmcnVudGltZTogcC5nY01hcmtXb3JrZXJNb2RlPSBzY2Fu
b2JqZWN0IG9mIGEgbm9zY2FuIG9iamVjdHJ1bnRpbWU6IG1hcmtpbmcgZnJlZSBv
YmplY3QgYWRkc3BlY2lhbCBvbiBpbnZhbGlkIHBvaW50ZXJydW50aW1lOiBzdW1t
YXJ5IG1heCBwYWdlcyA9IHJ1bnRpbWU6IGxldmVsU2hpZnRbbGV2ZWxdID0gZG9S
ZWNvcmRHb3JvdXRpbmVQcm9maWxlIGdwMT1ydW50aW1lOiBldmVudGZkIGZhaWxl
ZCB3aXRoIHRyaWVkIHRvIHVucGluIG5vbi1HbyBwb2ludGVycnVudGltZTogc3Vk
b2cgd2l0aCBub24tbmlsIGNlbnRlcnN5c2NhbGwgaW5jb25zaXN0ZW50IGJwIGVu
dGVyc3lzY2FsbCBpbmNvbnNpc3RlbnQgc3AgZ2ZwdXQ6IGJhZCBzdGF0dXMgKG5v
dCBHZGVhZClzZW1hY3F1aXJlIG5vdCBvbiB0aGUgRyBzdGFja3J1bnRpbWU6IHNw
bGl0IHN0YWNrIG92ZXJmbG93c3RyaW5nIGNvbmNhdGVuYXRpb24gdG9vIGxvbmdp
bnZhbGlkIGZ1bmN0aW9uIHN5bWJvbCB0YWJsZXRyYWNlOiByZWFkaW5nIGFmdGVy
IHNodXRkb3ducnVudGltZTogdHJhY2ViYWNrIHN0dWNrLiBwYz10cmllZCB0byB0
cmFjZSBkZWFkIGdvcm91dGluZXJ1bnRpbWU6IGltcG9zc2libGUgdHlwZSBraW5k
dG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW1udW1lcmljYWwgcmVzdWx0IG91
dCBvZiByYW5nZW1hY2hpbmUgaXMgbm90IG9uIHRoZSBuZXR3b3JrcHJvdG9jb2wg
ZmFtaWx5IG5vdCBzdXBwb3J0ZWRvcGVyYXRpb24gYWxyZWFkeSBpbiBwcm9ncmVz
c25vIFhFTklYIHNlbWFwaG9yZXMgYXZhaWxhYmxlTWF4aW11bSBtZXNzYWdlIHNp
emUgZXhjZWVkZWRSRVFVSVJFVExTIGlzIG5vdCBpbXBsZW1lbnRlZE1pc3Npbmcg
b3BlbmluZyBhbmdsZSBicmFja2V0TWlzc2luZyBjbG9zaW5nIGFuZ2xlIGJyYWNr
ZXRJJ2xsIG1ha2Ugc3VyZSA8JXY+IGdldHMgdGhpc3Vua25vd24gY2VydGlmaWNh
dGUgYXV0aG9yaXR5dGxzOiB0b28gbWFueSBpZ25vcmVkIHJlY29yZHN0bHM6IGlu
dmFsaWQgb3V0ZXIgZXh0ZW5zaW9uc3RsczogaW52YWxpZCBOZXh0UHJvdG9zIHZh
bHVldGxzOiBpbnZhbGlkIHNlcnZlciBrZXkgc2hhcmV0bHM6IGludmFsaWQgY2xp
ZW50IGtleSBzaGFyZXRsczogaW52YWxpZCBzZXNzaW9uIGVuY29kaW5ndW5leHBl
Y3RlZCBlb2YgZm9yIG1hY3JvICgldil4NTA5OiB1bnN1cHBvcnRlZCB0aW1lIGZv
cm1hdHg1MDk6IGNhbm5vdCBwYXJzZSBVUkkgJXE6ICVzeDUwOTogbWFsZm9ybWVk
IHNlcmlhbCBudW1iZXJ4NTA5OiBjYW5ub3QgcGFyc2UgZG5zTmFtZSAlcWh0dHA6
ICc9JyBub3QgZm91bmQgaW4gY29va2lld3JpdGUgb24gdW5pbml0aWFsaXplZCBi
dWZmZXJodHRwMjogY2xpZW50IGNvbm4gbm90IHVzYWJsZU1vbiwgMDIgSmFuIDIw
MDYgMTU6MDQ6MDUgR01UYXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3RodHRw
OiBpZGxlIGNvbm5lY3Rpb24gdGltZW91dE1vbiwgMDIgSmFuIDIwMDYgMTU6MDQ6
MDUgTVNUTW9uLCAwMi1KYW4tMjAwNiAxNTowNDowNSBNU1RpbnRlcm5hbCBlcnJv
cjogdG9vayB0b28gbXVjaGZyYW1lX3B1c2hwcm9taXNlX3plcm9fc3RyZWFtZnJh
bWVfcHVzaHByb21pc2VfcGFkX3Rvb19iaWdhY2Nlc3MtY29udHJvbC1leHBvc2Ut
aGVhZGVyc2FjY2Vzcy1jb250cm9sLXJlcXVlc3QtbWV0aG9kaHR0cDI6IGNsaWVu
dCBjb25uZWN0aW9uIGxvc3ROb24tQXV0aG9yaXRhdGl2ZSBJbmZvcm1hdGlvblBy
b3h5IEF1dGhlbnRpY2F0aW9uIFJlcXVpcmVkVW5hdmFpbGFibGUgRm9yIExlZ2Fs
IFJlYXNvbnNkdXAgaWRsZSBwY29ubiAlcCBpbiBmcmVlbGlzdGludmFsaWQgY2hh
cmFjdGVycyBiZXR3ZWVuIDwvZXhwZWN0ZWQgdGFyZ2V0IG5hbWUgYWZ0ZXIgPD9l
eHBlY3RlZCBlbGVtZW50IG5hbWUgYWZ0ZXIgPGNyeXB0by9hZXM6IGludmFsaWQg
a2V5IHNpemUgY3J5cHRvL2RlczogaW52YWxpZCBrZXkgc2l6ZSBjcnlwdG8vcmM0
OiBpbnZhbGlkIGtleSBzaXplIGludGVnZXIgbm90IG1pbmltYWxseS1lbmNvZGVk
emVybyBsZW5ndGggT0JKRUNUIElERU5USUZJRVIyMDA2MDEwMjE1MDQwNS45OTk5
OTk5OTlaMDcwMHBrY3MxMjogb2RkLWxlbmd0aCBCTVAgc3RyaW5naW52YWxpZCBj
aGFyYWN0ZXIgY2xhc3MgcmFuZ2VpbnZhbGlkIFAyNTYgZWxlbWVudCBlbmNvZGlu
Z0ZJUFMgMTQwLTMgc2VsZi10ZXN0IGZhaWxlZDogRklQUyAxNDAtMyBzZWxmLXRl
c3QgcGFzc2VkOiBwb2x5MTMwNTogdW5leHBlY3RlZCBvdmVyZmxvd3llYXIgb3V0
c2lkZSBvZiByYW5nZSBbMCw5OTk5XU1vbiwgMiBKYW4gMjAwNiAxNTowNDowNSAt
MDcwMGNhbGxlZCBlbnRyeSBvbiBub24tZW50cnkgbm9kZW1pbWU6IGR1cGxpY2F0
ZSBwYXJhbWV0ZXIgbmFtZW1pc3NpbmcgdmFsaWRhdGVGaXJzdExpbmUgZnVuYzIy
NzM3MzY3NTQ0MzIzMjA1OTQ3ODc1OTc2NTYyNXJlZmxlY3Q6IEVsZW0gb2YgaW52
YWxpZCB0eXBlIHJlZmxlY3Q6IExlbiBvZiBub24tYXJyYXkgdHlwZU1hcEl0ZXIu
S2V5IGNhbGxlZCBiZWZvcmUgTmV4dGFzc2lnbm1lbnQgdG8gZW50cnkgaW4gbmls
IG1hcFNJR1VTUjE6IHVzZXItZGVmaW5lZCBzaWduYWwgMVNJR1VTUjI6IHVzZXIt
ZGVmaW5lZCBzaWduYWwgMlNJR1ZUQUxSTTogdmlydHVhbCBhbGFybSBjbG9ja1NJ
R1BST0Y6IHByb2ZpbGluZyBhbGFybSBjbG9jayAodHlwZXMgZnJvbSBkaWZmZXJl
bnQgc2NvcGVzKWZhaWxlZCB0byBnZXQgc3lzdGVtIHBhZ2Ugc2l6ZXJ1bnRpbWU6
IGZvdW5kIGluIG9iamVjdCBhdCAqKCBpbiBwcmVwYXJlRm9yU3dlZXA7IHN3ZWVw
Z2VuIC9jcHUvY2xhc3Nlcy90b3RhbDpjcHUtc2Vjb25kcy9nYy9jeWNsZXMvYXV0
b21hdGljOmdjLWN5Y2xlcy9zY2hlZC9wYXVzZXMvdG90YWwvZ2M6c2Vjb25kcy9z
eW5jL211dGV4L3dhaXQvdG90YWw6c2Vjb25kcy9nb2RlYnVnL25vbi1kZWZhdWx0
LWJlaGF2aW9yL3J1bnRpbWU6IGVwb2xsY3RsIGZhaWxlZCB3aXRoIHBhbmljIGNh
bGxlZCB3aXRoIG5pbCBhcmd1bWVudGNoZWNrZGVhZDogaW5jb25zaXN0ZW50IGNv
dW50c3J1bnFwdXRzbG93OiBxdWV1ZSBpcyBub3QgZnVsbHJ1bnRpbWU6IGJhZCBw
b2ludGVyIGluIGZyYW1lIGludmFsaWQgcG9pbnRlciBmb3VuZCBvbiBzdGFjayBs
b2NhbHMgc3RhY2sgbWFwIGVudHJpZXMgZm9yIGFiaSBtaXNtYXRjaCBkZXRlY3Rl
ZCBiZXR3ZWVuIHJ1bnRpbWU6IGltcG9zc2libGUgdHlwZSBraW5kIHVuc2FmZS5T
bGljZTogbGVuIG91dCBvZiByYW5nZWluYXBwcm9wcmlhdGUgaW9jdGwgZm9yIGRl
dmljZXNvY2tldCBvcGVyYXRpb24gb24gbm9uLXNvY2tldHByb3RvY29sIHdyb25n
IHR5cGUgZm9yIHNvY2tldG1lbW9yeSBwYWdlIGhhcyBoYXJkd2FyZSBlcnJvclRv
byBtYW55IHVucmVjb2duaXplZCBjb21tYW5kc01hbGZvcm1lZCBBVVRIIHBhcmFt
ZXRlciB2YWx1ZUZhaWxlZCB0byBwYXJzZSBhcmcgc3RyaW5nOiAlcXByb3RvY29s
IHZlcnNpb24gbm90IHN1cHBvcnRlZG11bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5k
YXJ5PXg1MDk6IGludmFsaWQgRUNEU0EgcGFyYW1ldGVyc3g1MDk6IFNBTiBkTlNO
YW1lIGlzIG1hbGZvcm1lZHg1MDk6IG1hbGZvcm1lZCBpc3N1ZXJVbmlxdWVJRGxv
b2tpbmcgZm9yIGJlZ2lubmluZyBvZiB2YWx1ZWluIGV4cG9uZW50IG9mIG51bWVy
aWMgbGl0ZXJhbHN0cmVhbSBlcnJvcjogc3RyZWFtIElEICVkOyAldmZyYW1lX3Nl
dHRpbmdzX2Fja193aXRoX2xlbmd0aGlsbGVnYWwgd2luZG93IGluY3JlbWVudCB2
YWx1ZUhFQURFUlMgZnJhbWUgd2l0aCBzdHJlYW0gSUQgMGZyYW1lX2NvbnRpbnVh
dGlvbl96ZXJvX3N0cmVhbWh0dHAyOiBkZWNvZGVkIGhwYWNrIGZpZWxkICUrdmFj
Y2Vzcy1jb250cm9sLXJlcXVlc3QtaGVhZGVyc3BlcnNpc3RDb25uIHdhcyBhbHJl
YWR5IGluIExSVWV4cGVjdGVkIGVsZW1lbnQgbmFtZSBhZnRlciA8L3RyYWlsaW5n
IGdhcmJhZ2UgYWZ0ZXIgYWRkcmVzc3N5bmM6IGluY29uc2lzdGVudCBtdXRleCBz
dGF0ZXN5bmM6IHVubG9jayBvZiB1bmxvY2tlZCBtdXRleEdPREVCVUc6IHVua25v
d24gY3B1IGZlYXR1cmUgImNyeXB0by9yc2E6IHZlcmlmaWNhdGlvbiBlcnJvcmNy
eXB0by9jaXBoZXI6IGNvdW50ZXIgd3JhcHBlZG1sa2VtOiBpbnZhbGlkIGVuY29k
aW5nIGxlbmd0aGNyeXB0by9lY2RoOiBtaXNtYXRjaGVkIGN1cnZlc3RyYW5zZm9y
bTogc2hvcnQgc291cmNlIGJ1ZmZlcmFzbjE6IGNhbm5vdCBtYXJzaGFsIG5pbCB2
YWx1ZWNodW5rZWQgbGluZSBlbmRzIHdpdGggYmFyZSBMRmZpcHM6IGludmFsaWQg
c2VsZi10ZXN0IG5hbWU6IGZpcHMxNDA6IHZlcmlmaWNhdGlvbiBtaXNtYXRjaHN1
YnRsZS5YT1JCeXRlczogZHN0IHRvbyBzaG9ydHRoZSB3ZWJob29rIHRvIHNlbmQg
dGhlIGRhdGEgdG9TZW5kZXIgZG9tYWluICVzIGlzIGJsYWNrbGlzdGVkbWFpbDog
bWlzc2luZyAnQCcgb3IgYW5nbGUtYWRkcmZtdDogdW5rbm93biBiYXNlOyBjYW4n
dCBoYXBwZW5tYWxmb3JtZWQgdGltZSB6b25lIGluZm9ybWF0aW9uTW9uLCAwMiBK
YW4gMjAwNiAxNTowNDowNSAtMDcwMDExMzY4NjgzNzcyMTYxNjAyOTczOTM3OTg4
MjgxMjU1Njg0MzQxODg2MDgwODAxNDg2OTY4OTk0MTQwNjI1cmVmbGVjdDogTGVu
IG9mIG5vbi1hcnJheSB0eXBlIHJlZmxlY3QuTWFrZVNsaWNlOiBuZWdhdGl2ZSBs
ZW5yZWZsZWN0Lk1ha2VTbGljZTogbmVnYXRpdmUgY2Fwc2xpY2UgYm91bmRzIG91
dCBvZiByYW5nZSBbOiV4XXNsaWNlIGJvdW5kcyBvdXQgb2YgcmFuZ2UgWyV4Ol1T
SUdTRUdWOiBzZWdtZW50YXRpb24gdmlvbGF0aW9uY2FsbCBmcm9tIHdpdGhpbiB0
aGUgR28gcnVudGltZWludGVybmFsIGVycm9yIC0gbWlzdXNlIG9mIGl0YWIpIG5v
dCBpbiB1c2FibGUgYWRkcmVzcyBzcGFjZTogcnVudGltZTogY2Fubm90IGFsbG9j
YXRlIG1lbW9yeWNoZWNrbWFyayBmb3VuZCB1bm1hcmtlZCBvYmplY3QvbWVtb3J5
L2NsYXNzZXMvaGVhcC9mcmVlOmJ5dGVzL21lbW9yeS9jbGFzc2VzL29zLXN0YWNr
czpieXRlc3BhY2VyOiBzd2VlcCBkb25lIGF0IGhlYXAgc2l6ZSBub24gaW4tdXNl
IHNwYW4gaW4gdW5zd2VwdCBsaXN0cnVudGltZS5QaW5uZXI6IGFyZ3VtZW50IGlz
IG5pbGNhc2dzdGF0dXM6IGJhZCBpbmNvbWluZyB2YWx1ZXNyZXNldHNwaW5uaW5n
OiBub3QgYSBzcGlubmluZyBtcnVudGltZTogcHJvZkJ1ZiBhbHJlYWR5IGNsb3Nl
ZGZhdGFsOiBiYWQgZyBpbiBzaWduYWwgaGFuZGxlcgpydW50aW1lOiBzcGxpdCBz
dGFjayBvdmVyZmxvdzogLi4uYWRkaXRpb25hbCBmcmFtZXMgZWxpZGVkLi4uCnVu
c2FmZS5TdHJpbmc6IGxlbiBvdXQgb2YgcmFuZ2UubGliIHNlY3Rpb24gaW4gYS5v
dXQgY29ycnVwdGVkY2Fubm90IGFzc2lnbiByZXF1ZXN0ZWQgYWRkcmVzc1RoaXMg
aXMgYSBMTVRQIHNlcnZlciwgdXNlIExITE9JIGhhdmUgc3VjZXNzZnVsbHkgZG9u
ZSBub3RoaW5nUm9nZXIsIGFjY2VwdGluZyBtYWlsIGZyb20gPCV2PnRsczogbm8g
Y2VydGlmaWNhdGVzIGNvbmZpZ3VyZWRiYWQgY2VydGlmaWNhdGUgc3RhdHVzIHJl
c3BvbnNlZW5jcnlwdGVkIGNsaWVudCBoZWxsbyByZXF1aXJlZHRsczogdW5zdXBw
b3J0ZWQgcHVibGljIGtleTogJVRmYWlsZWQgdG8gcGFyc2UgY2VydGlmaWNhdGU6
ICV3VExTOiBzZXF1ZW5jZSBudW1iZXIgd3JhcGFyb3VuZHRsczogaW52YWxpZCBp
bm5lciBjbGllbnQgaGVsbG9DTElFTlRfSEFORFNIQUtFX1RSQUZGSUNfU0VDUkVU
U0VSVkVSX0hBTkRTSEFLRV9UUkFGRklDX1NFQ1JFVHRsczogZmFpbGVkIHRvIHNp
Z24gaGFuZHNoYWtlOiB4NTA5OiBtYWxmb3JtZWQgR2VuZXJhbGl6ZWRUaW1lY3J5
cHRvL2VjZGg6IGludmFsaWQgcHVibGljIGtleXg1MDk6IGludmFsaWQgYmFzaWMg
Y29uc3RyYWludHN4NTA5OiBtYWxmb3JtZWQgdGJzIGNlcnRpZmljYXRleDUwOTog
bWFsZm9ybWVkIHN1YmplY3RVbmlxdWVJRHg1MDk6IGNlcnRpZmljYXRlIGlzIHZh
bGlkIGZvciAlZCBjaGFpbnMgd2l0aCBpbnZhbGlkIHBvbGljaWVzanNvbjogaW52
YWxpZCBudW1iZXIgbGl0ZXJhbCAlcWluIGxpdGVyYWwgdHJ1ZSAoZXhwZWN0aW5n
ICdyJylpbiBsaXRlcmFsIHRydWUgKGV4cGVjdGluZyAndScpaW4gbGl0ZXJhbCB0
cnVlIChleHBlY3RpbmcgJ2UnKWluIGxpdGVyYWwgbnVsbCAoZXhwZWN0aW5nICd1
JylpbiBsaXRlcmFsIG51bGwgKGV4cGVjdGluZyAnbCcpaHR0cDI6IGNvbm5lY3Rp
b24gZXJyb3I6ICV2OiAldmZyYW1lX2hlYWRlcnNfcHJpb193ZWlnaHRfc2hvcnRQ
UklPUklUWSBmcmFtZSB3aXRoIHN0cmVhbSBJRCAwdG9vIG1hbnkgYXV0aGVudGlj
YXRpb24gbWV0aG9kc1JlcXVlc3RlZCBSYW5nZSBOb3QgU2F0aXNmaWFibGVSZXF1
ZXN0IEhlYWRlciBGaWVsZHMgVG9vIExhcmdlTmV0d29yayBBdXRoZW50aWNhdGlv
biBSZXF1aXJlZHRvbyBtYW55IHRyYW5zZmVyIGVuY29kaW5nczogJXFuZXQvaHR0
cDogVExTIGhhbmRzaGFrZSB0aW1lb3V0bWVyZ2VSdW5lU2V0cyBvZGQgbGVuZ3Ro
IFtdcnVuZW5vbi1wb2ludGVyIHBhc3NlZCB0byBVbm1hcnNoYWxuaWwgcG9pbnRl
ciBwYXNzZWQgdG8gVW5tYXJzaGFsdW5leHBlY3RlZCBFT0YgaW4gQ0RBVEEgc2Vj
dGlvbnpvbmUgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdpbnZhbGlkIHJldHVy
biBmcm9tIHdyaXRlOiBnb3QgZWNkc2E6IHNpZ25hdHVyZSBkaWQgbm90IHZlcmlm
eWNyeXB0by9hZXM6IGxlbihkc3QpIDwgbGVuKHNyYyllY2RzYTogcmVzZWVkIGlu
dGVydmFsIGV4Y2VlZGVkZWQyNTUxOTogYmFkIHNpZ25hdHVyZSBsZW5ndGg6IGh0
dHA6Ly9sb2NhbGhvc3Q6ODA4MC9teS93ZWJob29rbWFpbDogbWlzc2luZyB3b3Jk
IGluIHBocmFzZTogJXY6IGRheS1vZi15ZWFyIGRvZXMgbm90IG1hdGNoIGRheWdv
IHBhY2thZ2UgbmV0OiBob3N0TG9va3VwT3JkZXIoc3luYzogVW5sb2NrIG9mIHVu
bG9ja2VkIFJXTXV0ZXhzeW5jOiBuZWdhdGl2ZSBXYWl0R3JvdXAgY291bnRlcmJ1
ZmlvOiBpbnZhbGlkIHVzZSBvZiBVbnJlYWRCeXRlYnVmaW86IHRyaWVkIHRvIGZp
bGwgZnVsbCBidWZmZXJtaW1lOiBleHBlY3RlZCB0b2tlbiBhZnRlciBzbGFzaDI4
NDIxNzA5NDMwNDA0MDA3NDM0ODQ0OTcwNzAzMTI1TWFwSXRlci5WYWx1ZSBjYWxs
ZWQgYmVmb3JlIE5leHRyZWZsZWN0LlZhbHVlLkdyb3c6IG5lZ2F0aXZlIGxlbnNs
aWNlIGJvdW5kcyBvdXQgb2YgcmFuZ2UgWzo6JXhdc2xpY2UgYm91bmRzIG91dCBv
ZiByYW5nZSBbOiV4Ol1zbGljZSBib3VuZHMgb3V0IG9mIHJhbmdlIFsleDo6XVNJ
R0ZQRTogZmxvYXRpbmctcG9pbnQgZXhjZXB0aW9uU0lHVFRPVTogYmFja2dyb3Vu
ZCB3cml0ZSB0byB0dHkgKHR5cGVzIGZyb20gZGlmZmVyZW50IHBhY2thZ2VzKWVu
ZCBvdXRzaWRlIHVzYWJsZSBhZGRyZXNzIHNwYWNlcnVudGltZTogZml4YWxsb2Mg
c2l6ZSB0b28gbGFyZ2VpbnZhbGlkIGxpbWl0ZXIgZXZlbnQgdHlwZSBmb3VuZHNj
YW5zdGFjazogZ29yb3V0aW5lIG5vdCBzdG9wcGVkc2NhdmVuZ2VyIHN0YXRlIGlz
IGFscmVhZHkgd2lyZWRzd2VlcCBpbmNyZWFzZWQgYWxsb2NhdGlvbiBjb3VudHJl
bW92ZXNwZWNpYWwgb24gaW52YWxpZCBwb2ludGVyZ2V0V2Vha0hhbmRsZSBvbiBp
bnZhbGlkIHBvaW50ZXJydW50aW1lOiByb290IGxldmVsIG1heCBwYWdlcyA9IF9j
Z29fcHRocmVhZF9rZXlfY3JlYXRlZCBtaXNzaW5ncnVudGltZTogc3Vkb2cgd2l0
aCBub24tbmlsIGVsZW1ydW50aW1lOiBzdWRvZyB3aXRoIG5vbi1uaWwgbmV4dHJ1
bnRpbWU6IHN1ZG9nIHdpdGggbm9uLW5pbCBwcmV2cnVudGltZTogbWNhbGwgZnVu
Y3Rpb24gcmV0dXJuZWRub24tR28gY29kZSBkaXNhYmxlZCBzaWdhbHRzdGFja3J1
bnRpbWU6IG5ld3N0YWNrIGNhbGxlZCBmcm9tIGc9cnVudGltZTogc3RhY2sgc3Bs
aXQgYXQgYmFkIHRpbWVwYW5pYyB3aGlsZSBwcmludGluZyBwYW5pYyB2YWx1ZXJl
c291cmNlIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlbnVtZXJpY2FsIGFyZ3VtZW50
IG91dCBvZiBkb21haW5zb2Z0d2FyZSBjYXVzZWQgY29ubmVjdGlvbiBhYm9ydFBs
ZWFzZSBpbnRyb2R1Y2UgeW91cnNlbGYgZmlyc3QuY2hhY2hhMjBwb2x5MTMwNTog
YmFkIGtleSBsZW5ndGh0bHM6IHVua25vd24gUmVuZWdvdGlhdGlvbiB2YWx1ZXRs
czogTmV4dFByb3RvcyB2YWx1ZXMgdG9vIGxhcmdldGxzMTM6IGxhYmVsIG9yIGNv
bnRleHQgdG9vIGxvbmcvZXRjL3BraS90bHMvY2VydHMvY2EtYnVuZGxlLmNydHg1
MDk6IHVuc3VwcG9ydGVkIGVsbGlwdGljIGN1cnZleDUwOTogaW52YWxpZCBjb25z
dHJhaW50IHZhbHVlOiB4NTA5OiBtYWxmb3JtZWQgc3ViamVjdFB1YmxpY0tleXg1
