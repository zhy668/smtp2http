MDk6IGNhbm5vdCBwYXJzZSByZmM4MjJOYW1lICVxeDUwOTogRUNEU0EgdmVyaWZp
Y2F0aW9uIGZhaWx1cmVpbiBsaXRlcmFsIGZhbHNlIChleHBlY3RpbmcgJ2EnKWlu
IGxpdGVyYWwgZmFsc2UgKGV4cGVjdGluZyAnbCcpaW4gbGl0ZXJhbCBmYWxzZSAo
ZXhwZWN0aW5nICdzJylpbiBsaXRlcmFsIGZhbHNlIChleHBlY3RpbmcgJ2UnKWZy
YW1lX3dpbmRvd3VwZGF0ZV96ZXJvX2luY19jb25uYWNjZXNzLWNvbnRyb2wtYWxs
b3ctY3JlZGVudGlhbHNyZWFkIGxpbWl0IG9mICVkIGJ5dGVzIGV4aGF1c3RlZHVu
ZXNjYXBlZCA8IGluc2lkZSBxdW90ZWQgc3RyaW5ndW5leHBlY3RlZCBjaGFyYWN0
ZXIsIHdhbnQgY29sb251c2Ugb2YgY2xvc2VkIG5ldHdvcmsgY29ubmVjdGlvbmlu
aXRpYWwgdGFibGUgY2FwYWNpdHkgdG9vIGxhcmdlIiBub3Qgc3VwcG9ydGVkIGZv
ciBjcHUgb3B0aW9uICJzYXNsOiB1bmV4cGVjdGVkIGNsaWVudCByZXNwb25zZWVj
ZHNhOiBpbnRlcm5hbCBlcnJvcjogciBpcyB6ZXJvZWNkc2E6IGludGVybmFsIGVy
cm9yOiBzIGlzIHplcm9lZDI1NTE5OiBiYWQgcHVibGljIGtleSBsZW5ndGg6IGNy
eXB0by9yc2E6IHB1YmxpYyBrZXkgbWlzc2luZyBOY3J5cHRvL2RlczogaW5wdXQg
bm90IGZ1bGwgYmxvY2tjcnlwdG8vYWVzOiBpbnB1dCBub3QgZnVsbCBibG9ja2Ny
eXB0by9jaXBoZXI6IGNvdW50ZXIgZGVjcmVhc2VkQUJDREVGR0hJSktMTU5PUFFS
U1RVVldYWVoyMzQ1NjdtbGtlbTogaW52YWxpZCBjaXBoZXJ0ZXh0IGxlbmd0aGNy
eXB0by9lY2RoOiBpbnZhbGlkIHByaXZhdGUga2V5CjsgRE5TU0VDIEFMR09SSVRI
TSBVTkRFUlNUT09EOiBpbnRlZ2VyIGlzIG5vdCBtaW5pbWFsbHkgZW5jb2RlZGNh
bm5vdCByZXByZXNlbnQgdGltZSBhcyBVVENUaW1laW5wdXQgb3ZlcmZsb3dzIHRo
ZSBtb2R1bHVzIHNpemVzdWJ0bGUuWE9SQnl0ZXM6IGludmFsaWQgb3ZlcmxhcGNo
YWNoYTIwOiBpbnZhbGlkIGJ1ZmZlciBvdmVybGFwMDEyMzQ1Njc4OUFCQ0RFRkdI
SUpLTE1OT1BRUlNUVVZIaWdoIHNlY3VyaXR5IHJpc2sgc2NvcmU6ICVkICglcylj
b25zdW1lQWRkclNwZWM6IHBhcnNpbmcgZG90LWF0b21hcHBsaWNhdGlvbi94LXd3
dy1mb3JtLXVybGVuY29kZWRnbyBwYWNrYWdlIG5ldDogY29uZlZhbC5uZXRDZ28g
PSBzeW5jOiBSVW5sb2NrIG9mIHVubG9ja2VkIFJXTXV0ZXhpbnZhbGlkIHZhbHVl
ICVxIGZvciBmbGFnIC0lczogJXYxNDIxMDg1NDcxNTIwMjAwMzcxNzQyMjQ4NTM1
MTU2MjU3MTA1NDI3MzU3NjAxMDAxODU4NzExMjQyNjc1NzgxMjVyZWZsZWN0OiBz
bGljZSBpbmRleCBvdXQgb2YgcmFuZ2Ugb2YgbWV0aG9kIG9uIG5pbCBpbnRlcmZh
Y2UgdmFsdWVyZWZsZWN0OiBGaWVsZCBpbmRleCBvdXQgb2YgcmFuZ2VyZWZsZWN0
OiBhcnJheSBpbmRleCBvdXQgb2YgcmFuZ2VyZWZsZWN0LlZhbHVlLkVxdWFsOiBp
bnZhbGlkIEtpbmQgdG8gcG9pbnRlciB0byBhcnJheSB3aXRoIGxlbmd0aCBza2lw
IGV2ZXJ5dGhpbmcgYW5kIHN0b3AgdGhlIHdhbGtzbGljZSBib3VuZHMgb3V0IG9m
IHJhbmdlIFsleDoleV1TSUdDSExEOiBjaGlsZCBzdGF0dXMgaGFzIGNoYW5nZWRT
SUdUVElOOiBiYWNrZ3JvdW5kIHJlYWQgZnJvbSB0dHlTSUdYRlNaOiBmaWxlIHNp
emUgbGltaXQgZXhjZWVkZWRiYXNlIG91dHNpZGUgdXNhYmxlIGFkZHJlc3Mgc3Bh
Y2VydW50aW1lOiBtZW1vcnkgYWxsb2NhdGVkIGJ5IE9TIFttaXNyb3VuZGVkIGFs
bG9jYXRpb24gaW4gc3lzQWxsb2MvY3B1L2NsYXNzZXMvZ2MvcGF1c2U6Y3B1LXNl
Y29uZHMvY3B1L2NsYXNzZXMvZ2MvdG90YWw6Y3B1LXNlY29uZHMvZ2MvbGltaXRl
ci9sYXN0LWVuYWJsZWQ6Z2MtY3ljbGUvbWVtb3J5L2NsYXNzZXMvaGVhcC9zdGFj
a3M6Ynl0ZXMvbWVtb3J5L2NsYXNzZXMvaGVhcC91bnVzZWQ6Ynl0ZXMvc2NoZWQv
cGF1c2VzL3N0b3BwaW5nL2djOnNlY29uZHMvc2NoZWQvcGF1c2VzL3RvdGFsL290
aGVyOnNlY29uZHNtaW4gbXVzdCBiZSBhIG5vbi16ZXJvIHBvd2VyIG9mIDJydW50
aW1lOiBmYWlsZWQgbVNwYW5MaXN0Lmluc2VydCBydW50aW1lOiBlcG9sbGNyZWF0
ZSBmYWlsZWQgd2l0aCBydW50aW1lOiBtb3Jlc3RhY2sgb24gZzAsIHN0YWNrIFty
dW50aW1lOiBjYXN0b2dzY2Fuc3RhdHVzIG9sZHZhbD1zdG9wbG9ja2VkbTogaW5j
b25zaXN0ZW50IGxvY2tpbmdmaW5kcnVubmFibGU6IG5lZ2F0aXZlIG5tc3Bpbm5p
bmdmcmVlaW5nIHN0YWNrIG5vdCBpbiBhIHN0YWNrIHNwYW5zdGFja2FsbG9jIG5v
dCBvbiBzY2hlZHVsZXIgc3RhY2tydW50aW1lOiBnb3JvdXRpbmUgc3RhY2sgZXhj
ZWVkcyBydW50aW1lOiB0ZXh0IG9mZnNldCBvdXQgb2YgcmFuZ2V0aW1lciBwZXJp
b2QgbXVzdCBiZSBub24tbmVnYXRpdmV0b28gbWFueSBjb25jdXJyZW50IHRpbWVy
IGZpcmluZ3NydW50aW1lOiBuYW1lIG9mZnNldCBvdXQgb2YgcmFuZ2VydW50aW1l
OiB0eXBlIG9mZnNldCBvdXQgb2YgcmFuZ2V0b28gbWFueSBsZXZlbHMgb2Ygc3lt
Ym9saWMgbGlua3NUb28gbG9uZyBsaW5lLCBjbG9zaW5nIGNvbm5lY3Rpb25ieXRl
cy5CdWZmZXIuR3JvdzogbmVnYXRpdmUgY291bnR0bHM6IG1hbGZvcm1lZCBvdXRl
ciBjbGllbnQgaGVsbG90bHM6IGZhaWxlZCB0byB3cml0ZSB0byBrZXkgbG9nOiB0
bHM6IGludmFsaWQgc2VydmVyIGZpbmlzaGVkIGhhc2h0bHM6IGludmFsaWQgY2xp
ZW50IGZpbmlzaGVkIGhhc2h0bHM6IHVuZXhwZWN0ZWQgU2VydmVyS2V5RXhjaGFu
Z2Vmb3JiaWRkZW4gY2hhcmFjdGVyICgldikgYWZ0ZXIgJSV4NTA5OiBpbnZhbGlk
IFJTQSBwdWJsaWMgZXhwb25lbnR4NTA5OiBTQU4gcmZjODIyTmFtZSBpcyBtYWxm
b3JtZWR4NTA5OiBpbnZhbGlkIGV4dGVuZGVkIGtleSB1c2FnZXNwc2V1ZG8gaGVh
ZGVyIGZpZWxkIGFmdGVyIHJlZ3VsYXJodHRwOiBpbnZhbGlkIFJlYWQgb24gY2xv
c2VkIEJvZHluZXQvaHR0cDogc2tpcCBhbHRlcm5hdGUgcHJvdG9jb2xpbnZhbGlk
IGhlYWRlciBmaWVsZCB2YWx1ZSBmb3IgJXFwYWQgc2l6ZSBsYXJnZXIgdGhhbiBk
YXRhIHBheWxvYWRmcmFtZV9wdXNocHJvbWlzZV9wcm9taXNlaWRfc2hvcnRodHRw
MjogaW52YWxpZCBwc2V1ZG8gaGVhZGVyczogJXZjb25uZWN0aW9uIG5vdCBhbGxv
d2VkIGJ5IHJ1bGVzZXRpbnZhbGlkIHVzZXJuYW1lL3Bhc3N3b3JkIHZlcnNpb251
bnN1cHBvcnRlZCB0cmFuc2ZlciBlbmNvZGluZzogJXF0b28gbWFueSBBbnN3ZXJz
IHRvIHBhY2sgKD42NTUzNSl3YWl0aW5nIGZvciB1bnN1cHBvcnRlZCBmaWxlIHR5
cGVjb25jdXJyZW50IG1hcCByZWFkIGFuZCBtYXAgd3JpdGV0YWJsZSBtdXN0IGhh
dmUgcG9zaXRpdmUgY2FwYWNpdHlHT0RFQlVHOiBubyB2YWx1ZSBzcGVjaWZpZWQg
Zm9yICJjcnlwdG86IHJlcXVlc3RlZCBoYXNoIGZ1bmN0aW9uICNjcnlwdG8vZGVz
OiBvdXRwdXQgbm90IGZ1bGwgYmxvY2tjcnlwdG8vYWVzOiBvdXRwdXQgbm90IGZ1
bGwgYmxvY2tsZWFmQ291bnRzW21heEJpdHNdW21heEJpdHNdICE9IG5pbmRlZmlu
aXRlIGxlbmd0aCBmb3VuZCAobm90IERFUilzdHJ1Y3QgY29udGFpbnMgdW5leHBv
cnRlZCBmaWVsZHNlbXB0eSBoZXggbnVtYmVyIGZvciBjaHVuayBsZW5ndGhyZWdl
eHA6IHVuaGFuZGxlZCBjYXNlIGluIGNvbXBpbGVTaWdFZDI1NTE5IG5vIEVkMjU1
MTkgY29sbGlzaW9ucwFTaWdFZDI1NTE5IG5vIEVkMjU1MTkgY29sbGlzaW9ucwBz
aGEzOiBpbnZhbGlkIGhhc2ggc3RhdGUgZnVuY3Rpb25zY2FsYXIgaGFzIGhpZ2gg
Yml0IHNldCBpbGxlZ2FsbHlwYXJzZUFkZHJlc3M6IG5vdCBhbiBhZGRyLXNwZWM6
ICV2bWFpbDogaW52YWxpZCB1dGYtOCBpbiBhZGRyZXNzOiAlcWlsbGVnYWwgYmFz
ZTY0IGRhdGEgYXQgaW5wdXQgYnl0ZSA6IGRheS1vZi15ZWFyIGRvZXMgbm90IG1h
dGNoIG1vbnRoZmxhZyBwcm92aWRlZCBidXQgbm90IGRlZmluZWQ6IC0lczM1NTI3
MTM2Nzg4MDA1MDA5MjkzNTU2MjEzMzc4OTA2MjVyZWZsZWN0OiBGaWVsZCBvZiBu
b24tc3RydWN0IHR5cGUgcmVmbGVjdDogRmllbGQgaW5kZXggb3V0IG9mIGJvdW5k
c3JlZmxlY3Q6IHN0cmluZyBpbmRleCBvdXQgb2YgcmFuZ2VyZWZsZWN0LlZhbHVl
Lkdyb3c6IHNsaWNlIG92ZXJmbG93c2xpY2UgYm91bmRzIG91dCBvZiByYW5nZSBb
OiV4OiV5XXNsaWNlIGJvdW5kcyBvdXQgb2YgcmFuZ2UgWyV4OiV5Ol1TSUdVUkc6
IHVyZ2VudCBjb25kaXRpb24gb24gc29ja2V0cnVudGltZTogc3RhbmRhcmQgZmls
ZSBkZXNjcmlwdG9yIG91dCBvZiBtZW1vcnkgYWxsb2NhdGluZyBhbGxBcmVuYXMv
bWVtb3J5L2NsYXNzZXMvaGVhcC9vYmplY3RzOmJ5dGVzcnVudGltZS5TZXRGaW5h
bGl6ZXI6IGNhbm5vdCBwYXNzIHRvbyBtYW55IHBhZ2VzIGFsbG9jYXRlZCBpbiBj
aHVuaz9tc3Bhbi5lbnN1cmVTd2VwdDogbSBpcyBub3QgbG9ja2VkcnVudGltZTog
bmV0cG9sbEJyZWFrIHdyaXRlIGZhaWxlZGZvckVhY2hQOiBzY2hlZC5zYWZlUG9p
bnRXYWl0ICE9IDBzY2hlZHVsZTogc3Bpbm5pbmcgd2l0aCBsb2NhbCB3b3JrZW50
ZXJzeXNjYWxsYmxvY2sgaW5jb25zaXN0ZW50IGJwIGVudGVyc3lzY2FsbGJsb2Nr
IGluY29uc2lzdGVudCBzcCBydW50aW1lOiBnIGlzIHJ1bm5pbmcgYnV0IHAgaXMg
bm90aW52YWxpZCB0aW1lciBjaGFubmVsOiBubyBjYXBhY2l0eXRvbyBtYW55IHJl
ZmVyZW5jZXM6IGNhbm5vdCBzcGxpY2VVbmFibGUgdG8gcGFyc2UgU0laRSBhcyBh
biBpbnRlZ2VyZXhwZWN0ZWQgYW4gUlNBIHB1YmxpYyBrZXksIGdvdCAlVGNvbm5l
Y3Rpb24gZG9lc24ndCBzdXBwb3J0IEVkMjU1MTl0bHM6IG1hbGZvcm1lZCBrZXlf
c2hhcmUgZXh0ZW5zaW9uVExTIDEuMywgc2VydmVyIENlcnRpZmljYXRlVmVyaWZ5
AFRMUyAxLjMsIGNsaWVudCBDZXJ0aWZpY2F0ZVZlcmlmeQB1bmV4cGVjdGVkIGNo
YXIgKCV2KSwgZXhwZWN0ZWQgJ30nL2V0Yy9zc2wvY2VydHMvY2EtY2VydGlmaWNh
dGVzLmNydGFkZGluZyBuaWwgQ2VydGlmaWNhdGUgdG8gQ2VydFBvb2x4NTA5OiB1
bmtub3duIHB1YmxpYyBrZXkgYWxnb3JpdGhteDUwOTogaW52YWxpZCBjZXJ0aWZp
Y2F0ZSBwb2xpY2llcyVzICVxIGlzIGV4Y2x1ZGVkIGJ5IGNvbnN0cmFpbnQgJXF4
NTA5OiBFZDI1NTE5IHZlcmlmaWNhdGlvbiBmYWlsdXJleDUwOTogdW5oYW5kbGVk
IGNyaXRpY2FsIGV4dGVuc2lvbmluIFx1IGhleGFkZWNpbWFsIGNoYXJhY3RlciBl
c2NhcGVodHRwMjogYWJvcnRpbmcgcmVxdWVzdCBib2R5IHdyaXRlaHR0cDogcGVy
c2lzdENvbm4ucmVhZExvb3AgZXhpdGluZ2h0dHA6IHJlYWQgb24gY2xvc2VkIHJl
c3BvbnNlIGJvZHlzdHJlYW0gZXJyb3I6IHN0cmVhbSBJRCAlZDsgJXY7ICV2ZnJh
bWVfc2V0dGluZ3Nfd2luZG93X3NpemVfdG9vX2JpZ2ZyYW1lX3dpbmRvd3VwZGF0
ZV96ZXJvX2luY19zdHJlYW11bnN1cHBvcnRlZCBhdXRoZW50aWNhdGlvbiBtZXRo
b2QgZXhwZWN0ZWQgYXR0cmlidXRlIG5hbWUgaW4gZWxlbWVudHVuZXNjYXBlZCBd
XT4gbm90IGluIENEQVRBIHNlY3Rpb25jcnlwdG8vcnNhOiBtaXNzaW5nIHB1Ymxp
YyBtb2R1bHVzY3J5cHRvL2RlczogaW52YWxpZCBidWZmZXIgb3ZlcmxhcGNyeXB0
by9hZXM6IGludmFsaWQgYnVmZmVyIG92ZXJsYXBjcnlwdG8vcmM0OiBpbnZhbGlk
IGJ1ZmZlciBvdmVybGFwbWxrZW06IGludmFsaWQgcG9seW5vbWlhbCBlbmNvZGlu
Z2ludmFsaWQgcGFkZGluZyBiaXRzIGluIEJJVCBTVFJJTkdpbnZhbGlkIG5lc3Rl
ZCByZXBldGl0aW9uIG9wZXJhdG9yaW52YWxpZCBvciB1bnN1cHBvcnRlZCBQZXJs
IHN5bnRheGNyeXB0by9yc2E6IHB1YmxpYyBtb2R1bHVzIGlzIGV2ZW5jaGFjaGEy
MDogd3JvbmcgSENoYUNoYTIwIGtleSBzaXplQXR0YWNobWVudCB0b28gbGFyZ2U6
ICVzICglZCBieXRlcyltYWlsOiBncm91cCB3aXRoIG11bHRpcGxlIGFkZHJlc3Nl
c21haWw6IG1pc3NpbmcgIlsiIGluIGRvbWFpbi1saXRlcmFsbWFpbDogY29tbWVu
dCBkb2VzIG5vdCBzdGFydCB3aXRoICgyMDA2LTAxLTAyVDE1OjA0OjA1Ljk5OTk5
OTk5OVowNzowMGZvcm0tZGF0YTsgbmFtZT0iJXMiOyBmaWxlbmFtZT0iJXMibWlt
ZTogaW52YWxpZCBSRkMgMjA0NyBlbmNvZGVkLXdvcmRtaW1lOiBib2d1cyBjaGFy
YWN0ZXJzIGFmdGVyICUlOiAlcTE3NzYzNTY4Mzk0MDAyNTA0NjQ2Nzc4MTA2Njg5
NDUzMTI1ODg4MTc4NDE5NzAwMTI1MjMyMzM4OTA1MzM0NDcyNjU2MjVyeXVGdG9h
Rml4ZWQzMiBjYWxsZWQgd2l0aCBwcmVjID4gOXJlZmxlY3QuTWFrZVNsaWNlIG9m
IG5vbi1zbGljZSB0eXBlcGVyc2lzdGVudGFsbG9jOiBhbGlnbiBpcyB0b28gbGFy
Z2UvbWVtb3J5L2NsYXNzZXMvaGVhcC9yZWxlYXNlZDpieXRlc2dyZXlvYmplY3Q6
IG9iaiBub3QgcG9pbnRlci1hbGlnbmVkbWlzbWF0Y2hlZCBiZWdpbi9lbmQgb2Yg
YWN0aXZlU3dlZXBtaGVhcC5mcmVlU3BhbkxvY2tlZCAtIGludmFsaWQgZnJlZWZh
aWxlZCB0byBnZXQgb3IgY3JlYXRlIHdlYWsgaGFuZGxlYXR0ZW1wdCB0byBjbGVh
ciBub24tZW1wdHkgc3BhbiBzZXRydW50aW1lOiBjbG9zZSBwb2xsZGVzYyB3L28g
dW5ibG9ja3J1bnRpbWU6IGluY29uc2lzdGVudCByZWFkIGRlYWRsaW5lZmluZHJ1
bm5hYmxlOiBuZXRwb2xsIHdpdGggc3Bpbm5pbmdwaWRsZXB1dDogUCBoYXMgbm9u
LWVtcHR5IHJ1biBxdWV1ZXRyYWNlYmFjayBkaWQgbm90IHVud2luZCBjb21wbGV0
ZWx5bmV0d29yayBkcm9wcGVkIGNvbm5lY3Rpb24gb24gcmVzZXR0cmFuc3BvcnQg
ZW5kcG9pbnQgaXMgbm90IGNvbm5lY3RlZHVuc3VwcG9ydGVkIHNpZ25hdHVyZSBh
bGdvcml0aG06ICV2dGxzOiB0b28gbWFueSBub24tYWR2YW5jaW5nIHJlY29yZHN0
bHM6IHNlcnZlciBzZWxlY3RlZCBhbiBpbnZhbGlkIFBTS3RsczogaW52YWxpZCBv
ciBtaXNzaW5nIFBTSyBiaW5kZXJzeDUwOTogbWFsZm9ybWVkIGV4dGVuc2lvbiBP
SUQgZmllbGR4NTA5OiB3cm9uZyBFZDI1NTE5IHB1YmxpYyBrZXkgc2l6ZXg1MDk6
IGludmFsaWQgYXV0aG9yaXR5IGluZm8gYWNjZXNzaHR0cDogc2VydmVyIGNsb3Nl
ZCBpZGxlIGNvbm5lY3Rpb25DT05USU5VQVRJT04gZnJhbWUgd2l0aCBzdHJlYW0g
SUQgMHhtbDogY29tbWVudHMgbXVzdCBub3QgY29udGFpbiAiLS0iYXR0cmlidXRl
IG5hbWUgd2l0aG91dCA9IGluIGVsZW1lbnR0b28gbWFueSBRdWVzdGlvbnMgdG8g
cGFjayAoPjY1NTM1KWZpbGUgdHlwZSBkb2VzIG5vdCBzdXBwb3J0IGRlYWRsaW5l
ZWNkc2E6IGludmFsaWQgc2lnbmF0dXJlOiByIGlzIHplcm9lY2RzYTogaW52YWxp
ZCBzaWduYXR1cmU6IHMgaXMgemVyb2NyeXB0by9tZDU6IGludmFsaWQgaGFzaCBz
dGF0ZSBzaXpldHJhbnNmb3JtOiBzaG9ydCBkZXN0aW5hdGlvbiBidWZmZXJmbGF0
ZTogY29ycnVwdCBpbnB1dCBiZWZvcmUgb2Zmc2V0IHN1cGVyZmx1b3VzIGxlYWRp
bmcgemVyb3MgaW4gbGVuZ3RoJ18nIG11c3Qgc2VwYXJhdGUgc3VjY2Vzc2l2ZSBk
aWdpdHNocGFjazogaW52YWxpZCBIdWZmbWFuLWVuY29kZWQgZGF0YWR5bmFtaWMg
dGFibGUgc2l6ZSB1cGRhdGUgdG9vIGxhcmdlUDIyNCBwb2ludCBpcyB0aGUgcG9p
bnQgYXQgaW5maW5pdHlQMjU2IHBvaW50IGlzIHRoZSBwb2ludCBhdCBpbmZpbml0
eVAzODQgcG9pbnQgaXMgdGhlIHBvaW50IGF0IGluZmluaXR5UDUyMSBwb2ludCBp
cyB0aGUgcG9pbnQgYXQgaW5maW5pdHljcnlwdG8vcnNhOiBwdWJsaWMgZXhwb25l
bnQgaXMgZXZlbmJpZ21vZDogbW9kdWx1cyBpcyBzbWFsbGVyIHRoYW4gbmF0Ymln
bW9kOiBtb2R1bHVzIGZvciBFeHAgbXVzdCBiZSBvZGRjaGFjaGEyMDogb3V0cHV0
IHNtYWxsZXIgdGhhbiBpbnB1dHNoYTM6IGludmFsaWQgaGFzaCBzdGF0ZSBpZGVu
dGlmaWVyc3RyaW5ncy5CdWlsZGVyLkdyb3c6IG5lZ2F0aXZlIGNvdW50c3RyaW5n
czogSm9pbiBvdXRwdXQgbGVuZ3RoIG92ZXJmbG93VGltZS5Vbm1hcnNoYWxCaW5h
cnk6IGludmFsaWQgbGVuZ3RoTW9uLCAyIEphbiAyMDA2IDE1OjA0OjA1IC0wNzAw
IChNU1QpaW52YWxpZCBib29sZWFuIHZhbHVlICVxIGZvciAtJXM6ICV2bWFsZm9y
bWVkIE1JTUUgaGVhZGVyIGluaXRpYWwgbGluZTogNDQ0MDg5MjA5ODUwMDYyNjE2
MTY5NDUyNjY3MjM2MzI4MTI1cnl1RnRvYUZpeGVkNjQgY2FsbGVkIHdpdGggcHJl
YyA+IDE4MDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6cmVmbGVj
dDogTnVtRmllbGQgb2Ygbm9uLXN0cnVjdCB0eXBlbWV0aG9kIEFCSSBhbmQgdmFs
dWUgQUJJIGRvbid0IGFsaWducmVmbGVjdC5WYWx1ZS5FcXVhbDogdmFsdWVzIG9m
IHR5cGUgbGZzdGFjayBub2RlIGFsbG9jYXRlZCBmcm9tIHRoZSBoZWFwKSBpcyBs
YXJnZXIgdGhhbiBtYXhpbXVtIHBhZ2Ugc2l6ZSAocnVudGltZTogaW52YWxpZCB0
eXBlQml0c0J1bGtCYXJyaWVydW5jYWNoaW5nIHNwYW4gYnV0IHMuYWxsb2NDb3Vu
dCA9PSAwL21lbW9yeS9jbGFzc2VzL21ldGFkYXRhL290aGVyOmJ5dGVzL3NjaGVk
L3BhdXNlcy9zdG9wcGluZy9vdGhlcjpzZWNvbmRzdXNlciBhcmVuYSBzcGFuIGlz
IG9uIHRoZSB3cm9uZyBsaXN0cnVudGltZTogbWFya2VkIGZyZWUgb2JqZWN0IGlu
IHNwYW4gcnVudGltZTogdW5ibG9jayBvbiBjbG9zaW5nIHBvbGxkZXNjcnVudGlt
ZTogaW5jb25zaXN0ZW50IHdyaXRlIGRlYWRsaW5lcnVudGltZTogbmV0cG9sbDog
ZXZlbnRmZCByZWFkeSBmb3IgcnVudGltZTogc3Vkb2cgd2l0aCBub24tbmlsIHdh
aXRsaW5rcnVudGltZTogbWNhbGwgY2FsbGVkIG9uIG0tPmcwIHN0YWNrZmF0YWw6
IHJlY3Vyc2l2ZSBzd2l0Y2hUb0NyYXNoU3RhY2sKc3RhcnRtOiBQIHJlcXVpcmVk
IGZvciBzcGlubmluZz10cnVlKSBpcyBub3QgR3J1bm5hYmxlIG9yIEdzY2FucnVu
bmFibGUKcnVudGltZTogYmFkIG5vdGlmeUxpc3Qgc2l6ZSAtIHN5bmM9c2lnbmFs
IGFycml2ZWQgZHVyaW5nIGNnbyBleGVjdXRpb24KYWNjZXNzZWQgZGF0YSBmcm9t
IGZyZWVkIHVzZXIgYXJlbmEgcnVudGltZTogd3JvbmcgZ29yb3V0aW5lIGluIG5l
d3N0YWNrcnVudGltZTogaW52YWxpZCBwYy1lbmNvZGVkIHRhYmxlIGY9dGltZXIg
bW92ZWQgYmV0d2VlbiBzeW5jdGVzdCBidWJibGVzYWNjZXNzaW5nIGEgY29ycnVw
dGVkIHNoYXJlZCBsaWJyYXJ5VW5zdXBwb3J0ZWQgYXV0aGVudGljYXRpb24gbWVj
aGFuaXNtZXhwZWN0ZWQgYW4gRUNEU0EgcHVibGljIGtleSwgZ290ICVUdW5zdXBw
b3J0ZWQgU1NMdjIgaGFuZHNoYWtlIHJlY2VpdmVkdGxzOiBzZXJ2ZXIgZGlkIG5v
dCBzZW5kIGEga2V5IHNoYXJlYnl0ZXM6IFJlcGVhdCBvdXRwdXQgbGVuZ3RoIG92
ZXJmbG93eDUwOTogemVybyBvciBuZWdhdGl2ZSBEU0EgcGFyYW1ldGVyeDUwOTog
aW52YWxpZCBDUkwgZGlzdHJpYnV0aW9uIHBvaW50eDUwOTogaW52YWxpZCBzdWJq
ZWN0IGtleSBpZGVudGlmaWVyeDUwOTogbWFsZm9ybWVkIGFsZ29yaXRobSBpZGVu
dGlmaWVyT0lERnJvbUludHMoJXYpIHVuZXhwZWN0ZWQgZXJyb3I6ICV2anNvbjog
ZW5jb2RpbmcgZXJyb3IgZm9yIHR5cGUgJXE6ICVxaHR0cDogdW5leHBlY3RlZCBF
T0YgcmVhZGluZyB0cmFpbGVyIExhc3RTdHJlYW1JRD0ldiBFcnJDb2RlPSV2IERl
YnVnPSVxUm91bmRUcmlwIHJldHJ5aW5nIGFmdGVyIGZhaWx1cmU6ICV2bm8gYWNj
ZXB0YWJsZSBhdXRoZW50aWNhdGlvbiBtZXRob2RzaHR0cDovL3d3dy53My5vcmcv
WE1MLzE5OTgvbmFtZXNwYWNleG1sOiBlbmQgdGFnIDwvJXM+IHdpdGhvdXQgc3Rh
cnQgdGFneG1sOiAlcyBjaGFpbiBub3QgdmFsaWQgd2l0aCAlcyBmbGFnaW52YWxp
ZCBwYXR0ZXJuIHN5bnRheCAoKyBhZnRlciAtKTogY3J5cHRvL2NpcGhlcjogaW5w
dXQgbm90IGZ1bGwgYmxvY2tzY3J5cHRvL3NoYTE6IGludmFsaWQgaGFzaCBzdGF0
ZSBzaXplSUE1U3RyaW5nIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyRUNEU0Eg
UC0yNTYgU0hBMi01MTIgc2lnbiBhbmQgdmVyaWZ5Y2hhY2hhMjA6IHdyb25nIEhD
aGFDaGEyMCBub25jZSBzaXplZWR3YXJkczI1NTE5OiBpbnZhbGlkIHBvaW50IGVu
Y29kaW5nSW52YWxpZCBzZW5kZXIgZW1haWwgZm9ybWF0LCBhbGxvd2luZ21haWw6
IGV4cGVjdGVkIHNpbmdsZSBhZGRyZXNzLCBnb3QgJXF0aW1lem9uZSBob3VyIG91
dHNpZGUgb2YgcmFuZ2UgWzAsMjNdTW9uLCAwMiBKYW4gMjAwNiAxNTowNDowNSAt
MDcwMCAoTVNUKTIyMjA0NDYwNDkyNTAzMTMwODA4NDcyNjMzMzYxODE2NDA2MjVy
ZWZsZWN0OiBCaXRzIG9mIG5vbi1hcml0aG1ldGljIFR5cGUgcmVmbGVjdDogTnVt
RmllbGQgb2Ygbm9uLXN0cnVjdCB0eXBlIHJlZmxlY3Q6IE92ZXJmbG93SW50IG9m
IG5vbi1pbnQgdHlwZSByZWZsZWN0OiBmdW5jTGF5b3V0IG9mIG5vbi1mdW5jIHR5
cGUgcmVmbGVjdC5WYWx1ZS5CeXRlcyBvZiBub24tYnl0ZSBzbGljZXJlZmxlY3Qu
VmFsdWUuQnl0ZXMgb2Ygbm9uLWJ5dGUgYXJyYXlyZWZsZWN0LlZhbHVlLkJ5dGVz
IG9mIG5vbi1ydW5lIHNsaWNlbWV0aG9kIEFCSSBhbmQgdmFsdWUgQUJJIGRvIG5v
dCBhbGlnbnJlZmxlY3QuVmFsdWUuQ29udmVydDogdmFsdWUgb2YgdHlwZSBydW50
aW1lOiBhbGxvY2F0aW9uIHNpemUgb3V0IG9mIHJhbmdlKSBpcyBzbWFsbGVyIHRo
YW4gbWluaW11bSBwYWdlIHNpemUgKC9jcHUvY2xhc3Nlcy9nYy9tYXJrL2lkbGU6
Y3B1LXNlY29uZHNzZXRwcm9maWxlYnVja2V0OiBwcm9maWxlIGFscmVhZHkgc2V0
ZmFpbGVkIHRvIHJlc2VydmUgcGFnZSBzdW1tYXJ5IG1lbW9yeV9jZ29fbm90aWZ5
X3J1bnRpbWVfaW5pdF9kb25lIG1pc3NpbmdmYXRhbDogY29uY3VycmVudCBzd2l0
Y2hUb0NyYXNoU3RhY2sKc3RhcnRUaGVXb3JsZDogaW5jb25zaXN0ZW50IG1wLT5u
ZXh0cHJ1bnRpbWU6IHVuZXhwZWN0ZWQgU1BXUklURSBmdW5jdGlvbiBhbGwgZ29y
b3V0aW5lcyBhcmUgYXNsZWVwIC0gZGVhZGxvY2shc2VtYXBob3JlIHdha2Ugb2Yg
c3luY3Rlc3QgZ29yb3V0aW5lIGdvZGVidWc6IHVuZXhwZWN0ZWQgSW5jTm9uRGVm
YXVsdCBvZiB2YWx1ZSB0b28gbGFyZ2UgZm9yIGRlZmluZWQgZGF0YSB0eXBlY2Fu
bm90IGV4ZWMgYSBzaGFyZWQgbGlicmFyeSBkaXJlY3RseW9wZXJhdGlvbiBub3Qg
cG9zc2libGUgZHVlIHRvIFJGLWtpbGxzbXRwOiB0b28gbG9uZ2VyIGxpbmUgaW4g
aW5wdXQgc3RyZWFtU3ludGF4IGVycm9yLCAldiBjb21tYW5kIHVucmVjb2duaXpl
ZFVuYWJsZSB0byBwYXJzZSBNQUlMIEVTTVRQIHBhcmFtZXRlcnNjcnlwdG86IFNp
emUgb2YgdW5rbm93biBoYXNoIGZ1bmN0aW9udGxzOiB1bnN1cHBvcnRlZCBjZXJ0
aWZpY2F0ZSBrZXkgKCVUKXRsczogZmFpbGVkIHRvIHZlcmlmeSBjZXJ0aWZpY2F0
ZTogJXNieXRlcy5CdWZmZXI6IHRydW5jYXRpb24gb3V0IG9mIHJhbmdleDUwOTog
bWFsZm9ybWVkIGV4dGVuc2lvbiB2YWx1ZSBmaWVsZHg1MDk6IFJTQSBrZXkgbWlz
c2luZyBOVUxMIHBhcmFtZXRlcnN4NTA5OiBpbnZhbGlkIENSTCBkaXN0cmlidXRp
b24gcG9pbnRzJWQgY2hhaW5zIHdpdGggaW5jb21wYXRpYmxlIGtleSB1c2FnZXVu
ZXhwZWN0ZWQgQ09OVElOVUFUSU9OIGZvciBzdHJlYW0gJWRodHRwMjogdW5lbmNy
eXB0ZWQgSFRUUC8yIG5vdCBlbmFibGVkaHR0cDI6IFRyYW5zcG9ydCBzZW5kaW5n
IGhlYWx0aCBjaGVja2h0dHAyOiBUcmFuc3BvcnQgaGVhbHRoIGNoZWNrIHN1Y2Nl
c3NSb3VuZFRyaXAgb24gdW5pbml0aWFsaXplZCBDbGllbnRDb25uY2Fubm90IGNy
ZWF0ZSBjb250ZXh0IGZyb20gbmlsIHBhcmVudHhtbDogYmFkIHR5cGUgZm9yIGNv
bW1lbnQgZmllbGQgb2YgJXNpbnZhbGlkIHNlcXVlbmNlIDwhLSBub3QgcGFydCBv
ZiA8IS0tZWFjaCBncm91cCBtdXN0IGhhdmUgNCBvciBsZXNzIGRpZ2l0c3RvbyBt
YW55IEF1dGhvcml0aWVzIHRvIHBhY2sgKD42NTUzNSl0b28gbWFueSBBZGRpdGlv
bmFscyB0byBwYWNrICg+NjU1MzUpYmlzZWN0Lkhhc2g6IHVuZXhwZWN0ZWQgYXJn
dW1lbnQgdHlwZWNpcGhlcjogbWVzc2FnZSBhdXRoZW50aWNhdGlvbiBmYWlsZWRj
cnlwdG8vY2lwaGVyOiBpbnZhbGlkIGJ1ZmZlciBvdmVybGFwY3J5cHRvL2NpcGhl
cjogaW5jb3JyZWN0IEdDTSB0YWcgc2l6ZWNoYWNoYTIwcG9seTEzMDU6IHBsYWlu
dGV4dCB0b28gbGFyZ2VvdXQgZG9lcyBub3QgcG9pbnQgdG8gYW4gaW50ZWdlciB0
eXBlY3J5cHRvL2VjZGg6IGludmFsaWQgcHJpdmF0ZSBrZXkgc2l6ZWV4cGxpY2l0
bHkgdGFnZ2VkIG1lbWJlciBkaWRuJ3QgbWF0Y2hiaWdtb2Q6IGludGVybmFsIGVy
cm9yOiBzaHJpbmtpbmcgbmF0Y3J5cHRvL3JzYTogdW5zdXBwb3J0ZWQgaGFzaCBm
dW5jdGlvbmNyeXB0by9yc2E6IHB1YmxpYyBleHBvbmVudCB0b28gbGFyZ2VleGUs
YmF0LGNtZCxjb20scGlmLHNjcix2YnMsanMsamFyLG1zaWNvbnN1bWVBZGRyU3Bl
YzogcGFyc2luZyBxdW90ZWQtc3RyaW5nbWFpbDogZW1wdHkgcXVvdGVkIHN0cmlu
ZyBpbiBhZGRyLXNwZWN0aW1lOiBtaXNzaW5nIExvY2F0aW9uIGluIGNhbGwgdG8g
RGF0ZWZsYWcgJXMgc2V0IGF0ICVzIGJlZm9yZSBiZWluZyBkZWZpbmVkbWltZTog
ZXhwZWN0ZWQgc2xhc2ggYWZ0ZXIgZmlyc3QgdG9rZW4xMTEwMjIzMDI0NjI1MTU2
NTQwNDIzNjMxNjY4MDkwODIwMzEyNTU1NTExMTUxMjMxMjU3ODI3MDIxMTgxNTgz
NDA0NTQxMDE1NjI1aW5kZXggb3V0IG9mIHJhbmdlIFsleF0gd2l0aCBsZW5ndGgg
JXltYWtlY2hhbjogaW52YWxpZCBjaGFubmVsIGVsZW1lbnQgdHlwZXVucmVhY2hh
YmxlIG1ldGhvZCBjYWxsZWQuIGxpbmtlciBidWc/Z2NCZ01hcmtXb3JrZXI6IGJs
YWNrZW5pbmcgbm90IGVuYWJsZWRjYW5ub3QgcmVhZCBzdGFjayBvZiBydW5uaW5n
IGdvcm91dGluZXJ1bnRpbWU6IGJsb2NrZWQgcmVhZCBvbiBmcmVlIHBvbGxkZXNj
cnVudGltZTogc3Vkb2cgd2l0aCBub24tZmFsc2UgaXNTZWxlY3Rhcmcgc2l6ZSB0
byByZWZsZWN0LmNhbGwgbW9yZSB0aGFuIDFHQnYgY291bGQgbm90IGZpdCBpbiB0
cmFjZUJ5dGVzUGVyTnVtYmVyY2FuIG5vdCBhY2Nlc3MgYSBuZWVkZWQgc2hhcmVk
IGxpYnJhcnlNYXhpbXVtIGxpbWl0IG9mICV2IHJlY2lwaWVudHMgcmVhY2hlZHRs
czogaW52YWxpZCBDbGllbnRLZXlFeGNoYW5nZSBtZXNzYWdldGxzOiBpbnZhbGlk
IFNlcnZlcktleUV4Y2hhbmdlIG1lc3NhZ2VleHBlY3RlZCBhbiBFZDI1NTE5IHB1
YmxpYyBrZXksIGdvdCAlVGludGVybmFsIGVycm9yOiB1bmtub3duIHNpZ25hdHVy
ZSB0eXBldGxzOiBzZXJ2ZXIgc2VsZWN0ZWQgdW5zdXBwb3J0ZWQgZ3JvdXB0bHM6
IHVuc3VwcG9ydGVkIHNpZ25pbmcga2V5IHR5cGUgKCVUKXRsczogZWFybHlfZGF0
YSB3aXRob3V0IHByZV9zaGFyZWRfa2V5dGxzOiBjbGllbnQgc2VudCB1bmV4cGVj
dGVkIGVhcmx5IGRhdGF0bHM6IGZhaWxlZCB0byBzaWduIEVDREhFIHBhcmFtZXRl
cnM6IHRsczogc2VydmVyIHNlbGVjdGVkIHVuc3VwcG9ydGVkIGN1cnZldGxzOiBt
aXNzaW5nIFNlcnZlcktleUV4Y2hhbmdlIG1lc3NhZ2V0bHM6IGludGVybmFsIGVy
cm9yOiB1bnN1cHBvcnRlZCBjdXJ2ZXg1MDk6IGludmFsaWQgc3ViamVjdCBhbHRl
cm5hdGl2ZSBuYW1leDUwOTogaW52YWxpZCBhdXRob3JpdHkga2V5IGlkZW50aWZp
ZXJ4NTA5OiBlbXB0eSBuYW1lIGNvbnN0cmFpbnRzIGV4dGVuc2lvbng1MDk6IGNh
bm5vdCB2YWxpZGF0ZSBjZXJ0aWZpY2F0ZSBmb3IgYWZ0ZXIgZGVjaW1hbCBwb2lu
dCBpbiBudW1lcmljIGxpdGVyYWxmYWlsZWQgdG8gcGFyc2UgTG9jYXRpb24gaGVh
ZGVyICVxOiAldklQdjQgZmllbGQgaGFzIG9jdGV0IHdpdGggbGVhZGluZyB6ZXJv
aW5zdWZmaWNpZW50IGRhdGEgZm9yIGJhc2UgbGVuZ3RoIHR5cGVjb25jdXJyZW50
IG1hcCBpdGVyYXRpb24gYW5kIG1hcCB3cml0ZWVjZHNhOiBwdWJsaWMga2V5IGRv
ZXMgbm90IG1hdGNoIGN1cnZlY2hhY2hhMjBwb2x5MTMwNTogY2lwaGVydGV4dCB0
b28gbGFyZ2VpbnRlcm5hbCBlcnJvcjogdW5rbm93biBzdHJpbmcgdHlwZSAlZGFz
bjE6IFVubWFyc2hhbCByZWNpcGllbnQgdmFsdWUgaXMgbmlsaW52YWxpZCBQMjI0
IGNvbXByZXNzZWQgcG9pbnQgZW5jb2RpbmdpbnZhbGlkIFAyNTYgY29tcHJlc3Nl
ZCBwb2ludCBlbmNvZGluZ2ludmFsaWQgUDM4NCBjb21wcmVzc2VkIHBvaW50IGVu
Y29kaW5naW52YWxpZCBQNTIxIGNvbXByZXNzZWQgcG9pbnQgZW5jb2RpbmdiaWdt
b2Q6IGludGVybmFsIGVycm9yOiBiYWQgYXJpdGhtZXRpY2NyeXB0by9zaGEyNTY6
IGludmFsaWQgaGFzaCBzdGF0ZSBzaXplY3J5cHRvL3NoYTUxMjogaW52YWxpZCBo
YXNoIHN0YXRlIHNpemVtYXhpbXVtIGVtYWlscyBwZXIgbWludXRlIHBlciBzZW5k
ZXIgSVAyMDA2LTAxLTAyIDE1OjA0OjA1Ljk5OTk5OTk5OSAtMDcwMCBNU1QqKioq
KiBCT0RZIElTIGJ5dGUocykgKHNpemUgLSAlZCkgKioqKioyNzc1NTU3NTYxNTYy
ODkxMzUxMDU5MDc5MTcwMjI3MDUwNzgxMjVyZWZsZWN0OiBPdmVyZmxvd1VpbnQg
b2Ygbm9uLXVpbnQgdHlwZSByZWZsZWN0Lk1ha2VNYXBXaXRoU2l6ZSBvZiBub24t
bWFwIHR5cGVtaXNtYXRjaGVkIGNvdW50IGR1cmluZyBpdGFiIHRhYmxlIGNvcHlv
dXQgb2YgbWVtb3J5IGFsbG9jYXRpbmcgaGVhcCBhcmVuYSBtYXAvY3B1L2NsYXNz
ZXMvZ2MvbWFyay9hc3Npc3Q6Y3B1LXNlY29uZHMvY3B1L2NsYXNzZXMvc2NhdmVu
Z2UvdG90YWw6Y3B1LXNlY29uZHMvbWVtb3J5L2NsYXNzZXMvcHJvZmlsaW5nL2J1
Y2tldHM6Ynl0ZXNtc3Bhbi5zd2VlcDogYmFkIHNwYW4gc3RhdGUgYWZ0ZXIgc3dl
ZXBydW50aW1lOiBibG9ja2VkIHdyaXRlIG9uIGZyZWUgcG9sbGRlc2NydW50aW1l
LlBpbm5lcjogb2JqZWN0IGFscmVhZHkgdW5waW5uZWRzdXNwZW5kRyBmcm9tIG5v
bi1wcmVlbXB0aWJsZSBnb3JvdXRpbmVydW50aW1lOiBjYXNmcm9tX0dzY2Fuc3Rh
dHVzIGZhaWxlZCBncD1zdGFjayBncm93dGggbm90IGFsbG93ZWQgaW4gc3lzdGVt
IGNhbGx0cmFjZWJhY2s6IHVuZXhwZWN0ZWQgU1BXUklURSBmdW5jdGlvbiB0cmFj
ZVJlZ2lvbjogYWxsb2Mgd2l0aCBjb25jdXJyZW50IGRyb3B0cmFuc3BvcnQgZW5k
cG9pbnQgaXMgYWxyZWFkeSBjb25uZWN0ZWR0bHM6IHVuc3VwcG9ydGVkIGNlcnRp
ZmljYXRlIGN1cnZlICglcyl0bHM6IGludGVybmFsIGVycm9yOiB3cm9uZyBub25j
ZSBsZW5ndGhubyBtdXR1YWxseSBzdXBwb3J0ZWQgcHJvdG9jb2wgdmVyc2lvbnNj
aGFpbiBpcyBub3Qgc2lnbmVkIGJ5IGFuIGFjY2VwdGFibGUgQ0FtdWx0aXBhcnQ6
IGNhbid0IHdyaXRlIHRvIGZpbmlzaGVkIHBhcnR4NTA5OiBpbnZhbGlkIHN1Ympl
Y3QgYWx0ZXJuYXRpdmUgbmFtZXN4NTA5OiBpbnZhbGlkIE5hbWVDb25zdHJhaW50
cyBleHRlbnNpb254NTA5OiBmYWlsZWQgdG8gcGFyc2UgVVJJIGNvbnN0cmFpbnQg
JXF4NTA5OiBpbnZhbGlkIHBvbGljeSBtYXBwaW5ncyBleHRlbnNpb25tYXRoL2Jp
ZzogYnVmZmVyIHRvbyBzbWFsbCB0byBmaXQgdmFsdWUgYmVjYXVzZSBpdCBkb2Vz
bid0IGNvbnRhaW4gYW55IElQIFNBTnNodHRwOiBwdXRJZGxlQ29ubjoga2VlcCBh
bGl2ZXMgZGlzYWJsZWR1c2VybmFtZS9wYXNzd29yZCBhdXRoZW50aWNhdGlvbiBm
YWlsZWRJUHY0IGZpZWxkIG11c3QgaGF2ZSBhdCBsZWFzdCBvbmUgZGlnaXRjaXBo
ZXI6IGluY29ycmVjdCB0YWcgc2l6ZSBnaXZlbiB0byBHQ01jcnlwdG8vY2lwaGVy
OiBpbmNvcnJlY3QgR0NNIG5vbmNlIHNpemVtbGtlbTogaW52YWxpZCBlbmNhcHN1
bGF0aW9uIGtleSBsZW5ndGgKOzsgT1BUIFBTRVVET1NFQ1RJT046CjsgRUROUzog
dmVyc2lvbiB0YWdzIGRvbid0IG1hdGNoICglZCB2cyAlK3YpICUrdiAlcyBAJWRh
c24xOiBVbm1hcnNoYWwgcmVjaXBpZW50IHZhbHVlIGlzIG5pbCBpbnZhbGlkIGlu
ZGV4ZWQgcmVwcmVzZW50YXRpb24gaW5kZXggJWRtaXNzaW5nIGFyZ3VtZW50IHRv
IHJlcGV0aXRpb24gb3BlcmF0b3J0cmFpbGluZyBiYWNrc2xhc2ggYXQgZW5kIG9m
IGV4cHJlc3Npb25lZDI1NTE5OiBiYWQgRWQyNTUxOXBoIGNvbnRleHQgbGVuZ3Ro
OiBmaXBzMTQwOiBubyB2ZXJpZmljYXRpb24gY2hlY2tzdW0gZm91bmRyZWplY3Qg
ZW1haWxzIHRoYXQgZmFpbCBTUEYgdmVyaWZpY2F0aW9uRW1haWwgZmxhZ2dlZCB3
aXRoIHNlY3VyaXR5IHNjb3JlICVkOiAlc21haWw6IG1pc2Zvcm1hdHRlZCBwYXJl
bnRoZXRpY2FsIGNvbW1lbnRtYWlsOiBpbnZhbGlkIHV0Zi04IGluIHF1b3RlZC1z
dHJpbmc6ICVxbWFpbDogYmFkIGNoYXJhY3RlciBpbiBxdW90ZWQtc3RyaW5nOiAl
cWVycm9yczogdGFyZ2V0IG11c3QgYmUgYSBub24tbmlsIHBvaW50ZXJ0aW1lOiBT
dG9wIGNhbGxlZCBvbiB1bmluaXRpYWxpemVkIFRpbWVybWFsZm9ybWVkIE1JTUUg
aGVhZGVyOiBtaXNzaW5nIGNvbG9uOiAlcTEzODc3Nzg3ODA3ODE0NDU2NzU1Mjk1
Mzk1ODUxMTM1MjUzOTA2MjU2OTM4ODkzOTAzOTA3MjI4Mzc3NjQ3Njk3OTI1NTY3
NjI2OTUzMTI1cnl1RnRvYUZpeGVkMzIgY2FsbGVkIHdpdGggbmVnYXRpdmUgcHJl
Y01hcEl0ZXIuS2V5IGNhbGxlZCBvbiBleGhhdXN0ZWQgaXRlcmF0b3JyZWZsZWN0
LlZhbHVlLkNhbGw6IGNhbGwgb2YgbmlsIGZ1bmN0aW9ucmVmbGVjdC5WYWx1ZS5D
YWxsOiB3cm9uZyBhcmd1bWVudCBjb3VudGF0dGVtcHRlZCB0byBjb3B5IHBvaW50
ZXIgdG8gRlAgcmVnaXN0ZXJyZWZsZWN0LlZhbHVlLlNldEJ5dGVzIG9mIG5vbi1i
eXRlIHNsaWNlcmVmbGVjdC5WYWx1ZS5zZXRSdW5lcyBvZiBub24tcnVuZSBzbGlj
ZWludmFsaWQgc3BhbiBpbiBoZWFwQXJlbmEgZm9yIHVzZXIgYXJlbmFidWxrQmFy
cmllclByZVdyaXRlOiB1bmFsaWduZWQgYXJndW1lbnRzcnVudGltZTogdHlwZUJp
dHNCdWxrQmFycmllciB3aXRoIHR5cGUgIHJlZmlsbCBvZiBzcGFuIHdpdGggZnJl
ZSBzcGFjZSByZW1haW5pbmcvY3B1L2NsYXNzZXMvc2NhdmVuZ2UvYXNzaXN0OmNw
dS1zZWNvbmRzcnVudGltZS5TZXRGaW5hbGl6ZXI6IGZpcnN0IGFyZ3VtZW50IGlz
IGZhaWxlZCB0byBhY3F1aXJlIGxvY2sgdG8gcmVzZXQgY2FwYWNpdHltYXJrV29y
a2VyU3RvcDogdW5rbm93biBtYXJrIHdvcmtlciBtb2RlY2Fubm90IGZyZWUgd29y
a2J1ZnMgd2hlbiB3b3JrLmZ1bGwgIT0gMHJ1bnRpbWU6IG91dCBvZiBtZW1vcnk6
IGNhbm5vdCBhbGxvY2F0ZSBydW50aW1lOiBuZXRwb2xsQnJlYWsgd3JpdGUgZmFp
bGVkIHdpdGggc3RvcFRoZVdvcmxkOiBicm9rZW4gQ1BVIHRpbWUgYWNjb3VudGlu
Z2dsb2JhbCBydW5xIGVtcHR5IHdpdGggbm9uLXplcm8gcnVucXNpemVtdXN0IGJl
IGFibGUgdG8gdHJhY2sgaWRsZSBsaW1pdGVyIGV2ZW50Z29yb3V0aW5lIHN0YWNr
IHNpemUgaXMgbm90IGEgcG93ZXIgb2YgMmFkZHJlc3MgZmFtaWx5IG5vdCBzdXBw
b3J0ZWQgYnkgcHJvdG9jb2xjbGllbnQgZG9lc24ndCBzdXBwb3J0IGNlcnRpZmlj
YXRlIGN1cnZlb3ZlcnNpemVkIHJlY29yZCByZWNlaXZlZCB3aXRoIGxlbmd0aCAl
ZHRsczogcmVjZWl2ZWQgZW1wdHkgY2VydGlmaWNhdGVzIG1lc3NhZ2V0bHM6IGNs
aWVudCBkaWRuJ3QgcHJvdmlkZSBhIGNlcnRpZmljYXRlbXVsdGlwYXJ0OiB1bmV4
cGVjdGVkIGxpbmUgaW4gTmV4dCgpOiAlcXF1b3RlZHByaW50YWJsZTogaW52YWxp
ZCBoZXggYnl0ZSAweCUwMnh4NTA5OiBtYWxmb3JtZWQgZXh0ZW5zaW9uIGNyaXRp
Y2FsIGZpZWxkeDUwOTogY2Fubm90IHBhcnNlIElQIGFkZHJlc3Mgb2YgbGVuZ3Ro
ICVzICVxIGlzIG5vdCBwZXJtaXR0ZWQgYnkgYW55IGNvbnN0cmFpbnRodHRwMjog
dGltZW91dCBhd2FpdGluZyByZXNwb25zZSBoZWFkZXJzRnJhbWUgYWNjZXNzb3Ig
Y2FsbGVkIG9uIG5vbi1vd25lZCBGcmFtZWh0dHAyOiBUcmFuc3BvcnQgZW5jb2Rp
bmcgaGVhZGVyICVxID0gJXFwcm90b2NvbCBlcnJvcjogaGVhZGVycyBhZnRlciBF
TkRfU1RSRUFNeG1sOiB0cmFpbGluZyAnPicgaW4gZmllbGQgJXMgb2YgdHlwZSAl
c2NyeXB0by9yc2E6IGlucHV0IG11c3QgYmUgaGFzaGVkIG1lc3NhZ2VjcnlwdG8v
Y2lwaGVyOiBvdXRwdXQgc21hbGxlciB0aGFuIGlucHV0Y2lwaGVyOiB0aGUgbm9u
Y2UgY2FuJ3QgaGF2ZSB6ZXJvIGxlbmd0aGNyeXB0by9jaXBoZXI6IG1lc3NhZ2Ug
dG9vIGxhcmdlIGZvciBHQ01jaGFjaGEyMHBvbHkxMzA1OiBpbnZhbGlkIGJ1ZmZl
ciBvdmVybGFwTnVtZXJpY1N0cmluZyBjb250YWlucyBpbnZhbGlkIGNoYXJhY3Rl
cmNhbm5vdCByZXByZXNlbnQgdGltZSBhcyBHZW5lcmFsaXplZFRpbWVldmljdE9s
ZGVzdCgldikgb24gdGFibGUgd2l0aCAldiBlbnRyaWVzZWQyNTUxOTogYmFkIEVk
MjU1MTljdHggY29udGV4dCBsZW5ndGg6IHJzYTogaW50ZXJuYWwgZXJyb3I6IGlu
Y29uc2lzdGVudCBsZW5ndGhlZHdhcmRzMjU1MTk6IHVzZSBvZiB1bmluaXRpYWxp
emVkIFBvaW50bWFpbDogaW52YWxpZCB1dGYtOCBpbiBkb21haW4tbGl0ZXJhbDog
JXFtYWlsOiBiYWQgY2hhcmFjdGVyIGluIGRvbWFpbi1saXRlcmFsOiAlcXRpbWU6
IFJlc2V0IGNhbGxlZCBvbiB1bmluaXRpYWxpemVkIFRpbWVyVGltZS5Vbm1hcnNo
YWxCaW5hcnk6IHVuc3VwcG9ydGVkIHZlcnNpb24qKioqKiBSRVFVRVNUIFRPTyBM
QVJHRSAoc2l6ZSAtICVkKSAqKioqKjM0Njk0NDY5NTE5NTM2MTQxODg4MjM4NDg5
NjI3ODM4MTM0NzY1NjI1c3RyY29udjogaWxsZWdhbCBBcHBlbmRJbnQvRm9ybWF0
SW50IGJhc2VjYW4ndCBjYWxsIHBvaW50ZXIgb24gYSBub24tcG9pbnRlciBWYWx1
ZXVuZXhwZWN0ZWQgY2FsbCB0byBvcy5FeGl0KDApIGR1cmluZyB0ZXN0TWFwSXRl
ci5OZXh0IGNhbGxlZCBvbiBleGhhdXN0ZWQgaXRlcmF0b3JyZWZsZWN0OiBGaWVs
ZEJ5SW5kZXggb2Ygbm9uLXN0cnVjdCB0eXBlIHJlZmxlY3QuVmFsdWUuQWRkciBv
ZiB1bmFkZHJlc3NhYmxlIHZhbHVlIGNsb3NlZCwgdW5hYmxlIHRvIG9wZW4gL2Rl
di9udWxsLCBlcnJubz1ydW50aW1lOiB0eXBlQml0c0J1bGtCYXJyaWVyIHdpdGhv
dXQgdHlwZS9tZW1vcnkvY2xhc3Nlcy9tZXRhZGF0YS9tc3Bhbi9mcmVlOmJ5dGVz
cnVudGltZS5TZXRGaW5hbGl6ZXI6IHNlY29uZCBhcmd1bWVudCBpcyBnY1N3ZWVw
IGJlaW5nIGRvbmUgYnV0IHBoYXNlIGlzIG5vdCBHQ29mZm9iamVjdHMgYWRkZWQg
b3V0IG9mIG9yZGVyIG9yIG92ZXJsYXBwaW5nbWhlYXAuZnJlZVNwYW5Mb2NrZWQg
LSBpbnZhbGlkIHN0YWNrIGZyZWVtaGVhcC5mcmVlU3BhbkxvY2tlZCAtIGludmFs
aWQgc3BhbiBzdGF0ZWF0dGVtcHRlZCB0byBhZGQgemVyby1zaXplZCBhZGRyZXNz
IHJhbmdlcnVudGltZTogYmxvY2tlZCByZWFkIG9uIGNsb3NpbmcgcG9sbGRlc2Nz
dG9wVGhlV29ybGQ6IG5vdCBzdG9wcGVkIChzdG9wd2FpdCAhPSAwKSByZWNlaXZl
ZCBvbiB0aHJlYWQgd2l0aCBubyBzaWduYWwgc3RhY2sKaW52YWxpZCB0aW1lcjog
ZmFrZSB0aW1lIGJ1dCBubyBzeW5jZ3JvdXBjbG9uZShDTE9ORV9QSURGRCkgZmFp
bGVkIHRvIHJldHVybiBwaWRmZENhbm5vdCBWUkZZIHVzZXIsIGJ1dCB3aWxsIGFj
Y2VwdCBtZXNzYWdlRG9tYWluL2FkZHJlc3MgYXJndW1lbnQgcmVxdWlyZWQgZm9y
IEhFTE9Eb21haW4vYWRkcmVzcyBhcmd1bWVudCByZXF1aXJlZCBmb3IgRUhMT3Rs
czogaW50ZXJuYWwgZXJyb3I6IHVuc3VwcG9ydGVkIGtleSAoJVQpaW52YWxpZCB2
YWx1ZSBsZW5ndGg6IGV4cGVjdGVkICVkLCBnb3QgJWR0bHM6IHVuc3VwcG9ydGVk
IGRlY3J5cHRpb24ga2V5IHR5cGUgKCVUKXRsczogZmFpbGVkIHRvIHBhcnNlIGNs
aWVudCBjZXJ0aWZpY2F0ZTogdGxzOiBpbnRlcm5hbCBlcnJvcjogZmFpbGVkIHRv
IGNsb25lIGhhc2h0bHM6IGludGVybmFsIGVycm9yOiB1bmtub3duIGNpcGhlciBz
dWl0ZXRsczogbm8gc3VwcG9ydGVkIGVsbGlwdGljIGN1cnZlcyBvZmZlcmVkdGxz
OiBpbnRlcm5hbCBlcnJvcjogZW1wdHkgdmVyaWZpZWQgY2hhaW5ieXRlcy5CdWZm
ZXIuV3JpdGVUbzogaW52YWxpZCBXcml0ZSBjb3VudGJ5dGVzLlJlYWRlci5Xcml0
ZVRvOiBpbnZhbGlkIFdyaXRlIGNvdW50eDUwOTogY2Fubm90IHBhcnNlIFVSSSAl
cTogaW52YWxpZCBkb21haW5odHRwMjogbm8gY2FjaGVkIGNvbm5lY3Rpb24gd2Fz
IGF2YWlsYWJsZWh0dHAyOiBUcmFuc3BvcnQgaGVhbHRoIGNoZWNrIGZhaWx1cmU6
ICV2aHR0cDI6IGludmFsaWQgVXBncmFkZSByZXF1ZXN0IGhlYWRlcjogJXF0cmFu
c3BvcnQgZ290IEdPQVdBWSB3aXRoIGVycm9yIGNvZGUgPSAldm5ldC91cmw6IGlu
dmFsaWQgY29udHJvbCBjaGFyYWN0ZXIgaW4gVVJMY29sb24gbXVzdCBiZSBmb2xs
b3dlZCBieSBtb3JlIGNoYXJhY3RlcnNjcnlwdG8vbWQ1OiBpbnZhbGlkIGhhc2gg
c3RhdGUgaWRlbnRpZmllcmFzbjE6IGludGVybmFsIGVycm9yIGluIHBhcnNlVGFn
QW5kTGVuZ3RoaWRuYTogaW50ZXJuYWwgZXJyb3IgaW4gcHVueWNvZGUgZW5jb2Rp
bmdSU0FTU0EtUEtDUy12MS41IDIwNDgtYml0IHNpZ24gYW5kIHZlcmlmeWZpcHMx
NDA6IHVua25vd24gR09ERUJVRyBzZXR0aW5nIGZpcHMxNDA9VGltZS5NYXJzaGFs
QmluYXJ5OiB1bmV4cGVjdGVkIHpvbmUgb2Zmc2V0KD9pOihhcHBsaWNhdGlvbnx0
ZXh0KS8oeG1sfC4qXCt4bWwpKDt8JCkpKioqKiogUkVTUE9OU0UgVE9PIExBUkdF
IChzaXplIC0gJWQpICoqKioqZ28gcGFja2FnZSBuZXQ6IHVzaW5nIHRoZSBHbyBE
TlMgcmVzb2x2ZXIKMTczNDcyMzQ3NTk3NjgwNzA5NDQxMTkyNDQ4MTM5MTkwNjcz
ODI4MTI1ODY3MzYxNzM3OTg4NDAzNTQ3MjA1OTYyMjQwNjk1OTUzMzY5MTQwNjI1
TWFwSXRlci5WYWx1ZSBjYWxsZWQgb24gZXhoYXVzdGVkIGl0ZXJhdG9ycmVmbGVj
dDogQ2FsbCB3aXRoIHRvbyBmZXcgaW5wdXQgYXJndW1lbnRzbWlzbWF0Y2ggYmV0
d2VlbiBBQkkgZGVzY3JpcHRpb24gYW5kIHR5cGVzcmVmbGVjdDogY2Fubm90IGNv
bnZlcnQgc2xpY2Ugd2l0aCBsZW5ndGggIGJ5dGVzOyBpbmNvbXBhdGlibGUgd2l0
aCBtdXRleCBmbGFnIG1hc2sgcGVyc2lzdGVudGFsbG9jOiBhbGlnbiBpcyBub3Qg
YSBwb3dlciBvZiAyb3V0IG9mIG1lbW9yeSBhbGxvY2F0aW5nIGNoZWNrbWFya3Mg
Yml0bWFwL2NwdS9jbGFzc2VzL2djL21hcmsvZGVkaWNhdGVkOmNwdS1zZWNvbmRz
L21lbW9yeS9jbGFzc2VzL21ldGFkYXRhL21jYWNoZS9mcmVlOmJ5dGVzL21lbW9y
eS9jbGFzc2VzL21ldGFkYXRhL21zcGFuL2ludXNlOmJ5dGVzbm9uLWVtcHR5IG1h
cmsgcXVldWUgYWZ0ZXIgY29uY3VycmVudCBtYXJrc3dlZXA6IHRyaWVkIHRvIHBy
ZXNlcnZlIGEgdXNlciBhcmVuYSBzcGFucnVudGltZTogYmxvY2tlZCB3cml0ZSBv
biBjbG9zaW5nIHBvbGxkZXNjdW5leHBlY3RlZCBzdGF0ZSBwYXNzZWQgdG8gcGFu
aWNyYW5nZXN0YXRlYWNxdWlyZVN1ZG9nOiBmb3VuZCBzLmVsZW0gIT0gbmlsIGlu
IGNhY2hlZmF0YWwgZXJyb3I6IGNnbyBjYWxsYmFjayBiZWZvcmUgY2dvIGNhbGwK
b24gYSBsb2NrZWQgdGhyZWFkIHdpdGggbm8gdGVtcGxhdGUgdGhyZWFkdW5leHBl
Y3RlZCBzaWduYWwgZHVyaW5nIHJ1bnRpbWUgZXhlY3V0aW9uIHJlY2VpdmVkIGJ1
dCBoYW5kbGVyIG5vdCBvbiBzaWduYWwgc3RhY2sKc3RvcCBvZiBzeW5jdGVzdCB0
aW1lciBmcm9tIG91dHNpZGUgYnViYmxldHJhY2VTdG9wUmVhZENQVSBjYWxsZWQg
d2l0aCB0cmFjZSBlbmFibGVkYXR0ZW1wdGVkIHRvIHRyYWNlIGEgYmFkIHN0YXR1
cyBmb3IgYSBwcm9jc3luYy9hdG9taWM6IHN0b3JlIG9mIG5pbCB2YWx1ZSBpbnRv
IFZhbHVlREFUQSBjb21tYW5kIHNob3VsZCBub3QgaGF2ZSBhbnkgYXJndW1lbnRz
cXVvdGVkcHJpbnRhYmxlOiBpbnZhbGlkIGJ5dGVzIGFmdGVyID06ICVxeDUwOTog
JXEgY2Fubm90IGJlIGVuY29kZWQgYXMgYW4gSUE1U3RyaW5neDUwOTogUlNBIG1v
ZHVsdXMgaXMgbm90IGEgcG9zaXRpdmUgbnVtYmVyeDUwOTogaW52YWxpZCBwb2xp
Y3kgY29uc3RyYWludHMgZXh0ZW5zaW9ueDUwOTogaW52YWxpZCBpbmhpYml0IGFu
eSBwb2xpY3kgZXh0ZW5zaW9ubG9va2luZyBmb3IgYmVnaW5uaW5nIG9mIG9iamVj
dCBrZXkgc3RyaW5nbWl4IG9mIHJlcXVlc3QgYW5kIHJlc3BvbnNlIHBzZXVkbyBo
ZWFkZXJzUFJJT1JJVFkgZnJhbWUgcGF5bG9hZCBzaXplIHdhcyAlZDsgd2FudCA1
aHR0cDogQ29udGVudExlbmd0aD0lZCB3aXRoIEJvZHkgbGVuZ3RoICVkY29va2ll
amFyOiBpbGxlZ2FsIGNvb2tpZSBkb21haW4gYXR0cmlidXRlaW50ZXJuYWwgZXJy
b3I6IGNhbGwgdG8gcnVudGltZVNvdXJjZS5TZWVkaW5zdWZmaWNpZW50IGRhdGEg
Zm9yIHJlc291cmNlIGJvZHkgbGVuZ3RoY3J5cHRvL3JzYTogc2FsdCBsZW5ndGgg
Y2Fubm90IGJlIG5lZ2F0aXZlY3J5cHRvL3NoYTE6IGludmFsaWQgaGFzaCBzdGF0
ZSBpZGVudGlmaWVycG9seTEzMDU6IHdyaXRlIHRvIE1BQyBhZnRlciBTdW0gb3Ig
VmVyaWZ5ZG9tYWluIG5hbWUgZXhjZWVkZWQgJWQgd2lyZS1mb3JtYXQgb2N0ZXRz
UHJpbnRhYmxlU3RyaW5nIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyRW1haWwg
c3VjY2Vzc2Z1bGx5IGZvcndhcmRlZCB0byB3ZWJob29rOiAlc2J1ZmlvOiB0cmll
ZCB0byByZXdpbmQgcGFzdCBzdGFydCBvZiBidWZmZXJtdWx0aXBsZSBSZWFkIGNh
bGxzIHJldHVybiBubyBkYXRhIG9yIGVycm9ybXVsdDY0Yml0UG93MTA6IHBvd2Vy
IG9mIDEwIGlzIG91dCBvZiByYW5nZXJlZmxlY3Q6IG5pbCB0eXBlIHBhc3NlZCB0
byBUeXBlLkltcGxlbWVudHNyZWZsZWN0OiBDYWxsU2xpY2Ugb2Ygbm9uLXZhcmlh
ZGljIGZ1bmN0aW9ucmVmbGVjdDogQ2FsbCB3aXRoIHRvbyBtYW55IGlucHV0IGFy
Z3VtZW50c3J1bnRpbWU6IG9wZW5lZCB1bmV4cGVjdGVkIGZpbGUgZGVzY3JpcHRv
ciAvbWVtb3J5L2NsYXNzZXMvbWV0YWRhdGEvbWNhY2hlL2ludXNlOmJ5dGVzcnVu
dGltZS5TZXRGaW5hbGl6ZXI6IGZpcnN0IGFyZ3VtZW50IGlzIG5pbHJ1bnRpbWUu
U2V0RmluYWxpemVyOiBmaW5hbGl6ZXIgYWxyZWFkeSBzZXRnY0JnTWFya1dvcmtl
cjogdW5leHBlY3RlZCBnY01hcmtXb3JrZXJNb2Rlbm9uIGluLXVzZSBzcGFuIGZv
dW5kIHdpdGggc3BlY2lhbHMgYml0IHNldGdyZXcgaGVhcCwgYnV0IG5vIGFkZXF1
YXRlIGZyZWUgc3BhY2UgZm91bmRyb290IGxldmVsIG1heCBwYWdlcyBkb2Vzbid0
IGZpdCBpbiBzdW1tYXJ5cnVudGltZS5QaW5uZXI6IGFyZ3VtZW50IGlzIG5vdCBh
IHBvaW50ZXI6IHJ1bnRpbWU6IHJlbGVhc2VTdWRvZyB3aXRoIG5vbi1uaWwgZ3Au
cGFyYW11bmtub3duIHJ1bm5hYmxlIGdvcm91dGluZSBkdXJpbmcgYm9vdHN0cmFw
cnVudGltZTogY2FzZnJvbV9Hc2NhbnN0YXR1cyBiYWQgb2xkdmFsIGdwPXJ1bnRp
bWU6c3RvcGxvY2tlZG06IGxvY2tlZGcgKGF0b21pY3N0YXR1cz1tZXRob2RWYWx1
ZUNhbGxGcmFtZU9ianMgaXMgbm90IGluIGEgbW9kdWxlcmVzZXQgb2Ygc3luY3Rl
c3QgdGltZXIgZnJvbSBvdXRzaWRlIGJ1YmJsZXN5bmN0ZXN0IHRpbWVyIGFjY2Vz
c2VkIGZyb20gb3V0c2lkZSBidWJibGVpbnRlcnJ1cHRlZCBzeXN0ZW0gY2FsbCBz
aG91bGQgYmUgcmVzdGFydGVkdGxzOiByZWNlaXZlZCB1bmV4cGVjdGVkIGtleSB1
cGRhdGUgbWVzc2FnZXRsczogbm8gc3VwcG9ydGVkIGVsbGlwdGljIGN1cnZlcyBm
b3IgRUNESEV0bHM6IHNlcnZlciBkaWQgbm90IHNlbGVjdCBhbiBBTFBOIHByb3Rv
Y29sdGxzOiBzZXJ2ZXIgc2VudCB1bnJlcXVlc3RlZCBzZXNzaW9uIHRpY2tldHRs
czogcmVjZWl2ZWQgbWFsZm9ybWVkIGtleV9zaGFyZSBleHRlbnNpb250bHM6IGlu
dmFsaWQgZWFybHkgZGF0YSBmb3IgUVVJQyBjb25uZWN0aW9udGxzOiBjbGllbnQn
cyBGaW5pc2hlZCBtZXNzYWdlIGlzIGluY29ycmVjdHg1MDk6IGZhaWxlZCB0byBw
YXJzZSBkbnNOYW1lIGNvbnN0cmFpbnQgJXFodHRwMjogY2xpZW50IGNvbm4gY291
bGQgbm90IGJlIGVzdGFibGlzaGVkbmV0L2h0dHA6IHRpbWVvdXQgYXdhaXRpbmcg
cmVzcG9uc2UgaGVhZGVyc2h0dHAyOiB1bmV4cGVjdGVkIEFMUE4gcHJvdG9jb2wg
JXE7IHdhbnQgJXFUcmFuc3BvcnQ6IHVuaGFuZGxlZCByZXNwb25zZSBmcmFtZSB0
eXBlICVURXJyb3IgZW5hYmxpbmcgVHJhbnNwb3J0IEhUVFAvMiBzdXBwb3J0OiAl
dnhtbDogaW52YWxpZCB0YWcgaW4gZmllbGQgJXMgb2YgdHlwZSAlczogJXF0cmFu
c2Zvcm06IGluY29uc2lzdGVudCBieXRlIGNvdW50IHJldHVybmVkZXhwbGljaXQg
dGltZSB0eXBlIGdpdmVuIHRvIG5vbi10aW1lIG1lbWJlcmNodW5rZWQgZW5jb2Rp
bmcgY29udGFpbnMgdG9vIG11Y2ggbm9uLWRhdGFpbXBsOiBwYWNrYWdlIG5hbWUg
bXVzdCBub3QgY29udGFpbiBzbGFzaGVzZWR3YXJkczI1NTE5OiBpbnZhbGlkIHBv
aW50IGVuY29kaW5nIGxlbmd0aFNlbmRpbmcgZW1haWwgdG8gd2ViaG9vayB3aXRo
IEFQSSBrZXk6ICVzLi4uZW5jb2RpbmcgYWxwaGFiZXQgY29udGFpbnMgbmV3bGlu
ZSBjaGFyYWN0ZXJlbmNvZGluZyBhbHBoYWJldCBpbmNsdWRlcyBkdXBsaWNhdGUg
c3ltYm9sc1Vua25vd24gbXVsdGlwYXJ0L21peGVkIG5lc3RlZCBtaW1lIHR5cGU6
ICVzbWltZTogdW5leHBlY3RlZCBjb250ZW50IGFmdGVyIG1lZGlhIHN1YnR5cGVt
dWx0MTI4Yml0UG93MTA6IHBvd2VyIG9mIDEwIGlzIG91dCBvZiByYW5nZSB1c2lu
ZyB2YWx1ZSBvYnRhaW5lZCB1c2luZyB1bmV4cG9ydGVkIGZpZWxkcmVmbGVjdDog
Y2FsbCBvZiBNYWtlRnVuYyB3aXRoIG5vbi1GdW5jIHR5cGVyZWZsZWN0OiBmdW5j
TGF5b3V0IHdpdGggaW50ZXJmYWNlIHJlY2VpdmVyIHJlZmxlY3Q6IGZ1bmN0aW9u
IGNyZWF0ZWQgYnkgTWFrZUZ1bmMgdXNpbmcgcmVmbGVjdDogc2xpY2UgbGVuZ3Ro
IG91dCBvZiByYW5nZSBpbiBTZXRMZW5zcGFuIG9uIHVzZXJBcmVuYS5mYXVsdExp
c3QgaGFzIGludmFsaWQgc2l6ZXNlbmQgb24gc3luY3Rlc3QgY2hhbm5lbCBmcm9t
IG91dHNpZGUgYnViYmxlcnVudGltZTogbGZzdGFjay5wdXNoIGludmFsaWQgcGFj
a2luZzogbm9kZT1vdXQgb2YgbWVtb3J5IGFsbG9jYXRpbmcgaGVhcCBhcmVuYSBt
ZXRhZGF0YXJ1bnRpbWU6IGNhbm5vdCByZW1hcCBwYWdlcyBpbiBhZGRyZXNzIHNw
YWNlL2NwdS9jbGFzc2VzL3NjYXZlbmdlL2JhY2tncm91bmQ6Y3B1LXNlY29uZHNy
dW50aW1lOiB1bmV4cGVjdGVkIG1ldHJpYyByZWdpc3RyYXRpb24gZm9yIGdjbWFy
a25ld29iamVjdCBjYWxsZWQgd2hpbGUgZG9pbmcgY2hlY2ttYXJrYWN0aXZlIHN3
ZWVwZXJzIGZvdW5kIGF0IHN0YXJ0IG9mIG1hcmsgcGhhc2VubyBQIGF2YWlsYWJs
ZSwgd3JpdGUgYmFycmllcnMgYXJlIGZvcmJpZGRlbmNhbm5vdCB0cmFjZSB1c2Vy
IGdvcm91dGluZSBvbiBpdHMgb3duIHN0YWNrdW5zYWZlLlNsaWNlOiBwdHIgaXMg
bmlsIGFuZCBsZW4gaXMgbm90IHplcm90bHM6IHNlcnZlcidzIEZpbmlzaGVkIG1l
c3NhZ2Ugd2FzIGluY29ycmVjdHRsczogc2VydmVyIHNlbnQgYW4gaW5jb3JyZWN0
IGxlZ2FjeSB2ZXJzaW9udGxzOiBpbnZhbGlkIHNlcnZlciBYMjU1MTlNTEtFTTc2
OCBrZXkgc2hhcmV0bHM6IGludmFsaWQgWDI1NTE5TUxLRU03Njggc2VydmVyIGtl
eSBzaGFyZXRsczogaW52YWxpZCBYMjU1MTlNTEtFTTc2OCBjbGllbnQga2V5IHNo
YXJlbXVsdGlwYXJ0OiBleHBlY3RpbmcgYSBuZXcgUGFydDsgZ290IGxpbmUgJXF4
NTA5OiBpbnZhbGlkIFJETlNlcXVlbmNlOiBpbnZhbGlkIGF0dHJpYnV0ZXg1MDk6
IGludGVybmFsIGVycm9yOiBjYW5ub3QgcGFyc2UgZG9tYWluICVxY3J5cHRvL3g1
MDk6IGVycm9yIGZldGNoaW5nIGludGVybWVkaWF0ZTogJXdodHRwOiBwdXRJZGxl
Q29ubjogdG9vIG1hbnkgaWRsZSBjb25uZWN0aW9uc2h0dHAyOiBjb3VsZCBub3Qg
bmVnb3RpYXRlIHByb3RvY29sIG11dHVhbGx5aHR0cDI6IGludmFsaWQgQ29ubmVj
dGlvbiByZXF1ZXN0IGhlYWRlcjogJXFodHRwMjogMXh4IGluZm9ybWF0aW9uYWwg
cmVzcG9uc2VzIHRvbyBsYXJnZWh0dHA6IFJlcXVlc3QuQ29udGVudExlbmd0aD0l
ZCB3aXRoIG5pbCBCb2R5Y29va2llamFyOiBtYWxmb3JtZWQgY29va2llIGRvbWFp
biBhdHRyaWJ1dGVpbnN1ZmZpY2llbnQgZGF0YSBmb3IgY2FsY3VsYXRlZCBsZW5n
dGggdHlwZWNpcGhlcjogTmV3R0NNIHJlcXVpcmVzIDEyOC1iaXQgYmxvY2sgY2lw
aGVyZWQyNTUxOTogYmFkIEVkMjU1MTlwaCBtZXNzYWdlIGhhc2ggbGVuZ3RoOiBj
cnlwdG8vc2hhMjU2OiBpbnZhbGlkIGhhc2ggc3RhdGUgaWRlbnRpZmllcmNyeXB0
by9zaGE1MTI6IGludmFsaWQgaGFzaCBzdGF0ZSBpZGVudGlmaWVyV2ViaG9vayBy
ZXR1cm5lZCBub24tMjAwIHN0YXR1czogJXMsIGJvZHk6ICVzYnVmaW8uU2Nhbm5l
cjogUmVhZCByZXR1cm5lZCBpbXBvc3NpYmxlIGNvdW50cmVmbGVjdDogbmlsIHR5
cGUgcGFzc2VkIHRvIFR5cGUuQXNzaWduYWJsZVRvcmVmbGVjdDogaW50ZXJuYWwg
ZXJyb3I6IGludmFsaWQgbWV0aG9kIGluZGV4dHJhbnNpdGlvbmluZyBHQyB0byB0
aGUgc2FtZSBzdGF0ZSBhcyBiZWZvcmU/cHJvZHVjZWQgYSB0cmlnZ2VyIGdyZWF0
ZXIgdGhhbiB0aGUgaGVhcCBnb2FsdHJpZWQgdG8gcnVuIHNjYXZlbmdlciBmcm9t
IGFub3RoZXIgZ29yb3V0aW5lcnVudGltZTogZmFpbGVkIG1TcGFuTGlzdC5yZW1v
dmUgc3Bhbi5ucGFnZXM9ZXhpdHN5c2NhbGw6IHN5c2NhbGwgZnJhbWUgaXMgbm8g
bG9uZ2VyIHZhbGlkdW5zYWZlLlN0cmluZzogcHRyIGlzIG5pbCBhbmQgbGVuIGlz
IG5vdCB6ZXJvY2Fubm90IHNlbmQgYWZ0ZXIgdHJhbnNwb3J0IGVuZHBvaW50IHNo
dXRkb3duV2FzIGV4cGVjdGluZyBSQ1BUIGFyZyBzeW50YXggb2YgVE86PGFkZHJl
c3M+dGxzOiBpbnRlcm5hbCBlcnJvcjogdW5leHBlY3RlZCByZW5lZ290aWF0aW9u
dGxzOiBpbnZhbGlkIHJlY29uc3RydWN0ZWQgaW5uZXIgY2xpZW50IGhlbGxvdGxz
OiBubyBzZXJ2ZXIgY2VydGlmaWNhdGVzIGluIGNsaWVudCBzZXNzaW9ueDUwOTog
SVAgY29uc3RyYWludCBjb250YWluZWQgaW52YWxpZCBtYXNrICV4eDUwOTogY2Vy
dGlmaWNhdGUgc2lnbmVkIGJ5IHVua25vd24gYXV0aG9yaXR5aHR0cDogcHV0SWRs
ZUNvbm46IGNvbm5lY3Rpb24gaXMgaW4gYmFkIHN0YXRlaHR0cDogbm8gQ2xpZW50
LlRyYW5zcG9ydCBvciBEZWZhdWx0VHJhbnNwb3J0aW52YWxpZCByZXF1ZXN0IDpw
YXRoICVxIGZyb20gVVJMLk9wYXF1ZSA9ICVxbmV0L2h0dHA6IGludGVybmFsIGVy
cm9yOiBjb25uQ291bnQgdW5kZXJmbG93aW52YWxpZCBzZXF1ZW5jZSAiLS0iIG5v
dCBhbGxvd2VkIGluIGNvbW1lbnRzY29udGV4dDogaW50ZXJuYWwgZXJyb3I6IG1p
c3NpbmcgY2FuY2VsIGVycm9ycGFyc2luZy9wYWNraW5nIG9mIHRoaXMgc2VjdGlv
biBoYXMgY29tcGxldGVkY3J5cHRvL3JzYTogbWVzc2FnZSB0b28gbG9uZyBmb3Ig
UlNBIGtleSBzaXplemVybyBsZW5ndGggZXhwbGljaXQgdGFnIHdhcyBub3QgYW4g
YXNuMS5GbGFnbWF0aC9iaWc6IGNhbm5vdCB1bm1hcnNoYWwgJXEgaW50byBhICpi
aWcuSW50dyBtdXN0IGJlIGF0IGxlYXN0IDIgYnkgdGhlIGRlZmluaXRpb24gb2Yg
TkFGY29tbWEtc2VwYXJhdGVkIGxpc3Qgb2Ygc3BhbSBrZXl3b3JkcyB0byBibG9j
a21haWw6IGludmFsaWQgSVAgYWRkcmVzcyBpbiBkb21haW4tbGl0ZXJhbDogJXFU
aW1lLlVubWFyc2hhbEpTT046IGlucHV0IGlzIG5vdCBhIEpTT04gc3RyaW5ncmVm
bGVjdDogbmlsIHR5cGUgcGFzc2VkIHRvIFR5cGUuQ29udmVydGlibGVUbyByZXR1
cm5lZCB2YWx1ZSBvYnRhaW5lZCBmcm9tIHVuZXhwb3J0ZWQgZmllbGRzbGljZSBi
b3VuZHMgb3V0IG9mIHJhbmdlIFs6JXhdIHdpdGggbGVuZ3RoICV5cGFuaWN3cmFw
OiB1bmV4cGVjdGVkIHN0cmluZyBhZnRlciB0eXBlIG5hbWU6IG1lbW9yeSByZXNl
cnZhdGlvbiBleGNlZWRzIGFkZHJlc3Mgc3BhY2UgbGltaXR0cmllZCB0byBwYXJr
IHNjYXZlbmdlciBmcm9tIGFub3RoZXIgZ29yb3V0aW5lcmVsZWFzZWQgbGVzcyB0
aGFuIG9uZSBwaHlzaWNhbCBwYWdlIG9mIG1lbW9yeXN5c0dyb3cgYm91bmRzIG5v
dCBhbGlnbmVkIHRvIHBhbGxvY0NodW5rQnl0ZXNydW50aW1lOiBmYWlsZWQgdG8g
Y3JlYXRlIG5ldyBPUyB0aHJlYWQgKGhhdmUgcnVudGltZTogcGFuaWMgYmVmb3Jl
IG1hbGxvYyBoZWFwIGluaXRpYWxpemVkCnN0b3BUaGVXb3JsZDogbm90IHN0b3Bw
ZWQgKHN0YXR1cyAhPSBfUGdjc3RvcClzZWxlY3Qgb24gc3luY3Rlc3QgY2hhbm5l
bCBmcm9tIG91dHNpZGUgYnViYmxlcnVudGltZTogbmFtZSBvZmZzZXQgYmFzZSBw
b2ludGVyIG91dCBvZiByYW5nZXJ1bnRpbWU6IHR5cGUgb2Zmc2V0IGJhc2UgcG9p
bnRlciBvdXQgb2YgcmFuZ2VydW50aW1lOiB0ZXh0IG9mZnNldCBiYXNlIHBvaW50
ZXIgb3V0IG9mIHJhbmdlR28gYWhlYWQuIEVuZCB5b3VyIGRhdGEgd2l0aCA8Q1I+
PExGPi48Q1I+PExGPlBTU1dpdGhTSEEyNTZQU1NXaXRoU0hBMzg0UFNTV2l0aFNI
QTUxMkVkMjU1MTl0bHM6IHNlcnZlciBjaG9zZSBhbiB1bmNvbmZpZ3VyZWQgY2lw
aGVyIHN1aXRldGxzOiBmYWlsZWQgdG8gcGFyc2UgY2VydGlmaWNhdGUgZnJvbSBz
ZXJ2ZXI6IHRsczogc2VydmVyIGRpZCBub3QgZWNobyB0aGUgbGVnYWN5IHNlc3Np
b24gSUR0bHM6IHNlcnZlciBhY2NlcHRlZCAwLVJUVCB3aXRoIHRoZSB3cm9uZyBB
TFBOdGxzOiByZWNlaXZlZCBuZXcgc2Vzc2lvbiB0aWNrZXQgZnJvbSBhIGNsaWVu
dGJ5dGVzLlJlYWRlci5VbnJlYWRCeXRlOiBhdCBiZWdpbm5pbmcgb2Ygc2xpY2V4
NTA5OiBmYWlsZWQgdG8gdW5tYXJzaGFsIGVsbGlwdGljIGN1cnZlIHBvaW50eDUw
OTogZmFpbGVkIHRvIHBhcnNlIHJmYzgyMk5hbWUgY29uc3RyYWludCAlcXg1MDk6
IG1hbGZvcm1lZCBzaWduYXR1cmUgYWxnb3JpdGhtIGlkZW50aWZpZXJodHRwMjog
VHJhbnNwb3J0IGNyZWF0aW5nIGNsaWVudCBjb25uICVwIHRvICV2cHJvdG9jb2wg
ZXJyb3I6IHJlY2VpdmVkIERBVEEgYWZ0ZXIgRU5EX1NUUkVBTW5ldC9odHRwOiBp
bnRlcm5hbCBlcnJvcjogbWlzdXNlIG9mIHRyeURlbGl2ZXJmaXJzdCBwYXRoIHNl
Z21lbnQgaW4gVVJMIGNhbm5vdCBjb250YWluIGNvbG9udW5xdW90ZWQgb3IgbWlz
c2luZyBhdHRyaWJ1dGUgdmFsdWUgaW4gZWxlbWVudGNvb2tpZWphcjogaW50ZXJu
YWwgZXJyb3IgaW4gcHVueWNvZGUgZW5jb2RpbmdpbnZhcmlhbnQgZmFpbGVkOiBn
cm93dGhMZWZ0IGlzIHVuZXhwZWN0ZWRseSAwY2lwaGVyLk5ld0NUUjogSVYgbGVu
Z3RoIG11c3QgZXF1YWwgYmxvY2sgc2l6ZW1hdGgvYmlnOiBtaXNtYXRjaGVkIG1v
bnRnb21lcnkgbnVtYmVyIGxlbmd0aHNlZDI1NTE5OiBpbnRlcm5hbCBlcnJvcjog
c2V0dGluZyBzY2FsYXIgZmFpbGVkZWR3YXJkczI1NTE5OiBpbnZhbGlkIGZpZWxk
IGVsZW1lbnQgaW5wdXQgc2l6ZW1heGltdW0gYXR0YWNobWVudCBzaXplIGluIGJ5
dGVzIChkZWZhdWx0IDEwTUIpYnVmaW86IHJlYWRlciByZXR1cm5lZCBuZWdhdGl2
ZSBjb3VudCBmcm9tIFJlYWR1bmV4cGVjdGVkIGVycm9yIHdyYXBwaW5nIHBvbGwu
RXJyRmlsZUNsb3Npbmc6IHJlZmxlY3QuVmFsdWUuQnl0ZXMgb2YgdW5hZGRyZXNz
YWJsZSBieXRlIGFycmF5cmVmbGVjdDogQ2FsbFNsaWNlIHdpdGggdG9vIGZldyBp
bnB1dCBhcmd1bWVudHNyZWdpc3Rlci1iYXNlZCByZXR1cm4gdmFsdWUgaGFzIHN0
YWNrIGNvbXBvbmVudHNsaWNlIGJvdW5kcyBvdXQgb2YgcmFuZ2UgWzo6JXhdIHdp
dGggbGVuZ3RoICV5cmVjZWl2ZSBvbiBzeW5jdGVzdCBjaGFubmVsIGZyb20gb3V0
c2lkZSBidWJibGVydW50aW1lwrdsb2NrOiBzbGVlcGluZyB3aGlsZSBsb2NrIGlz
IGF2YWlsYWJsZVAgaGFzIGNhY2hlZCBHQyB3b3JrIGF0IGVuZCBvZiBtYXJrIHRl
cm1pbmF0aW9uZmFpbGVkIHRvIGFjcXVpcmUgbG9jayB0byBzdGFydCBhIEdDIHRy
YW5zaXRpb25maW5pc2hHQ1RyYW5zaXRpb24gY2FsbGVkIHdpdGhvdXQgc3RhcnRp
bmcgb25lP3RyaWVkIHRvIHNsZWVwIHNjYXZlbmdlciBmcm9tIGFub3RoZXIgZ29y
b3V0aW5lcmFjeSBzdWRvZyBhZGp1c3RtZW50IGR1ZSB0byBwYXJraW5nIG9uIGNo
YW5uZWxmdW5jdGlvbiBzeW1ib2wgdGFibGUgbm90IHNvcnRlZCBieSBQQyBvZmZz
ZXQ6IGF0dGVtcHRlZCB0byB0cmFjZSBhIGJhZCBzdGF0dXMgZm9yIGEgZ29yb3V0
aW5lYXR0ZW1wdGluZyB0byBsaW5rIGluIHRvbyBtYW55IHNoYXJlZCBsaWJyYXJp
ZXNXYXMgZXhwZWN0aW5nIE1BSUwgYXJnIHN5bnRheCBvZiBGUk9NOjxhZGRyZXNz
PnRsczogbWFsZm9ybWVkIGVuY3J5cHRlZF9jbGllbnRfaGVsbG8gZXh0ZW5zaW9u
Zmlyc3QgcmVjb3JkIGRvZXMgbm90IGxvb2sgbGlrZSBhIFRMUyBoYW5kc2hha2V0
bHM6IGluY29ycmVjdCByZW5lZ290aWF0aW9uIGV4dGVuc2lvbiBjb250ZW50c3Rs
czogc2VydmVyIHNlbGVjdGVkIHVuYWR2ZXJ0aXNlZCBBTFBOIHByb3RvY29sdGxz
OiBpbnRlcm5hbCBlcnJvcjogcHNrQmluZGVycyBsZW5ndGggbWlzbWF0Y2h0bHM6
IHNlcnZlciBzZWxlY3RlZCBUTFMgMS4zIGluIGEgcmVuZWdvdGlhdGlvbnRsczog
bWFsZm9ybWVkIGVuY3J5cHRlZCBjbGllbnQgaGVsbG8gZXh0ZW5zaW9udGxzOiBz
ZXJ2ZXIgc2VudCB0d28gSGVsbG9SZXRyeVJlcXVlc3QgbWVzc2FnZXN4NTA5OiBt
YWxmb3JtZWQgcHVibGljIGtleSBhbGdvcml0aG0gaWRlbnRpZmllcng1MDk6IGlu
dGVybmFsIGVycm9yOiBJUCBTQU4gJXggZmFpbGVkIHRvIHBhcnNlaHR0cDogc2Vy
dmVyIGdhdmUgSFRUUCByZXNwb25zZSB0byBIVFRQUyBjbGllbnRmbG93IGNvbnRy
b2wgdXBkYXRlIGV4Y2VlZHMgbWF4aW11bSB3aW5kb3cgc2l6ZTF4eCBpbmZvcm1h
dGlvbmFsIHJlc3BvbnNlIHdpdGggRU5EX1NUUkVBTSBmbGFncHJvdG9jb2wgZXJy
b3I6IHJlY2VpdmVkIERBVEEgb24gYSBIRUFEIHJlcXVlc3RjaGFjaGEyMHBvbHkx
MzA1OiBtZXNzYWdlIGF1dGhlbnRpY2F0aW9uIGZhaWxlZGNyeXB0by9lY2RoOiBw
dWJsaWMga2V5IGlzIHRoZSBpZGVudGl0eSBlbGVtZW50YXNuMTogVW5tYXJzaGFs
IHJlY2lwaWVudCB2YWx1ZSBpcyBub24tcG9pbnRlciBleHBsaWNpdCBzdHJpbmcg
dHlwZSBnaXZlbiB0byBub24tc3RyaW5nIG1lbWJlcmJpZ21vZDogbW9kdWx1cyBm
b3IgRXhwU2hvcnRWYXJUaW1lIG11c3QgYmUgb2RkYnVmaW86IHdyaXRlciByZXR1
cm5lZCBuZWdhdGl2ZSBjb3VudCBmcm9tIFdyaXRlc3RyY29udjogaWxsZWdhbCBB
cHBlbmRGbG9hdC9Gb3JtYXRGbG9hdCBiaXRTaXplbm90IGVub3VnaCBzaWduaWZp
Y2FudCBiaXRzIGFmdGVyIG11bHQ2NGJpdFBvdzEwcmVmbGVjdDogQ2FsbFNsaWNl
IHdpdGggdG9vIG1hbnkgaW5wdXQgYXJndW1lbnRzc2xpY2UgYm91bmRzIG91dCBv
ZiByYW5nZSBbOiV4XSB3aXRoIGNhcGFjaXR5ICV5cnVudGltZTogY2Fubm90IG1h
cCBwYWdlcyBpbiBhcmVuYSBhZGRyZXNzIHNwYWNlcnVudGltZTogbWFsZm9ybWVk
IHByb2ZCdWYgYnVmZmVyIC0gaW52YWxpZCBzaXplYXR0ZW1wdCB0byB0cmFjZSBp
bnZhbGlkIG9yIHVuc3VwcG9ydGVkIFAgc3RhdHVzdW5hYmxlIHRvIGdlbmVyYXRl
IHJhbmRvbSBzZXNzaW9uIHRpY2tldCBrZXk6ICV2ZmFpbGVkIHRvIHBhcnNlIGNl
cnRpZmljYXRlICMlZCBpbiB0aGUgY2hhaW46ICV3dGxzOiBubyBGSVBTIGNvbXBh
dGlibGUgY2VydGlmaWNhdGUgY2hhaW5zIGZvdW5kdGxzOiBubyBzdXBwb3J0ZWQg
c3ltbWV0cmljIGNpcGhlcnN1aXRlcyBmb3IgRUNIdGxzOiBpbnZhbGlkIEVuY3J5
cHRlZENsaWVudEhlbGxvS2V5cyBDb25maWc6ICVzdGxzOiBDdXJ2ZVByZWZlcmVu
Y2VzIGluY2x1ZGVzIHVuc3VwcG9ydGVkIGN1cnZleDUwOTogWDI1NTE5IGtleSBl
bmNvZGVkIHdpdGggaWxsZWdhbCBwYXJhbWV0ZXJzeDUwOTogU0FOIHVuaWZvcm1S
ZXNvdXJjZUlkZW50aWZpZXIgaXMgbWFsZm9ybWVkeDUwOTogSVAgY29uc3RyYWlu
dCBjb250YWluZWQgdmFsdWUgb2YgbGVuZ3RoICVkeDUwOTogaW50ZXJuYWwgZXJy
b3I6IGNhbm5vdCBwYXJzZSBjb25zdHJhaW50ICVxeDUwOTogaW50ZXJuYWwgZXJy
b3I6IFVSSSBTQU4gJXEgZmFpbGVkIHRvIHBhcnNlbmV0L2h0dHA6IGV4dGVuZGVk
IGNvbm5lY3Qgbm90IHN1cHBvcnRlZCBieSBwZWVyeG1sOiBlbmQgdGFnIDwvJXM+
IGRvZXMgbm90IG1hdGNoIHN0YXJ0IHRhZyA8JXM+Q2hhcnNldFJlYWRlciByZXR1
cm5lZCBhIG5pbCBSZWFkZXIgZm9yIGNoYXJzZXQgcGFyc2luZy9wYWNraW5nIG9m
IHRoaXMgdHlwZSBpc24ndCBhdmFpbGFibGUgeWV0b3V0IHBvaW50cyB0byBiaWcu
SW50LCBidXQgZGVmYXVsdFZhbHVlIGRvZXMgbm90c3RyaW5ncy5SZWFkZXIuVW5y
ZWFkQnl0ZTogYXQgYmVnaW5uaW5nIG9mIHN0cmluZ3N0cmluZ3MuUmVhZGVyLldy
aXRlVG86IGludmFsaWQgV3JpdGVTdHJpbmcgY291bnRub3QgZW5vdWdoIHNpZ25p
ZmljYW50IGJpdHMgYWZ0ZXIgbXVsdDEyOGJpdFBvdzEwc2xpY2UgYm91bmRzIG91
dCBvZiByYW5nZSBbOjoleF0gd2l0aCBjYXBhY2l0eSAleWludmFsaWQgbWVtb3J5
IGFkZHJlc3Mgb3IgbmlsIHBvaW50ZXIgZGVyZWZlcmVuY2VwYW5pY3dyYXA6IHVu
ZXhwZWN0ZWQgc3RyaW5nIGFmdGVyIHBhY2thZ2UgbmFtZTogcy5hbGxvY0NvdW50
ICE9IHMubmVsZW1zICYmIGZyZWVJbmRleCA9PSBzLm5lbGVtc3J1bnRpbWUucmVm
bGVjdF9tYWtlbWFwOiB1bnN1cHBvcnRlZCBtYXAga2V5IHR5cGVzd2VlcGVyIGxl
ZnQgb3V0c3RhbmRpbmcgYWNyb3NzIHN3ZWVwIGdlbmVyYXRpb25zZnVsbHkgZW1w
dHkgdW5mcmVlZCBzcGFuIHNldCBibG9jayBmb3VuZCBpbiByZXNldGNhc2dzdGF0
dXM6IHdhaXRpbmcgZm9yIEd3YWl0aW5nIGJ1dCBpcyBHcnVubmFibGVpbnZhbGlk
IG9yIGluY29tcGxldGUgbXVsdGlieXRlIG9yIHdpZGUgY2hhcmFjdGVyY3J5cHRv
L3RsczogRXhwb3J0S2V5aW5nTWF0ZXJpYWwgY29udGV4dCB0b28gbG9uZ3Rsczog
c2VydmVyIGFkdmVydGlzZWQgdW5yZXF1ZXN0ZWQgQUxQTiBleHRlbnNpb250bHM6
IHNlcnZlciBzZW50IGEgY29va2llIGluIGEgbm9ybWFsIFNlcnZlckhlbGxvdGxz
OiBjbGllbnQgb2ZmZXJlZCBvbmx5IHVuc3VwcG9ydGVkIHZlcnNpb25zOiAleHRs
czogY2xpZW50IHVzaW5nIGluYXBwcm9wcmlhdGUgcHJvdG9jb2wgZmFsbGJhY2t0
bHM6IGNsaWVudCBpbGxlZ2FsbHkgbW9kaWZpZWQgc2Vjb25kIENsaWVudEhlbGxv
L2V0Yy9wa2kvY2EtdHJ1c3QvZXh0cmFjdGVkL3BlbS90bHMtY2EtYnVuZGxlLnBl
bXg1MDk6IGludmFsaWQgUkROU2VxdWVuY2U6IGludmFsaWQgYXR0cmlidXRlIHR5
cGV4NTA5OiBFZDI1NTE5IGtleSBlbmNvZGVkIHdpdGggaWxsZWdhbCBwYXJhbWV0
ZXJzIChDbGllbnQuVGltZW91dCBleGNlZWRlZCB3aGlsZSBhd2FpdGluZyBoZWFk
ZXJzKW5ldC9odHRwOiBUcmFuc3BvcnQuRGlhbCBob29rIHJldHVybmVkIChuaWws
IG5pbCl0aGUgOjogbXVzdCBleHBhbmQgdG8gYXQgbGVhc3Qgb25lIGZpZWxkIG9m
IHplcm9zZWNkc2E6IGludGVybmFsIGVycm9yOiB0cnVuY2F0ZWQgaGFzaCBpcyB0
b28gbG9uZ2NyeXB0by9lbGxpcHRpYzogaW50ZXJuYWwgZXJyb3I6IGludmFsaWQg
ZW5jb2RpbmdjaGFjaGEyMHBvbHkxMzA1OiBiYWQgbm9uY2UgbGVuZ3RoIHBhc3Nl
ZCB0byBTZWFsY2hhY2hhMjBwb2x5MTMwNTogYmFkIG5vbmNlIGxlbmd0aCBwYXNz
ZWQgdG8gT3BlbmNyeXB0by9yc2E6IHB1YmxpYyBleHBvbmVudCB0b28gc21hbGwg
b3IgbmVnYXRpdmVjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiBibGFja2xpc3RlZCBz
ZW5kZXIgZG9tYWluc2dvLXJlc3R5LzIuMy4wIChodHRwczovL2dpdGh1Yi5jb20v
Z28tcmVzdHkvcmVzdHkpbXVsdGlwYXJ0IGNvbnRlbnQgaXMgbm90IGFsbG93ZWQg
aW4gSFRUUCB2ZXJiIFsldl1tYWxsb2NnYyBjYWxsZWQgd2l0aCBnY3BoYXNlID09
IF9HQ21hcmt0ZXJtaW5hdGlvbnJ1bnRpbWUuUGlubmVyOiBvYmplY3Qgd2FzIGFs
bG9jYXRlZCBpbnRvIGFuIGFyZW5hcnVudGltZS5QaW5uZXI6IGRlY3JlYXNlZCBu
b24tZXhpc3RpbmcgcGluIGNvdW50ZXJyZWN1cnNpdmUgY2FsbCBkdXJpbmcgaW5p
dGlhbGl6YXRpb24gLSBsaW5rZXIgc2tld2F0dGVtcHQgdG8gZXhlY3V0ZSBzeXN0
ZW0gc3RhY2sgY29kZSBvbiB1c2VyIHN0YWNrY3J5cHRvYnl0ZTogYXR0ZW1wdGVk
IHdyaXRlIHdoaWxlIGNoaWxkIGlzIHBlbmRpbmd0bHM6IHJlY2VpdmVkIHVuZXhw
ZWN0ZWQgQ2VydGlmaWNhdGVTdGF0dXMgbWVzc2FnZXRsczogaW52YWxpZCBzaWdu
YXR1cmUgYnkgdGhlIHNlcnZlciBjZXJ0aWZpY2F0ZTogdGxzOiBpbnZhbGlkIHNp
Z25hdHVyZSBieSB0aGUgY2xpZW50IGNlcnRpZmljYXRlOiB0bHM6IGNsaWVudCBv
ZmZlcmVkIFRMUyB2ZXJzaW9uIG9sZGVyIHRoYW4gVExTIDEuM3g1MDk6IG1pc3Np
bmcgQVNOLjEgY29udGVudHM7IHVzZSBQYXJzZUNlcnRpZmljYXRleDUwOTogaW52
YWxpZCBSRE5TZXF1ZW5jZTogaW52YWxpZCBhdHRyaWJ1dGUgdmFsdWV4NTA5OiBS
U0EgcHVibGljIGV4cG9uZW50IGlzIG5vdCBhIHBvc2l0aXZlIG51bWJlcm5ldC9o
dHRwOiBjYW5ub3QgcmV3aW5kIGJvZHkgYWZ0ZXIgY29ubmVjdGlvbiBsb3NzaHR0
cDogcHV0SWRsZUNvbm46IENsb3NlSWRsZUNvbm5lY3Rpb25zIHdhcyBjYWxsZWRn
b3QgQ09OVElOVUFUSU9OIGZvciBzdHJlYW0gJWQ7IGV4cGVjdGVkIHN0cmVhbSAl
ZGh0dHA6IHN1c3BpY2lvdXNseSBsb25nIHRyYWlsZXIgYWZ0ZXIgY2h1bmtlZCBi
b2R5bmV0L2h0dHA6IFRyYW5zcG9ydCBmYWlsZWQgdG8gcmVhZCBmcm9tIHNlcnZl
cjogJXZuZXQvaHR0cDogSFRUUC8xLnggdHJhbnNwb3J0IGNvbm5lY3Rpb24gYnJv
a2VuOiAld2NyeXB0by9lbGxpcHRpYzogbmlzdGVjIHJlamVjdGVkIG5vcm1hbGl6
ZWQgc2NhbGFyY3J5cHRvL2NpcGhlcjogaW5jb3JyZWN0IG5vbmNlIGxlbmd0aCBn
aXZlbiB0byBHQ01jaGFjaGEyMDogU2V0Q291bnRlciBhdHRlbXB0ZWQgdG8gcm9s
bGJhY2sgY291bnRlcmNyeXB0by9lY2RoOiBwdWJsaWMga2V5IGRvZXMgbm90IG1h
dGNoIHByaXZhdGUga2V5ZWR3YXJkczI1NTE5OiBpbnZhbGlkIFNldFVuaWZvcm1C
eXRlcyBpbnB1dCBsZW5ndGhDYW4ndCBwcm9jZXNzIG11bHRpcGFydC9yZWxhdGVk
IGlubmVyIG1pbWUgdHlwZTogJXNsaW1pdGVyRXZlbnQuc3RvcDogaW52YWxpZCBs
aW1pdGVyIGV2ZW50IHR5cGUgZm91bmRwb3RlbnRpYWxseSBvdmVybGFwcGluZyBp
bi11c2UgYWxsb2NhdGlvbnMgZGV0ZWN0ZWRmYXRhbDogc3lzdGVtc3RhY2sgY2Fs
bGVkIGZyb20gdW5leHBlY3RlZCBnb3JvdXRpbmVnb2RlYnVnOiBWYWx1ZSBvZiBu
YW1lIG5vdCBsaXN0ZWQgaW4gZ29kZWJ1Z3MuQWxsOiBjcnlwdG8vdGxzOiByZXNl
cnZlZCBFeHBvcnRLZXlpbmdNYXRlcmlhbCBsYWJlbDogJXN0bHM6IHNlcnZlcidz
IGlkZW50aXR5IGNoYW5nZWQgZHVyaW5nIHJlbmVnb3RpYXRpb250bHM6IHNlcnZl
ciBzZWxlY3RlZCB1bnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3JtYXR0bHM6IHNl
cnZlciBzZW50IGFuIHVuZXhwZWN0ZWQgZWFybHlfZGF0YSBleHRlbnNpb250bHM6
IGNsaWVudCBkaWQgbm90IHJlcXVlc3QgYW4gYXBwbGljYXRpb24gcHJvdG9jb2x4
NTA5OiBjZXJ0aWZpY2F0ZSBoYXMgZXhwaXJlZCBvciBpcyBub3QgeWV0IHZhbGlk
OiBKU09OIGRlY29kZXIgb3V0IG9mIHN5bmMgLSBkYXRhIGNoYW5naW5nIHVuZGVy
Zm9vdD9odHRwMjogaW52YWxpZCBUcmFuc2Zlci1FbmNvZGluZyByZXF1ZXN0IGhl
YWRlcjogJXFwcm90b2NvbCBlcnJvcjogcmVjZWl2ZWQgJVQgYmVmb3JlIGEgU0VU
VElOR1MgZnJhbWVodHRwOiBUcmFuc3BvcnQgZG9lcyBub3Qgc3VwcG9ydCB1bmVu
Y3J5cHRlZCBIVFRQLzJjcnlwdG8vZWxsaXB0aWM6IEFkZCB3YXMgY2FsbGVkIG9u
IGFuIGludmFsaWQgcG9pbnRlY2RzYTogaW50ZXJuYWwgZXJyb3I6IHJlcXVlc3Qg
c2l6ZSBleGNlZWRzIG1heGltdW1jcnlwdG8vZWNkaDogaW50ZXJuYWwgZXJyb3I6
IGlzTGVzcyBpbnB1dCB0b28gbGFyZ2VlcnJvcnM6ICp0YXJnZXQgbXVzdCBiZSBp
bnRlcmZhY2Ugb3IgaW1wbGVtZW50IGVycm9ycnVudGltZTogY2Fubm90IGRpc2Fi
bGUgcGVybWlzc2lvbnMgaW4gYWRkcmVzcyBzcGFjZXJ1bnRpbWUuU2V0RmluYWxp
emVyOiBwb2ludGVyIG5vdCBpbiBhbGxvY2F0ZWQgYmxvY2tydW50aW1lOiB1c2Ug
b2YgRml4QWxsb2NfQWxsb2MgYmVmb3JlIEZpeEFsbG9jX0luaXQKc3BhbiBzZXQg
YmxvY2sgd2l0aCB1bnBvcHBlZCBlbGVtZW50cyBmb3VuZCBpbiByZXNldGNhc2Zy
b21fR3NjYW5zdGF0dXM6IGdwLT5zdGF0dXMgaXMgbm90IGluIHNjYW4gc3RhdGVF
cnJvcjogdHJhbnNhY3Rpb24gZmFpbGVkLCBibGFtZSBpdCBvbiB0aGUgd2VhdGhl
cjogdGxzOiBpbnZhbGlkIEVuY3J5cHRlZENsaWVudEhlbGxvS2V5cyBQcml2YXRl
S2V5OiAlc3Rsczogc2VydmVyIHNlbGVjdGVkIHVuc3VwcG9ydGVkIHByb3RvY29s
IHZlcnNpb24gJXh0bHM6IHJlY2VpdmVkIGEgc2Vzc2lvbiB0aWNrZXQgd2l0aCBp
bnZhbGlkIGxpZmV0aW1ldGxzOiBpbnRlcm5hbCBlcnJvcjogc2Vzc2lvbiB0aWNr
ZXQga2V5cyB1bmF2YWlsYWJsZXg1MDk6IGNhbm5vdCB2ZXJpZnkgc2lnbmF0dXJl
OiBpbnNlY3VyZSBhbGdvcml0aG0gJXZodHRwMjogVHJhbnNwb3J0IHJlYWRGcmFt
ZSBlcnJvciBvbiBjb25uICVwOiAoJVQpICV2cHJvdG9jb2wgZXJyb3I6IHJlY2Vp
dmVkIERBVEEgYmVmb3JlIGEgSEVBREVSUyBmcmFtZXhtbDogRW5jb2RlRWxlbWVu
dCBvZiBTdGFydEVsZW1lbnQgd2l0aCBtaXNzaW5nIG5hbWVlY2RzYTogaW50ZXJu
YWwgZXJyb3I6IHVuZXhwZWN0ZWRseSBtYXNraW5nIG9mZiBiaXRzKD9pOihhcHBs
aWNhdGlvbnx0ZXh0KS8oanNvbnwuKlwranNvbnxqc29uXC0uKikoO3wkKSlidWZp
by5TY2FuOiB0b28gbWFueSBlbXB0eSB0b2tlbnMgd2l0aG91dCBwcm9ncmVzc2lu
Z3JlZmxlY3Q6IG5vbi1pbnRlcmZhY2UgdHlwZSBwYXNzZWQgdG8gVHlwZS5JbXBs
ZW1lbnRzbm9uLWNvbmN1cnJlbnQgc3dlZXAgZmFpbGVkIHRvIGRyYWluIGFsbCBz
d2VlcCBxdWV1ZXNleGl0ZWQgYSBnb3JvdXRpbmUgaW50ZXJuYWxseSBsb2NrZWQg
dG8gdGhlIE9TIHRocmVhZHRsczogdW5hYmxlIHRvIGdlbmVyYXRlIHJhbmRvbSBz
ZXNzaW9uIHRpY2tldCBrZXk6ICV2dGxzOiByZWNlaXZlZCB1bmV4cGVjdGVkIGhh
bmRzaGFrZSBtZXNzYWdlIG9mIHR5cGUgJVR0bHM6IHVuZXhwZWN0ZWQgc2VydmVy
X25hbWUgZXh0ZW5zaW9uIGluIHNlcnZlciBoZWxsb3RsczogY2xpZW50IGRvZXMg
bm90IHN1cHBvcnQgdW5jb21wcmVzc2VkIGNvbm5lY3Rpb25zeDUwOTogY2VydGlm
aWNhdGUgc3BlY2lmaWVzIGFuIGluY29tcGF0aWJsZSBrZXkgdXNhZ2VodHRwOiBw
dXRJZGxlQ29ubjogdG9vIG1hbnkgaWRsZSBjb25uZWN0aW9ucyBmb3IgaG9zdGh0
dHAyOiBGcmFtZXIgJXA6IGZhaWxlZCB0byBkZWNvZGUganVzdC13cml0dGVuIGZy
YW1laWxsZWdhbCB1c2Ugb2YgQWxsb3dJbGxlZ2FsUmVhZHMgd2l0aCBSZWFkTWV0
YUhlYWRlcnNodHRwMjogVHJhbnNwb3J0IGZhaWxlZCB0byBnZXQgY2xpZW50IGNv
bm4gZm9yICVzOiAldnhtbDogJXMuTWFyc2hhbFhNTCB3cm90ZSBpbnZhbGlkIFhN
TDogPCVzPiBub3QgY2xvc2Vkc21hbGwgbWFwIHdpdGggbm8gZW1wdHkgc2xvdCAo
Y29uY3VycmVudCBtYXAgd3JpdGVzPyljcnlwdG8vZWxsaXB0aWM6IGF0dGVtcHRl
ZCBvcGVyYXRpb24gb24gaW52YWxpZCBwb2ludGNoYWNoYTIwOiBpbnRlcm5hbCBl
cnJvcjogd3JvbmcgZHN0IGFuZC9vciBzcmMgbGVuZ3RoY3J5cHRvL2VjZGg6IGlu
dGVybmFsIGVycm9yOiBtaXNtYXRjaGVkIGlzTGVzcyBpbnB1dHNVc2luZyBCYXNp
YyBBdXRoIGluIEhUVFAgbW9kZSBpcyBub3Qgc2VjdXJlLCB1c2UgSFRUUFNCT0RZ
ICAgICAgICAgOgoqKioqKiBSRVNQT05TRSBXUklUVEVOIElOVE8gRklMRSAqKioq
KgpwYW5pYyBjYWxsaW5nIFN0cmluZyBtZXRob2Qgb24gemVybyAldiBmb3IgZmxh
ZyAlczogJXZydW50aW1lLm0gbWVtb3J5IGFsaWdubWVudCB0b28gc21hbGwgZm9y
IHNwaW5iaXQgbXV0ZXhtaW4gc2l6ZSBvZiBtYWxsb2MgaGVhZGVyIGlzIG5vdCBh
IHNpemUgY2xhc3MgYm91bmRhcnlnY0NvbnRyb2xsZXJTdGF0ZS5maW5kUnVubmFi
bGU6IGJsYWNrZW5pbmcgbm90IGVuYWJsZWRjYXNHVG9XYWl0aW5nRm9yR0Mgd2l0
aCBub24taXNXYWl0aW5nRm9yR0Mgd2FpdCByZWFzb25ubyBnb3JvdXRpbmVzICht
YWluIGNhbGxlZCBydW50aW1lLkdvZXhpdCkgLSBkZWFkbG9jayF0cmFjZTogbm9u
LWVtcHR5IGZ1bGwgdHJhY2UgYnVmZmVyIGZvciBkb25lIGdlbmVyYXRpb250cmFj
ZTogbm9uLWVtcHR5IGZ1bGwgdHJhY2UgYnVmZmVyIGZvciBuZXh0IGdlbmVyYXRp
b24JZ29yb3V0aW5lIHJ1bm5pbmcgb24gb3RoZXIgdGhyZWFkOyBzdGFjayB1bmF2
YWlsYWJsZQpjZXJ0aWZpY2F0ZSBpcyBub3QgdmFsaWQgZm9yIHJlcXVlc3RlZCBz
ZXJ2ZXIgbmFtZTogJXdjcnlwdG9ieXRlOiBCdWlsZGVyIGlzIGV4Y2VlZGluZyBp
dHMgZml4ZWQtc2l6ZSBidWZmZXJ0bHM6IHNlcnZlciByZXN1bWVkIGEgc2Vzc2lv
biB3aXRoIGEgZGlmZmVyZW50IHZlcnNpb250bHM6IHNlcnZlciBhY2NlcHRlZCAw
LVJUVCB3aXRoIHRoZSB3cm9uZyBjaXBoZXIgc3VpdGV0bHM6IGNlcnRpZmljYXRl
IHVzZWQgd2l0aCBpbnZhbGlkIHNpZ25hdHVyZSBhbGdvcml0aG10bHM6IEVuY3J5
cHRlZCBDbGllbnQgSGVsbG8gY2Fubm90IGJlIHVzZWQgcHJlLVRMUyAxLjN0bHM6
IGNsaWVudCBpbmRpY2F0ZWQgZWFybHkgZGF0YSBpbiBzZWNvbmQgQ2xpZW50SGVs
bG90bHM6IGZhaWxlZCB0byBjcmVhdGUgY2lwaGVyIHdoaWxlIGVuY3J5cHRpbmcg
dGlja2V0OiBieXRlcy5CdWZmZXI6IHJlYWRlciByZXR1cm5lZCBuZWdhdGl2ZSBj
b3VudCBmcm9tIFJlYWRxdW90ZWRwcmludGFibGU6IGludmFsaWQgdW5lc2NhcGVk
IGJ5dGUgMHglMDJ4IGluIGJvZHl4NTA5OiBjYW5ub3QgdmVyaWZ5IHNpZ25hdHVy
ZTogYWxnb3JpdGhtIHVuaW1wbGVtZW50ZWR4NTA5OiBpbnZhbGlkIFJETlNlcXVl
bmNlOiBpbnZhbGlkIGF0dHJpYnV0ZSB2YWx1ZTogJXNVUkkgd2l0aCBJUCAoJXEp
IGNhbm5vdCBiZSBtYXRjaGVkIGFnYWluc3QgY29uc3RyYWludHNodHRwOiBSZXF1
ZXN0LldyaXRlIG9uIFJlcXVlc3Qgd2l0aCBubyBIb3N0IG9yIFVSTCBzZXRyZWFk
IGxvb3AgZW5kaW5nOyBjYWxsZXIgb3ducyB3cml0YWJsZSB1bmRlcmx5aW5nIGNv
bm5odHRwMjogaW52YWxpZCA6cHJvdG9jb2wgaGVhZGVyIGluIG5vbi1DT05ORUNU
IHJlcXVlc3RuZXQvaHR0cDogY2FuJ3Qgd3JpdGUgY29udHJvbCBjaGFyYWN0ZXIg
aW4gUmVxdWVzdC5VUkx4bWw6IG5hbWVzcGFjZSB3aXRob3V0IG5hbWUgaW4gZmll
bGQgJXMgb2YgdHlwZSAlczogJXFuYW1lIGlzIG5vdCBpbiBjYW5vbmljYWwgZm9y
bWF0IChpdCBtdXN0IGVuZCB3aXRoIGEgLilhcmNoLXNwZWNpZmljIGNyYzMyIGlu
c3RydWN0aW9uIGZvciBJRUVFIG5vdCBhdmFpbGFibGVFbWFpbCByZWplY3RlZCBk
dWUgdG8gYXR0YWNobWVudDogJXMgKEZyb206ICVzLCBUbzogJXMpQ2FuJ3QgcHJv
Y2VzcyBtdWx0aXBhcnQvYWx0ZXJuYXRpdmUgaW5uZXIgbWltZSB0eXBlOiAlc2J1
ZmlvLlNjYW5uZXI6IFNwbGl0RnVuYyByZXR1cm5zIG5lZ2F0aXZlIGFkdmFuY2Ug
Y291bnRyZWZsZWN0OiBpbnRlcm5hbCBlcnJvcjogaW52YWxpZCB1c2Ugb2YgbWFr
ZU1ldGhvZFZhbHVlbWhlYXAuZnJlZVNwYW5Mb2NrZWQgLSBpbnZhbGlkIGZyZWUg
b2YgdXNlciBhcmVuYSBjaHVua2Nhc2Zyb21fR3NjYW5zdGF0dXM6dG9wIGdwLT5z
dGF0dXMgaXMgbm90IGluIHNjYW4gc3RhdGV0bHM6IGludGVybmFsIGVycm9yOiBo
YW5kc2hha2Ugc2hvdWxkIGhhdmUgaGFkIGEgcmVzdWx0eDUwOTogYXV0aG9yaXR5
IGluZm8gYWNjZXNzIGluY29ycmVjdGx5IG1hcmtlZCBjcml0aWNhbHg1MDk6IHRv
byBtYW55IGludGVybWVkaWF0ZXMgZm9yIHBhdGggbGVuZ3RoIGNvbnN0cmFpbnR4
NTA5OiBmYWlsZWQgdG8gbG9hZCBzeXN0ZW0gcm9vdHMgYW5kIG5vIHJvb3RzIHBy
b3ZpZGVkbmV0L2h0dHA6IHJlcXVlc3QgY2FuY2VsZWQgd2hpbGUgd2FpdGluZyBm
b3IgY29ubmVjdGlvbm5ldC9odHRwOiBpbnZhbGlkIGJ5dGUgJXEgaW4gJXM7IGRy
b3BwaW5nIGludmFsaWQgYnl0ZXNodHRwMjogVHJhbnNwb3J0IHJlY2VpdmVkIEdP
QVdBWSBmcm9tIHNlcnZlciBFcnJDb2RlOiV2ZWFjaCBjb2xvbi1zZXBhcmF0ZWQg
ZmllbGQgbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSBkaWdpdGVjZHNhOiBpbnRlcm5h
bCBlcnJvcjogc2hpZnQgY2FuIG9ubHkgYmUgYnkgMSB0byA3IGJpdHNjaXBoZXIu
TmV3Q0JDRW5jcnlwdGVyOiBJViBsZW5ndGggbXVzdCBlcXVhbCBibG9jayBzaXpl
Y2lwaGVyLk5ld0NCQ0RlY3J5cHRlcjogSVYgbGVuZ3RoIG11c3QgZXF1YWwgYmxv
Y2sgc2l6ZWVkd2FyZHMyNTUxOTogaW52YWxpZCBTZXRCeXRlc1dpdGhDbGFtcGlu
ZyBpbnB1dCBsZW5ndGhFbWFpbCByZWplY3RlZDogJXMgKFNjb3JlOiAlZCwgRnJv
bTogJXMsIFRvOiAlcywgSVA6ICVzKXN0cmluZ3M6IGlsbGVnYWwgdXNlIG9mIG5v
bi16ZXJvIEJ1aWxkZXIgY29waWVkIGJ5IHZhbHVlbm9uLWVtcHR5IHBvaW50ZXIg
bWFwIHBhc3NlZCBmb3Igbm9uLXBvaW50ZXItc2l6ZSB2YWx1ZXNyYW5nZSBmdW5j
dGlvbiBjb250aW51ZWQgaXRlcmF0aW9uIGFmdGVyIGxvb3AgYm9keSBwYW5pY3Jh
bmdlIGZ1bmN0aW9uIGNvbnRpbnVlZCBpdGVyYXRpb24gYWZ0ZXIgd2hvbGUgbG9v
cCBleGl0cHJvZmlsZWFsbG9jIGNhbGxlZCB3aXRob3V0IGEgUCBvciBvdXRzaWRl
IGJvb3RzdHJhcHBpbmdpbiBnY01hcmsgZXhwZWN0aW5nIHRvIHNlZSBnY3BoYXNl
IGFzIF9HQ21hcmt0ZXJtaW5hdGlvbnJ1bnRpbWU6IG5ldHBvbGw6IGV2ZW50ZmQg
cmVhZHkgZm9yIHNvbWV0aGluZyB1bmV4cGVjdGVkc2VtYXBob3JlIHdha2Ugb2Yg
c3luY3Rlc3QgZ29yb3V0aW5lIGZyb20gb3V0c2lkZSBidWJibGV0bHM6IG5vIGNp
cGhlciBzdWl0ZSBzdXBwb3J0ZWQgYnkgYm90aCBjbGllbnQgYW5kIHNlcnZlcnRs
czogVExTIDEuMyBjbGllbnQgc3VwcG9ydHMgaWxsZWdhbCBjb21wcmVzc2lvbiBt
ZXRob2RzeDUwOTogc3ViamVjdCBrZXkgaWRlbnRpZmllciBpbmNvcnJlY3RseSBt
YXJrZWQgY3JpdGljYWx4NTA5OiBpbnRlcm5hbCBlcnJvcjogZW1wdHkgY2hhaW4g
d2hlbiBhcHBlbmRpbmcgQ0EgY2VydHB0ckVuY29kZXIuZW5jb2RlIHNob3VsZCBo
YXZlIGVtcHRpZWQgcHRyU2VlbiB2aWEgZGVmZXJzaHR0cDI6IHJlcXVlc3QgYm9k
eSBsYXJnZXIgdGhhbiBzcGVjaWZpZWQgY29udGVudCBsZW5ndGhodHRwMjogcmVz
cG9uc2UgaGVhZGVyIGxpc3QgbGFyZ2VyIHRoYW4gYWR2ZXJ0aXNlZCBsaW1pdGh0
dHA6IFJlcXVlc3QuUmVxdWVzdFVSSSBjYW4ndCBiZSBzZXQgaW4gY2xpZW50IHJl
cXVlc3RzbmV0L2h0dHA6IFRyYW5zcG9ydC5EaWFsQ29udGV4dCBob29rIHJldHVy
bmVkIChuaWwsIG5pbCl4bWw6ICVzLlVubWFyc2hhbFhNTCBkaWQgbm90IGNvbnN1
bWUgZW50aXJlIDwlcz4gZWxlbWVudGI0MDUwYTg1MGMwNGIzYWJmNTQxMzI1NjUw
NDRiMGI3ZDdiZmQ4YmEyNzBiMzk0MzIzNTVmZmI0YjcwZTBjYmQ2YmI0YmY3ZjMy
MTM5MGI5NGEwM2MxZDM1NmMyMTEyMjM0MzI4MGQ2MTE1YzFkMjFiZDM3NjM4OGI1
ZjcyM2ZiNGMyMmRmZTZjZDQzNzVhMDVhMDc0NzY0NDRkNTgxOTk4NTAwN2UzNGNy
eXB0by9jaXBoZXI6IGludGVybmFsIGVycm9yOiBnZW5lcmljIENCQyB1c2VkIHdp
dGggQUVTY3J5cHRvL2NpcGhlcjogaW50ZXJuYWwgZXJyb3I6IGdlbmVyaWMgQ1RS
IHVzZWQgd2l0aCBBRVNzeW5jOiBXYWl0R3JvdXAgbWlzdXNlOiBBZGQgY2FsbGVk
IGNvbmN1cnJlbnRseSB3aXRoIFdhaXRydW50aW1lOiBjaGVja21hcmtzIGZvdW5k
IHVuZXhwZWN0ZWQgdW5tYXJrZWQgb2JqZWN0IG9iaj1ydW50aW1lOiBmYWlsZWQg
dG8gZGlzYWJsZSBwcm9maWxpbmcgdGltZXI7IHRpbWVyX2RlbGV0ZShub24tR28g
Y29kZSBzZXQgdXAgc2lnbmFsIGhhbmRsZXIgd2l0aG91dCBTQV9PTlNUQUNLIGZs
YWd0bHM6IGNsaWVudCBzZW50IGludmFsaWQgZW5jcnlwdGVkX2NsaWVudF9oZWxs
byBleHRlbnNpb250bHM6IEVkMjU1MTkgcHVibGljIGtleXMgYXJlIG5vdCBzdXBw
b3J0ZWQgYmVmb3JlIFRMUyAxLjJyZWNlaXZlZCByZWNvcmQgd2l0aCB2ZXJzaW9u
ICV4IHdoZW4gZXhwZWN0aW5nIHZlcnNpb24gJXh0bHM6IHNlcnZlciBzZW50IGFu
IHVubmVjZXNzYXJ5IEhlbGxvUmV0cnlSZXF1ZXN0IG1lc3NhZ2V0bHM6IHNlcnZl
ciBzZWxlY3RlZCBhbiBpbnZhbGlkIFBTSyBhbmQgY2lwaGVyIHN1aXRlIHBhaXJ0
bHM6IG5vIGtleSBleGNoYW5nZXMgc3VwcG9ydGVkIGJ5IGJvdGggY2xpZW50IGFu
ZCBzZXJ2ZXJ0bHM6IGNsaWVudCBzZW50IGludmFsaWQgZW5jcnlwdGVkIGNsaWVu
dCBoZWxsbyBleHRlbnNpb25odHRwMjogVExTIGNvbm4gdW5leHBlY3RlZGx5IGZv
dW5kIGluIHVuZW5jcnlwdGVkIGhhbmRvZmZjcnlwdG8vY2lwaGVyOiBpbnZhbGlk
IGJ1ZmZlciBvdmVybGFwIG9mIG91dHB1dCBhbmQgaW5wdXRjcnlwdG8vZHJiZzog
aW50ZXJuYWwgZXJyb3I6IHJlcXVlc3Qgc2l6ZSBleGNlZWRzIG1heGltdW1ETlMg
cmVzcG9uc2UgY29udGFpbmVkIHJlY29yZHMgd2hpY2ggY29udGFpbiBpbnZhbGlk
IG5hbWVzdGxzOiBzZXJ2ZXIgY2hhbmdlZCBjaXBoZXIgc3VpdGUgYWZ0ZXIgYSBI
ZWxsb1JldHJ5UmVxdWVzdHg1MDk6IGF1dGhvcml0eSBrZXkgaWRlbnRpZmllciBp
bmNvcnJlY3RseSBtYXJrZWQgY3JpdGljYWx4NTA5OiBjZXJ0aWZpY2F0ZSBjb250
YWlucyBkdXBsaWNhdGUgZXh0ZW5zaW9uIHdpdGggT0lEICVxanNvbjogY2Fubm90
IHNldCBlbWJlZGRlZCBwb2ludGVyIHRvIHVuZXhwb3J0ZWQgc3RydWN0OiAldmh0
dHAyOiBjbGllbnQgY29ubmVjdGlvbiBmb3JjZSBjbG9zZWQgdmlhIENsaWVudENv
bm4uQ2xvc2V4bWw6IHVuc3VwcG9ydGVkIHZlcnNpb24gJXE7IG9ubHkgdmVyc2lv
biAxLjAgaXMgc3VwcG9ydGVkeG1sOiBlbmNvZGluZyAlcSBkZWNsYXJlZCBidXQg
RGVjb2Rlci5DaGFyc2V0UmVhZGVyIGlzIG5pbGNyeXB0by9lbGxpcHRpYzogU2Nh
bGFyTXVsdCB3YXMgY2FsbGVkIG9uIGFuIGludmFsaWQgcG9pbnRjcnlwdG8vZWNk
aDogYmFkIFgyNTUxOSByZW1vdGUgRUNESCBpbnB1dDogbG93IG9yZGVyIHBvaW50
c3luYzogV2FpdEdyb3VwIGlzIHJldXNlZCBiZWZvcmUgcHJldmlvdXMgV2FpdCBo
YXMgcmV0dXJuZWRidWZpby5TY2FubmVyOiBTcGxpdEZ1bmMgcmV0dXJucyBhZHZh
bmNlIGNvdW50IGJleW9uZCBpbnB1dHJlZmxlY3Q6IHJlZmxlY3QuVmFsdWUuRWxl
bSBvbiBhbiBpbnZhbGlkIG5vdGluaGVhcCBwb2ludGVycnVudGltZTogbW1hcDog
dG9vIG11Y2ggbG9ja2VkIG1lbW9yeSAoY2hlY2sgJ3VsaW1pdCAtbCcpLgp0cmll
ZCB0byB0cmFjZSBnb3JvdXRpbmUgd2l0aCBpbnZhbGlkIG9yIHVuc3VwcG9ydGVk
IHN0YXR1c3N5bmMvYXRvbWljOiBzdG9yZSBvZiBpbmNvbnNpc3RlbnRseSB0eXBl
ZCB2YWx1ZSBpbnRvIFZhbHVldGxzOiBzZXJ2ZXIgcmVzdW1lZCBhIHNlc3Npb24g
d2l0aCBhIGRpZmZlcmVudCBjaXBoZXIgc3VpdGV0bHM6IHNlcnZlciBzZWxlY3Rl
ZCBUTFMgMS4zIHVzaW5nIHRoZSBsZWdhY3kgdmVyc2lvbiBmaWVsZHRsczogc2Vy
dmVyIHNlbnQgYW4gdW5uZWNlc3NhcnkgSGVsbG9SZXRyeVJlcXVlc3Qga2V5X3No
YXJldGxzOiBjbGllbnQgZGlkbid0IHNlbmQgb25lIGtleSBzaGFyZSBpbiBzZWNv
bmQgQ2xpZW50SGVsbG90bHM6IGNsaWVudCBzZW50IHVuZXhwZWN0ZWQga2V5IHNo
YXJlIGluIHNlY29uZCBDbGllbnRIZWxsb2h0dHAyOiBUcmFuc3BvcnQgcmVjZWl2
ZWQgU2VydmVyJ3MgZ3JhY2VmdWwgc2h1dGRvd24gR09BV0FZUm91bmRUcmlwcGVy
IHJldHVybmVkIGEgcmVzcG9uc2UgJiBlcnJvcjsgaWdub3JpbmcgcmVzcG9uc2Ul
cyBmaWVsZCAlcSB3aXRoIHRhZyAlcSBjb25mbGljdHMgd2l0aCBmaWVsZCAlcSB3
aXRoIHRhZyAlcWVjZHNhOiBpbnRlcm5hbCBlcnJvcjogb3JkSW52ZXJzZSBwcm9k
dWNlZCBhbiBpbnZhbGlkIHZhbHVlY3J5cHRvL3JjNDogdXNlIG9mIFJDNCBpcyBu
b3QgYWxsb3dlZCBpbiBGSVBTIDE0MC1vbmx5IG1vZGVjcnlwdG8vZWNkaDogcHJp
dmF0ZSBrZXkgYW5kIHB1YmxpYyBrZXkgY3VydmVzIGRvIG5vdCBtYXRjaGNyeXB0
by9tZDU6IHVzZSBvZiBNRDUgaXMgbm90IGFsbG93ZWQgaW4gRklQUyAxNDAtb25s
eSBtb2RlY29tbWEtc2VwYXJhdGVkIGxpc3Qgb2YgZm9yYmlkZGVuIGF0dGFjaG1l
bnQgZmlsZSBleHRlbnNpb25zY2FsbGVkIENvbXBhcmVBbmREZWxldGUgd2hlbiB2
YWx1ZSBpcyBub3Qgb2YgY29tcGFyYWJsZSB0eXBlcmVmbGVjdDogY2FsbCBvZiBy
ZWZsZWN0LlZhbHVlLkxlbiBvbiBwdHIgdG8gbm9uLWFycmF5IFZhbHVlbWFudWFs
IHNwYW4gYWxsb2NhdGlvbiBjYWxsZWQgd2l0aCBub24tbWFudWFsbHktbWFuYWdl
ZCB0eXBlYWRkciByYW5nZSBiYXNlIGFuZCBsaW1pdCBhcmUgbm90IGluIHRoZSBz
YW1lIG1lbW9yeSBzZWdtZW50cnVudGltZTogZmFpbGVkIHRvIGNvbmZpZ3VyZSBw
cm9maWxpbmcgdGltZXI7IHRpbWVyX3NldHRpbWUocnVudGltZTogbWFsZm9ybWVk
IHByb2ZCdWYgYnVmZmVyIC0gdGFnIGFuZCBkYXRhIG91dCBvZiBzeW5jdGxzOiBu
byBzdXBwb3J0ZWQgdmVyc2lvbnMgc2F0aXNmeSBNaW5WZXJzaW9uIGFuZCBNYXhW
ZXJzaW9udGxzOiBpbml0aWFsIGhhbmRzaGFrZSBoYWQgbm9uLWVtcHR5IHJlbmVn
b3RpYXRpb24gZXh0ZW5zaW9udGxzOiBzZXJ2ZXIgcmVzdW1lZCBhIHNlc3Npb24g
d2l0aCBhIGRpZmZlcmVudCBFTVMgZXh0ZW5zaW9udGxzOiBjbGllbnQgcmVxdWVz
dGVkIHVuc3VwcG9ydGVkIGFwcGxpY2F0aW9uIHByb3RvY29scyAoJXMpIChDbGll
bnQuVGltZW91dCBvciBjb250ZXh0IGNhbmNlbGxhdGlvbiB3aGlsZSByZWFkaW5n
IGJvZHkpbWFsZm9ybWVkIHJlc3BvbnNlIGZyb20gc2VydmVyOiBtaXNzaW5nIHN0
YXR1cyBwc2V1ZG8gaGVhZGVybmV0L2h0dHA6IHNlcnZlciByZXNwb25zZSBoZWFk
ZXJzIGV4Y2VlZGVkICVkIGJ5dGVzOyBhYm9ydGVkYXJjaC1zcGVjaWZpYyBjcmMz
MiBpbnN0cnVjdGlvbiBmb3IgQ2FzdGFnbm9saSBub3QgYXZhaWxhYmxlcmVmbGVj
dDogd3JvbmcgcmV0dXJuIGNvdW50IGZyb20gZnVuY3Rpb24gY3JlYXRlZCBieSBN
YWtlRnVuY3J1bnRpbWU6IG1heSBuZWVkIHRvIGluY3JlYXNlIG1heCB1c2VyIHBy
b2Nlc3NlcyAodWxpbWl0IC11KQp0bHM6IHVuc3VwcG9ydGVkIGNlcnRpZmljYXRl
OiBwcml2YXRlIGtleSBpcyAlVCwgZXhwZWN0ZWQgKiVUdGxzOiBFbmNyeXB0ZWRD
bGllbnRIZWxsb0NvbmZpZ0xpc3QgY29udGFpbnMgbm8gdmFsaWQgY29uZmlnc3Rs
czogc2VydmVyIHNlbnQgYSBTZXJ2ZXJIZWxsbyBleHRlbnNpb24gZm9yYmlkZGVu
IGluIFRMUyAxLjN0bHM6IGNsaWVudCBjZXJ0aWZpY2F0ZSB1c2VkIHdpdGggaW52
YWxpZCBzaWduYXR1cmUgYWxnb3JpdGhteDUwOTogZmFpbGVkIHRvIHBhcnNlIFVS
SSBjb25zdHJhaW50ICVxOiBjYW5ub3QgYmUgSVAgYWRkcmVzc25ldC9odHRwOiBp
bnZhbGlkIENvb2tpZS5Eb21haW4gJXE7IGRyb3BwaW5nIGRvbWFpbiBhdHRyaWJ1
dGVyZWZsZWN0OiByZWZsZWN0LlZhbHVlLlBvaW50ZXIgb24gYW4gaW52YWxpZCBu
b3RpbmhlYXAgcG9pbnRlcmZvdW5kIGJhZCBwb2ludGVyIGluIEdvIGhlYXAgKGlu
Y29ycmVjdCB1c2Ugb2YgdW5zYWZlIG9yIGNnbz8pbGltaXRlckV2ZW50LnN0b3A6
IGZvdW5kIHdyb25nIGV2ZW50IGluIHAncyBsaW1pdGVyIGV2ZW50IHNsb3RzbGlj
ZSBsZW5ndGggdG9vIHNob3J0IHRvIGNvbnZlcnQgdG8gYXJyYXkgb3IgcG9pbnRl
ciB0byBhcnJheXJ1bnRpbWU6IGludGVybmFsIGVycm9yOiBtaXN1c2Ugb2YgbG9j
a09TVGhyZWFkL3VubG9ja09TVGhyZWFkdGxzOiBzZXJ2ZXIgZGlkIG5vdCBzZW5k
IGEgcXVpY190cmFuc3BvcnRfcGFyYW1ldGVycyBleHRlbnNpb250bHM6IGNsaWVu
dCB1c2VkIHRoZSBsZWdhY3kgdmVyc2lvbiBmaWVsZCB0byBuZWdvdGlhdGUgVExT
IDEuM3RsczogY2xpZW50IGRpZCBub3Qgc2VuZCBhIHF1aWNfdHJhbnNwb3J0X3Bh
cmFtZXRlcnMgZXh0ZW5zaW9udGxzOiBjZXJ0aWZpY2F0ZSBjYW5ub3QgYmUgdXNl
ZCB3aXRoIHRoZSBzZWxlY3RlZCBjaXBoZXIgc3VpdGV4NTA5OiBjZXJ0aWZpY2F0
ZSBpcyBub3QgYXV0aG9yaXplZCB0byBzaWduIG90aGVyIGNlcnRpZmljYXRlc1VS
SSB3aXRoIGVtcHR5IGhvc3QgKCVxKSBjYW5ub3QgYmUgbWF0Y2hlZCBhZ2FpbnN0
IGNvbnN0cmFpbnRzaHR0cDI6IHJlcXVlc3QgaGVhZGVyIGxpc3QgbGFyZ2VyIHRo
YW4gcGVlcidzIGFkdmVydGlzZWQgbGltaXR0cnlpbmcgdG8gcHV0IGJhY2sgYnVm
ZmVyIG9mIHRoZSB3cm9uZyBzaXplIGluIHRoZSBjb3B5QnVmUG9vbGNyeXB0by9z
aGExOiB1c2Ugb2YgU0hBLTEgaXMgbm90IGFsbG93ZWQgaW4gRklQUyAxNDAtb25s
eSBtb2RlMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVG
R0hJSktMTU5PUFFSU1RVVldYWVppbnRlcm5hbC9zeW5jLkhhc2hUcmllTWFwOiBy
YW4gb3V0IG9mIGhhc2ggYml0cyB3aGlsZSBpdGVyYXRpbmdpbnRlcm5hbC9zeW5j
Lkhhc2hUcmllTWFwOiByYW4gb3V0IG9mIGhhc2ggYml0cyB3aGlsZSBpbnNlcnRp
bmdtYWxmb3JtZWQgR09NRU1MSU1JVDsgc2VlIGBnbyBkb2MgcnVudGltZS9kZWJ1
Zy5TZXRNZW1vcnlMaW1pdGBTZXRTdGF0dXMgaXMgY2FsbGVkIGZvciByZWNpcGll
bnQgdGhhdCB3YXMgbm90IHNwZWNpZmllZCBiZWZvcmV0bHM6IHVuZXhwZWN0ZWQg
ZW5jcnlwdGVkIGNsaWVudCBoZWxsbyBleHRlbnNpb24gaW4gc2VydmVySGVsbG90
bHM6IHVuZXhwZWN0ZWQgc3dpdGNoIGluIGVuY3J5cHRlZCBjbGllbnQgaGVsbG8g
ZXh0ZW5zaW9uIHR5cGVjcnlwdG8vZWNkaDogdXNlIG9mIFgyNTUxOSBpcyBub3Qg
YWxsb3dlZCBpbiBGSVBTIDE0MC1vbmx5IG1vZGVpbnRlcm5hbCBlcnJvcjogZXhh
Y3RseSBvbmUgb2YgcmVzIG9yIGVyciBzaG91bGQgYmUgc2V0OyBuaWw9JXZjcnlw
dG9ieXRlOiBCdWlsZGVyQ29udGludWF0aW9uIHJlYWxsb2NhdGVkIGEgZml4ZWQt
c2l6ZSBidWZmZXJjcnlwdG8vZWNkaDogaW50ZXJuYWwgZXJyb3I6IHB1YmxpYyBr
ZXkgaXMgdGhlIGlkZW50aXR5IGVsZW1lbnRBQkNERUZHSElKS0xNTk9QUVJTVFVW
V1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvQUJDREVG
R0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAx
MjM0NTY3ODktX3J1bnRpbWUuU2V0RmluYWxpemVyOiBmaXJzdCBhcmd1bWVudCB3
YXMgYWxsb2NhdGVkIGludG8gYW4gYXJlbmFhdHRlbXB0ZWQgdG8gdHJhY2Ugc3Rh
Y2sgb2YgYSBnb3JvdXRpbmUgdGhpcyB0aHJlYWQgZG9lcyBub3Qgb3dudGxzOiBj
ZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBkb2VzIG5vdCBpbXBsZW1lbnQgY3J5cHRv
LkRlY3J5cHRlcmpzb246IGludmFsaWQgbnVtYmVyIGxpdGVyYWwsIHRyeWluZyB0
byB1bm1hcnNoYWwgJXEgaW50byBOdW1iZXI1YWM2MzVkOGFhM2E5M2U3YjNlYmJk
NTU3Njk4ODZiYzY1MWQwNmIwY2M1M2IwZjYzYmNlM2MzZTI3ZDI2MDRiNmIxN2Qx
ZjJlMTJjNDI0N2Y4YmNlNmU1NjNhNDQwZjI3NzAzN2Q4MTJkZWIzM2EwZjRhMTM5
NDVkODk4YzI5NjRmZTM0MmUyZmUxYTdmOWI4ZWU3ZWI0YTdjMGY5ZTE2MmJjZTMz
NTc2YjMxNWVjZWNiYjY0MDY4MzdiZjUxZjV1c2VyIGFyZW5hIGNodW5rIHNpemUg
aXMgbm90IGEgbXVsdGlwbGUgb2YgdGhlIHBoeXNpY2FsIHBhZ2Ugc2l6ZXJ1bnRp
bWUuU2V0RmluYWxpemVyOiBwb2ludGVyIG5vdCBhdCBiZWdpbm5pbmcgb2YgYWxs
b2NhdGVkIGJsb2NrdGxzOiBpbnRlcm5hbCBlcnJvcjogYXR0ZW1wdGVkIHRvIHJl
YWQgcmVjb3JkIHdpdGggUVVJQyB0cmFuc3BvcnR0bHM6IHNlcnZlciBzZWxlY3Rl
ZCBhbiBpbnZhbGlkIHZlcnNpb24gYWZ0ZXIgYSBIZWxsb1JldHJ5UmVxdWVzdHRs
czogc2Vzc2lvbiBzdXBwb3J0ZWQgZXh0ZW5kZWRfbWFzdGVyX3NlY3JldCBidXQg
Y2xpZW50IGRvZXMgbm90dGxzOiBzZWNvbmQgY2xpZW50IGhlbGxvIG1pc3Npbmcg
ZW5jcnlwdGVkIGNsaWVudCBoZWxsbyBleHRlbnNpb254NTA5OiBwb2xpY3kgY29u
